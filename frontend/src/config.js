export const CONTRACT_ADDRESS = "0x026bdeaeAE68306160c34310287C1bd1D9572F74";

export const CONTRACT_ABI = [
  {
    contractName: "DevToken",
    abi: [
      {
        inputs: [
          {
            internalType: "string",
            name: "token_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "short_symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "token_decimal",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "token_totalSupply",
            type: "uint256",
          },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            indexed: true,
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        name: "Approval",
        type: "event",
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousOwner",
            type: "address",
          },
          {
            indexed: true,
            internalType: "address",
            name: "newOwner",
            type: "address",
          },
        ],
        name: "OwnershipTransferred",
        type: "event",
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        name: "Staked",
        type: "event",
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            indexed: true,
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        name: "Transfer",
        type: "event",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_staker",
            type: "address",
          },
        ],
        name: "hasStake",
        outputs: [
          {
            components: [
              {
                internalType: "uint256",
                name: "total_amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "user",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "since",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimable",
                    type: "uint256",
                  },
                ],
                internalType: "struct Stakable.Stake[]",
                name: "stakes",
                type: "tuple[]",
              },
            ],
            internalType: "struct Stakable.StakingSummary",
            name: "",
            type: "tuple",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address",
          },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [],
        name: "getTotalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "mint",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "burn",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [],
        name: "getOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256",
          },
        ],
        stateMutability: "view",
        type: "function",
        constant: true,
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool",
          },
        ],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "_amount",
            type: "uint256",
          },
        ],
        name: "stake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stake_index",
            type: "uint256",
          },
        ],
        name: "withdrawStake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
      },
    ],
    metadata:
      '{"compiler":{"version":"0.8.4+commit.c7e474f2"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"token_name","type":"string"},{"internalType":"string","name":"short_symbol","type":"string"},{"internalType":"uint8","name":"token_decimal","type":"uint8"},{"internalType":"uint256","name":"token_totalSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"}],"name":"hasStake","outputs":[{"components":[{"internalType":"uint256","name":"total_amount","type":"uint256"},{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"since","type":"uint256"},{"internalType":"uint256","name":"claimable","type":"uint256"}],"internalType":"struct Stakable.Stake[]","name":"stakes","type":"tuple[]"}],"internalType":"struct Stakable.StakingSummary","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"stake_index","type":"uint256"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"events":{"Staked(address,uint256,uint256,uint256)":{"notice":"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"}},"kind":"user","methods":{"hasStake(address)":{"notice":"hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"},"withdrawStake(uint256,uint256)":{"notice":"withdrawStake is used to withdraw stakes from the account holder"}},"version":1}},"settings":{"compilationTarget":{"project:/contracts/DevToken.sol":"DevToken"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"project:/contracts/DevToken.sol":{"keccak256":"0xfcc7e98c4b93210d7163c0811d938024b713a1f2f8362471af86a7f923edd4ec","license":"MIT","urls":["bzz-raw://bfb7ea52bda89d3879c62758404aadd06cf44c31de7418a67c0ea1d4e108f0ea","dweb:/ipfs/QmW1keQTqpAzifepiwjECvNnMp69V5477WhVVEHTJ4bm2y"]},"project:/contracts/Ownable.sol":{"keccak256":"0xfe5e3c0d75c3f9ed38c7f3d79927291750d54b6987ad46063343217662ca9fcc","license":"MIT","urls":["bzz-raw://80468db675024b41d2a99ecfed4d553f17e60294cd0f190e83bd8a632a46d0f1","dweb:/ipfs/QmbADUyWxjrR5Y1egBupkvNdvo8QeHzr2j4vWZbYoMHibU"]},"project:/contracts/Stakable.sol":{"keccak256":"0xf9c54ba16067e8ef4c804c1282628c694ba1d5e3323dc53b26d8ff7d2b938899","license":"MIT","urls":["bzz-raw://0579e3620eb91b9229040531d944b3d911e4c9bddadc35bbf1965a9ef2382025","dweb:/ipfs/QmVqEXU7AFCbuWnApsyg7vNDtx1JKhzRcnNxe7MXsudctU"]}},"version":1}',
    bytecode:
      "0x60806040526103e86003553480156200001757600080fd5b50604051620035873803806200358783398181016040528101906200003d919062000373565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180816001815401808255809150500390600052602060002090505083600790805190602001906200012d92919062000223565b5082600690805190602001906200014692919062000223565b5081600560006101000a81548160ff021916908360ff16021790555080600481905550600454600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60045460405162000211919062000422565b60405180910390a350505050620005fa565b8280546200023190620004eb565b90600052602060002090601f016020900481019282620002555760008555620002a1565b82601f106200027057805160ff1916838001178555620002a1565b82800160010185558215620002a1579182015b82811115620002a057825182559160200191906001019062000283565b5b509050620002b09190620002b4565b5090565b5b80821115620002cf576000816000905550600101620002b5565b5090565b6000620002ea620002e48462000468565b6200043f565b9050828152602081018484840111156200030357600080fd5b62000310848285620004b5565b509392505050565b600082601f8301126200032a57600080fd5b81516200033c848260208601620002d3565b91505092915050565b6000815190506200035681620005c6565b92915050565b6000815190506200036d81620005e0565b92915050565b600080600080608085870312156200038a57600080fd5b600085015167ffffffffffffffff811115620003a557600080fd5b620003b38782880162000318565b945050602085015167ffffffffffffffff811115620003d157600080fd5b620003df8782880162000318565b9350506040620003f2878288016200035c565b9250506060620004058782880162000345565b91505092959194509250565b6200041c816200049e565b82525050565b600060208201905062000439600083018462000411565b92915050565b60006200044b6200045e565b905062000459828262000521565b919050565b6000604051905090565b600067ffffffffffffffff82111562000486576200048562000586565b5b6200049182620005b5565b9050602081019050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620004d5578082015181840152602081019050620004b8565b83811115620004e5576000848401525b50505050565b600060028204905060018216806200050457607f821691505b602082108114156200051b576200051a62000557565b5b50919050565b6200052c82620005b5565b810181811067ffffffffffffffff821117156200054e576200054d62000586565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620005d1816200049e565b8114620005dd57600080fd5b50565b620005eb81620004a8565b8114620005f757600080fd5b50565b612f7d806200060a6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063c4e41b2211610071578063c4e41b221461036d578063dd62ed3e1461038b578063e73e14bf146103bb578063f1fdf469146103eb578063f2fde38b146104075761012c565b806395d89b41146102a35780639dc29fac146102c1578063a457c2d7146102f1578063a694fc3a14610321578063a9059cbb1461033d5761012c565b806340c10f19116100f457806340c10f19146101fd57806370a082311461022d578063715018a61461025d578063893d20e8146102675780638da5cb5b146102855761012c565b806306fdde0314610131578063095ea7b31461014f57806323b872dd1461017f578063313ce567146101af57806339509351146101cd575b600080fd5b610139610423565b60405161014691906125ba565b60405180910390f35b6101696004803603810190610164919061215e565b6104b5565b604051610176919061259f565b60405180910390f35b6101996004803603810190610194919061210f565b6104cc565b6040516101a6919061259f565b60405180910390f35b6101b7610635565b6040516101c49190612810565b60405180910390f35b6101e760048036038101906101e2919061215e565b61064c565b6040516101f4919061259f565b60405180910390f35b6102176004803603810190610212919061215e565b6106ea565b604051610224919061259f565b60405180910390f35b610247600480360381019061024291906120aa565b61078e565b60405161025491906127be565b60405180910390f35b6102656107d7565b005b61026f610923565b60405161027c9190612584565b60405180910390f35b61028d610932565b60405161029a9190612584565b60405180910390f35b6102ab61095b565b6040516102b891906125ba565b60405180910390f35b6102db60048036038101906102d6919061215e565b6109ed565b6040516102e8919061259f565b60405180910390f35b61030b6004803603810190610306919061215e565b610a91565b604051610318919061259f565b60405180910390f35b61033b6004803603810190610336919061219a565b610b2f565b005b6103576004803603810190610352919061215e565b610bc7565b604051610364919061259f565b60405180910390f35b610375610bde565b60405161038291906127be565b60405180910390f35b6103a560048036038101906103a091906120d3565b610be8565b6040516103b291906127be565b60405180910390f35b6103d560048036038101906103d091906120aa565b610c6f565b6040516103e2919061279c565b60405180910390f35b610405600480360381019061040091906121c3565b610f14565b005b610421600480360381019061041c91906120aa565b610f31565b005b60606007805461043290612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90612a1d565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c2338484610fcb565b6001905092915050565b600081600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561058d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105849061263c565b60405180910390fd5b610598848484611196565b61062a843384600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106259190612961565b610fcb565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006106e0338484600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106db9190612880565b610fcb565b6001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610771906125dc565b60405180910390fd5b610784838361140e565b6001905092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c906125dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061092d610932565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606006805461096a90612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461099690612a1d565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b5050505050905090565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a74906125dc565b60405180910390fd5b610a878383611557565b6001905092915050565b6000610b25338484600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b209190612961565b610fcb565b6001905092915050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba8906126bc565b60405180910390fd5b610bba8161175a565b610bc43382611557565b50565b6000610bd4338484611196565b6001905092915050565b6000600454905090565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c77612066565b6000806040518060400160405280600081526020016001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610d05577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b82821015610ddc57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610d36565b50505050815250905060005b816020015151811015610eff576000610e4483602001518381518110610e37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611965565b90508083602001518381518110610e84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151606001818152505082602001518281518110610ed1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015184610ee89190612880565b935050600181610ef89190612880565b9050610de8565b50818160000181815250508092505050919050565b6000610f2083836119a7565b9050610f2c338261140e565b505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb6906125dc565b60405180910390fd5b610fc881611da0565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561103b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110329061267c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a2906125fc565b60405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161118991906127be565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fd906126fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126d9061265c565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef9061275c565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113479190612961565b9250508190555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461139d9190612880565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161140191906127be565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561147e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114759061277c565b60405180910390fd5b80600460008282546114909190612880565b9250508190555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114e69190612880565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161154b91906127be565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be9061273c565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116409061269c565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116949190612961565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600460008282546116e99190612961565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161174e91906127be565b60405180910390a35050565b6000811161179d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117949061271c565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600042905060008214156117fb576117f833611f5b565b91505b60018281548110611835577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160010160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550503373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed848484604051611958939291906127d9565b60405180910390a2505050565b60006003548260200151610e108460400151426119829190612961565b61198c91906128d6565b6119969190612907565b6119a091906128d6565b9050919050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060018281548110611a28577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018481548110611a71577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505090508481602001511015611b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3e906126dc565b60405180910390fd5b6000611b5282611965565b9050858260200151611b649190612961565b826020018181525050600082602001511415611c525760018381548110611bb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018581548110611bfd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090555050611d89565b816020015160018481548110611c91577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018681548110611cda577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600101819055504260018481548110611d2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018681548110611d73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600201819055505b8086611d959190612880565b935050505092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e25906125dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e959061261c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001808160018154018082558091505003906000526020600020905050600060018080549050611f8d9190612961565b90508260018281548110611fca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080915050919050565b604051806040016040528060008152602001606081525090565b60008135905061208f81612f19565b92915050565b6000813590506120a481612f30565b92915050565b6000602082840312156120bc57600080fd5b60006120ca84828501612080565b91505092915050565b600080604083850312156120e657600080fd5b60006120f485828601612080565b925050602061210585828601612080565b9150509250929050565b60008060006060848603121561212457600080fd5b600061213286828701612080565b935050602061214386828701612080565b925050604061215486828701612095565b9150509250925092565b6000806040838503121561217157600080fd5b600061217f85828601612080565b925050602061219085828601612095565b9150509250929050565b6000602082840312156121ac57600080fd5b60006121ba84828501612095565b91505092915050565b600080604083850312156121d657600080fd5b60006121e485828601612095565b92505060206121f585828601612095565b9150509250929050565b600061220b83836124c5565b60808301905092915050565b61222081612995565b82525050565b61222f81612995565b82525050565b60006122408261283b565b61224a818561285e565b93506122558361282b565b8060005b8381101561228657815161226d88826121ff565b975061227883612851565b925050600181019050612259565b5085935050505092915050565b61229c816129a7565b82525050565b60006122ad82612846565b6122b7818561286f565b93506122c78185602086016129ea565b6122d081612adc565b840191505092915050565b60006122e8602b8361286f565b91506122f382612aed565b604082019050919050565b600061230b602c8361286f565b915061231682612b3c565b604082019050919050565b600061232e602b8361286f565b915061233982612b8b565b604082019050919050565b600061235160358361286f565b915061235c82612bda565b604082019050919050565b600061237460238361286f565b915061237f82612c29565b604082019050919050565b600061239760338361286f565b91506123a282612c78565b604082019050919050565b60006123ba60318361286f565b91506123c582612cc7565b604082019050919050565b60006123dd60298361286f565b91506123e882612d16565b604082019050919050565b600061240060338361286f565b915061240b82612d65565b604082019050919050565b600061242360258361286f565b915061242e82612db4565b604082019050919050565b600061244660148361286f565b915061245182612e03565b602082019050919050565b600061246960288361286f565b915061247482612e2c565b604082019050919050565b600061248c60358361286f565b915061249782612e7b565b604082019050919050565b60006124af60268361286f565b91506124ba82612eca565b604082019050919050565b6080820160008201516124db6000850182612217565b5060208201516124ee6020850182612557565b5060408201516125016040850182612557565b5060608201516125146060850182612557565b50505050565b60006040830160008301516125326000860182612557565b506020830151848203602086015261254a8282612235565b9150508091505092915050565b612560816129d3565b82525050565b61256f816129d3565b82525050565b61257e816129dd565b82525050565b60006020820190506125996000830184612226565b92915050565b60006020820190506125b46000830184612293565b92915050565b600060208201905081810360008301526125d481846122a2565b905092915050565b600060208201905081810360008301526125f5816122db565b9050919050565b60006020820190508181036000830152612615816122fe565b9050919050565b6000602082019050818103600083015261263581612321565b9050919050565b6000602082019050818103600083015261265581612344565b9050919050565b6000602082019050818103600083015261267581612367565b9050919050565b600060208201905081810360008301526126958161238a565b9050919050565b600060208201905081810360008301526126b5816123ad565b9050919050565b600060208201905081810360008301526126d5816123d0565b9050919050565b600060208201905081810360008301526126f5816123f3565b9050919050565b6000602082019050818103600083015261271581612416565b9050919050565b6000602082019050818103600083015261273581612439565b9050919050565b600060208201905081810360008301526127558161245c565b9050919050565b600060208201905081810360008301526127758161247f565b9050919050565b60006020820190508181036000830152612795816124a2565b9050919050565b600060208201905081810360008301526127b6818461251a565b905092915050565b60006020820190506127d36000830184612566565b92915050565b60006060820190506127ee6000830186612566565b6127fb6020830185612566565b6128086040830184612566565b949350505050565b60006020820190506128256000830184612575565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061288b826129d3565b9150612896836129d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156128cb576128ca612a4f565b5b828201905092915050565b60006128e1826129d3565b91506128ec836129d3565b9250826128fc576128fb612a7e565b5b828204905092915050565b6000612912826129d3565b915061291d836129d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561295657612955612a4f565b5b828202905092915050565b600061296c826129d3565b9150612977836129d3565b92508282101561298a57612989612a4f565b5b828203905092915050565b60006129a0826129b3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612a085780820151818401526020810190506129ed565b83811115612a17576000848401525b50505050565b60006002820490506001821680612a3557607f821691505b60208210811415612a4957612a48612aad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206f6e6c79206f6e7765722063616e2063616c6c2074686960008201527f732066756e6374696f6e2e000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a20617070726f76652063616e6e6f7420626520746f207a60008201527f65726f20616464726573732e0000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f6e65722063616e277420626520746865207260008201527f657a6f2061646472657373000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a20596f752063616e6e6f74207370656e6420746861742060008201527f6d756368206f6e2074686973206163636f756e742e0000000000000000000000602082015250565b7f446576546f6b656e3a207472616e7366657220746f207a65726f20616464726560008201527f73732e0000000000000000000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a20617070726f76652063616e6e6f7420626520646f6e6560008201527f2066726f6d207a65726f20616464726573732e00000000000000000000000000602082015250565b7f446576546f6b656e3a2043616e6e6f74206275726e206d6f7265207468616e2060008201527f746865206163636f756e74206f776e732e000000000000000000000000000000602082015250565b7f446576546f6b656e3a2043616e6e6f74207374616b65206d6f7265207468616e60008201527f20796f75206f776e2e0000000000000000000000000000000000000000000000602082015250565b7f5374616b696e673a2043616e6e6f74207769746864726177206d6f726520746860008201527f616e20796f752068617665207374616b65642e00000000000000000000000000602082015250565b7f446576546f6b656e3a207472616e736665722066726f6d207a65726f2061646460008201527f726573732e000000000000000000000000000000000000000000000000000000602082015250565b7f43616e6e6f74207374616b65206e6f7468696e67000000000000000000000000600082015250565b7f446576546f6b656e3a2063616e6e6f74206275726e2066726f6d207a65726f2060008201527f616464726573732e000000000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a2063616e74207472616e73666572206d6f72652074686160008201527f6e20796f7572206163636f756e7420686f6c64732e0000000000000000000000602082015250565b7f446576546f6b656e3a2063616e6e6f74206d696e7420746f207a65726f20616460008201527f64726573732e0000000000000000000000000000000000000000000000000000602082015250565b612f2281612995565b8114612f2d57600080fd5b50565b612f39816129d3565b8114612f4457600080fd5b5056fea264697066735822122094ec4e123cf11f79ac2972faf91c843cb396743510d19e1376a761f1e8c0bcfb64736f6c63430008040033",
    deployedBytecode:
      "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063c4e41b2211610071578063c4e41b221461036d578063dd62ed3e1461038b578063e73e14bf146103bb578063f1fdf469146103eb578063f2fde38b146104075761012c565b806395d89b41146102a35780639dc29fac146102c1578063a457c2d7146102f1578063a694fc3a14610321578063a9059cbb1461033d5761012c565b806340c10f19116100f457806340c10f19146101fd57806370a082311461022d578063715018a61461025d578063893d20e8146102675780638da5cb5b146102855761012c565b806306fdde0314610131578063095ea7b31461014f57806323b872dd1461017f578063313ce567146101af57806339509351146101cd575b600080fd5b610139610423565b60405161014691906125ba565b60405180910390f35b6101696004803603810190610164919061215e565b6104b5565b604051610176919061259f565b60405180910390f35b6101996004803603810190610194919061210f565b6104cc565b6040516101a6919061259f565b60405180910390f35b6101b7610635565b6040516101c49190612810565b60405180910390f35b6101e760048036038101906101e2919061215e565b61064c565b6040516101f4919061259f565b60405180910390f35b6102176004803603810190610212919061215e565b6106ea565b604051610224919061259f565b60405180910390f35b610247600480360381019061024291906120aa565b61078e565b60405161025491906127be565b60405180910390f35b6102656107d7565b005b61026f610923565b60405161027c9190612584565b60405180910390f35b61028d610932565b60405161029a9190612584565b60405180910390f35b6102ab61095b565b6040516102b891906125ba565b60405180910390f35b6102db60048036038101906102d6919061215e565b6109ed565b6040516102e8919061259f565b60405180910390f35b61030b6004803603810190610306919061215e565b610a91565b604051610318919061259f565b60405180910390f35b61033b6004803603810190610336919061219a565b610b2f565b005b6103576004803603810190610352919061215e565b610bc7565b604051610364919061259f565b60405180910390f35b610375610bde565b60405161038291906127be565b60405180910390f35b6103a560048036038101906103a091906120d3565b610be8565b6040516103b291906127be565b60405180910390f35b6103d560048036038101906103d091906120aa565b610c6f565b6040516103e2919061279c565b60405180910390f35b610405600480360381019061040091906121c3565b610f14565b005b610421600480360381019061041c91906120aa565b610f31565b005b60606007805461043290612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90612a1d565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b5050505050905090565b60006104c2338484610fcb565b6001905092915050565b600081600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561058d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105849061263c565b60405180910390fd5b610598848484611196565b61062a843384600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106259190612961565b610fcb565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006106e0338484600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106db9190612880565b610fcb565b6001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610771906125dc565b60405180910390fd5b610784838361140e565b6001905092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c906125dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061092d610932565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606006805461096a90612a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461099690612a1d565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b5050505050905090565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a74906125dc565b60405180910390fd5b610a878383611557565b6001905092915050565b6000610b25338484600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b209190612961565b610fcb565b6001905092915050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610bb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba8906126bc565b60405180910390fd5b610bba8161175a565b610bc43382611557565b50565b6000610bd4338484611196565b6001905092915050565b6000600454905090565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c77612066565b6000806040518060400160405280600081526020016001600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110610d05577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b82821015610ddc57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610d36565b50505050815250905060005b816020015151811015610eff576000610e4483602001518381518110610e37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611965565b90508083602001518381518110610e84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151606001818152505082602001518281518110610ed1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516020015184610ee89190612880565b935050600181610ef89190612880565b9050610de8565b50818160000181815250508092505050919050565b6000610f2083836119a7565b9050610f2c338261140e565b505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb6906125dc565b60405180910390fd5b610fc881611da0565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561103b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110329061267c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a2906125fc565b60405180910390fd5b80600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161118991906127be565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fd906126fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126d9061265c565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef9061275c565b60405180910390fd5b80600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113479190612961565b9250508190555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461139d9190612880565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161140191906127be565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561147e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114759061277c565b60405180910390fd5b80600460008282546114909190612880565b9250508190555080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114e69190612880565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161154b91906127be565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be9061273c565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116409061269c565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116949190612961565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600460008282546116e99190612961565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161174e91906127be565b60405180910390a35050565b6000811161179d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117949061271c565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600042905060008214156117fb576117f833611f5b565b91505b60018281548110611835577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160010160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550503373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed848484604051611958939291906127d9565b60405180910390a2505050565b60006003548260200151610e108460400151426119829190612961565b61198c91906128d6565b6119969190612907565b6119a091906128d6565b9050919050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600060018281548110611a28577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018481548110611a71577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505090508481602001511015611b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3e906126dc565b60405180910390fd5b6000611b5282611965565b9050858260200151611b649190612961565b826020018181525050600082602001511415611c525760018381548110611bb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018581548110611bfd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090555050611d89565b816020015160018481548110611c91577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018681548110611cda577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600101819055504260018481548110611d2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001018681548110611d73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600201819055505b8086611d959190612880565b935050505092915050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e25906125dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e959061261c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006001808160018154018082558091505003906000526020600020905050600060018080549050611f8d9190612961565b90508260018281548110611fca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080915050919050565b604051806040016040528060008152602001606081525090565b60008135905061208f81612f19565b92915050565b6000813590506120a481612f30565b92915050565b6000602082840312156120bc57600080fd5b60006120ca84828501612080565b91505092915050565b600080604083850312156120e657600080fd5b60006120f485828601612080565b925050602061210585828601612080565b9150509250929050565b60008060006060848603121561212457600080fd5b600061213286828701612080565b935050602061214386828701612080565b925050604061215486828701612095565b9150509250925092565b6000806040838503121561217157600080fd5b600061217f85828601612080565b925050602061219085828601612095565b9150509250929050565b6000602082840312156121ac57600080fd5b60006121ba84828501612095565b91505092915050565b600080604083850312156121d657600080fd5b60006121e485828601612095565b92505060206121f585828601612095565b9150509250929050565b600061220b83836124c5565b60808301905092915050565b61222081612995565b82525050565b61222f81612995565b82525050565b60006122408261283b565b61224a818561285e565b93506122558361282b565b8060005b8381101561228657815161226d88826121ff565b975061227883612851565b925050600181019050612259565b5085935050505092915050565b61229c816129a7565b82525050565b60006122ad82612846565b6122b7818561286f565b93506122c78185602086016129ea565b6122d081612adc565b840191505092915050565b60006122e8602b8361286f565b91506122f382612aed565b604082019050919050565b600061230b602c8361286f565b915061231682612b3c565b604082019050919050565b600061232e602b8361286f565b915061233982612b8b565b604082019050919050565b600061235160358361286f565b915061235c82612bda565b604082019050919050565b600061237460238361286f565b915061237f82612c29565b604082019050919050565b600061239760338361286f565b91506123a282612c78565b604082019050919050565b60006123ba60318361286f565b91506123c582612cc7565b604082019050919050565b60006123dd60298361286f565b91506123e882612d16565b604082019050919050565b600061240060338361286f565b915061240b82612d65565b604082019050919050565b600061242360258361286f565b915061242e82612db4565b604082019050919050565b600061244660148361286f565b915061245182612e03565b602082019050919050565b600061246960288361286f565b915061247482612e2c565b604082019050919050565b600061248c60358361286f565b915061249782612e7b565b604082019050919050565b60006124af60268361286f565b91506124ba82612eca565b604082019050919050565b6080820160008201516124db6000850182612217565b5060208201516124ee6020850182612557565b5060408201516125016040850182612557565b5060608201516125146060850182612557565b50505050565b60006040830160008301516125326000860182612557565b506020830151848203602086015261254a8282612235565b9150508091505092915050565b612560816129d3565b82525050565b61256f816129d3565b82525050565b61257e816129dd565b82525050565b60006020820190506125996000830184612226565b92915050565b60006020820190506125b46000830184612293565b92915050565b600060208201905081810360008301526125d481846122a2565b905092915050565b600060208201905081810360008301526125f5816122db565b9050919050565b60006020820190508181036000830152612615816122fe565b9050919050565b6000602082019050818103600083015261263581612321565b9050919050565b6000602082019050818103600083015261265581612344565b9050919050565b6000602082019050818103600083015261267581612367565b9050919050565b600060208201905081810360008301526126958161238a565b9050919050565b600060208201905081810360008301526126b5816123ad565b9050919050565b600060208201905081810360008301526126d5816123d0565b9050919050565b600060208201905081810360008301526126f5816123f3565b9050919050565b6000602082019050818103600083015261271581612416565b9050919050565b6000602082019050818103600083015261273581612439565b9050919050565b600060208201905081810360008301526127558161245c565b9050919050565b600060208201905081810360008301526127758161247f565b9050919050565b60006020820190508181036000830152612795816124a2565b9050919050565b600060208201905081810360008301526127b6818461251a565b905092915050565b60006020820190506127d36000830184612566565b92915050565b60006060820190506127ee6000830186612566565b6127fb6020830185612566565b6128086040830184612566565b949350505050565b60006020820190506128256000830184612575565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061288b826129d3565b9150612896836129d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156128cb576128ca612a4f565b5b828201905092915050565b60006128e1826129d3565b91506128ec836129d3565b9250826128fc576128fb612a7e565b5b828204905092915050565b6000612912826129d3565b915061291d836129d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561295657612955612a4f565b5b828202905092915050565b600061296c826129d3565b9150612977836129d3565b92508282101561298a57612989612a4f565b5b828203905092915050565b60006129a0826129b3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612a085780820151818401526020810190506129ed565b83811115612a17576000848401525b50505050565b60006002820490506001821680612a3557607f821691505b60208210811415612a4957612a48612aad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206f6e6c79206f6e7765722063616e2063616c6c2074686960008201527f732066756e6374696f6e2e000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a20617070726f76652063616e6e6f7420626520746f207a60008201527f65726f20616464726573732e0000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f6e65722063616e277420626520746865207260008201527f657a6f2061646472657373000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a20596f752063616e6e6f74207370656e6420746861742060008201527f6d756368206f6e2074686973206163636f756e742e0000000000000000000000602082015250565b7f446576546f6b656e3a207472616e7366657220746f207a65726f20616464726560008201527f73732e0000000000000000000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a20617070726f76652063616e6e6f7420626520646f6e6560008201527f2066726f6d207a65726f20616464726573732e00000000000000000000000000602082015250565b7f446576546f6b656e3a2043616e6e6f74206275726e206d6f7265207468616e2060008201527f746865206163636f756e74206f776e732e000000000000000000000000000000602082015250565b7f446576546f6b656e3a2043616e6e6f74207374616b65206d6f7265207468616e60008201527f20796f75206f776e2e0000000000000000000000000000000000000000000000602082015250565b7f5374616b696e673a2043616e6e6f74207769746864726177206d6f726520746860008201527f616e20796f752068617665207374616b65642e00000000000000000000000000602082015250565b7f446576546f6b656e3a207472616e736665722066726f6d207a65726f2061646460008201527f726573732e000000000000000000000000000000000000000000000000000000602082015250565b7f43616e6e6f74207374616b65206e6f7468696e67000000000000000000000000600082015250565b7f446576546f6b656e3a2063616e6e6f74206275726e2066726f6d207a65726f2060008201527f616464726573732e000000000000000000000000000000000000000000000000602082015250565b7f446576546f6b656e3a2063616e74207472616e73666572206d6f72652074686160008201527f6e20796f7572206163636f756e7420686f6c64732e0000000000000000000000602082015250565b7f446576546f6b656e3a2063616e6e6f74206d696e7420746f207a65726f20616460008201527f64726573732e0000000000000000000000000000000000000000000000000000602082015250565b612f2281612995565b8114612f2d57600080fd5b50565b612f39816129d3565b8114612f4457600080fd5b5056fea264697066735822122094ec4e123cf11f79ac2972faf91c843cb396743510d19e1376a761f1e8c0bcfb64736f6c63430008040033",
    immutableReferences: {},
    generatedSources: [
      {
        ast: {
          nodeType: "YulBlock",
          src: "0:4648:3",
          statements: [
            {
              body: {
                nodeType: "YulBlock",
                src: "102:259:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "112:75:3",
                    value: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "179:6:3",
                            },
                          ],
                          functionName: {
                            name: "array_allocation_size_t_string_memory_ptr",
                            nodeType: "YulIdentifier",
                            src: "137:41:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "137:49:3",
                        },
                      ],
                      functionName: {
                        name: "allocate_memory",
                        nodeType: "YulIdentifier",
                        src: "121:15:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "121:66:3",
                    },
                    variableNames: [
                      {
                        name: "array",
                        nodeType: "YulIdentifier",
                        src: "112:5:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "array",
                          nodeType: "YulIdentifier",
                          src: "203:5:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "210:6:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "196:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "196:21:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "196:21:3",
                  },
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "226:27:3",
                    value: {
                      arguments: [
                        {
                          name: "array",
                          nodeType: "YulIdentifier",
                          src: "241:5:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "248:4:3",
                          type: "",
                          value: "0x20",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "237:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "237:16:3",
                    },
                    variables: [
                      {
                        name: "dst",
                        nodeType: "YulTypedName",
                        src: "230:3:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "291:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "300:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "303:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "293:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "293:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "293:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "src",
                              nodeType: "YulIdentifier",
                              src: "272:3:3",
                            },
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "277:6:3",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "268:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "268:16:3",
                        },
                        {
                          name: "end",
                          nodeType: "YulIdentifier",
                          src: "286:3:3",
                        },
                      ],
                      functionName: {
                        name: "gt",
                        nodeType: "YulIdentifier",
                        src: "265:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "265:25:3",
                    },
                    nodeType: "YulIf",
                    src: "262:2:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "src",
                          nodeType: "YulIdentifier",
                          src: "338:3:3",
                        },
                        {
                          name: "dst",
                          nodeType: "YulIdentifier",
                          src: "343:3:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "348:6:3",
                        },
                      ],
                      functionName: {
                        name: "copy_memory_to_memory",
                        nodeType: "YulIdentifier",
                        src: "316:21:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "316:39:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "316:39:3",
                  },
                ],
              },
              name: "abi_decode_available_length_t_string_memory_ptr_fromMemory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "src",
                  nodeType: "YulTypedName",
                  src: "75:3:3",
                  type: "",
                },
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "80:6:3",
                  type: "",
                },
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "88:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "array",
                  nodeType: "YulTypedName",
                  src: "96:5:3",
                  type: "",
                },
              ],
              src: "7:354:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "454:215:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "503:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "512:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "515:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "505:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "505:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "505:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "482:6:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "490:4:3",
                                  type: "",
                                  value: "0x1f",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "478:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "478:17:3",
                            },
                            {
                              name: "end",
                              nodeType: "YulIdentifier",
                              src: "497:3:3",
                            },
                          ],
                          functionName: {
                            name: "slt",
                            nodeType: "YulIdentifier",
                            src: "474:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "474:27:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "467:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "467:35:3",
                    },
                    nodeType: "YulIf",
                    src: "464:2:3",
                  },
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "528:27:3",
                    value: {
                      arguments: [
                        {
                          name: "offset",
                          nodeType: "YulIdentifier",
                          src: "548:6:3",
                        },
                      ],
                      functionName: {
                        name: "mload",
                        nodeType: "YulIdentifier",
                        src: "542:5:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "542:13:3",
                    },
                    variables: [
                      {
                        name: "length",
                        nodeType: "YulTypedName",
                        src: "532:6:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "564:99:3",
                    value: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "offset",
                              nodeType: "YulIdentifier",
                              src: "636:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "644:4:3",
                              type: "",
                              value: "0x20",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "632:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "632:17:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "651:6:3",
                        },
                        {
                          name: "end",
                          nodeType: "YulIdentifier",
                          src: "659:3:3",
                        },
                      ],
                      functionName: {
                        name: "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                        nodeType: "YulIdentifier",
                        src: "573:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "573:90:3",
                    },
                    variableNames: [
                      {
                        name: "array",
                        nodeType: "YulIdentifier",
                        src: "564:5:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_t_string_memory_ptr_fromMemory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "offset",
                  nodeType: "YulTypedName",
                  src: "432:6:3",
                  type: "",
                },
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "440:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "array",
                  nodeType: "YulTypedName",
                  src: "448:5:3",
                  type: "",
                },
              ],
              src: "381:288:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "738:80:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "748:22:3",
                    value: {
                      arguments: [
                        {
                          name: "offset",
                          nodeType: "YulIdentifier",
                          src: "763:6:3",
                        },
                      ],
                      functionName: {
                        name: "mload",
                        nodeType: "YulIdentifier",
                        src: "757:5:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "757:13:3",
                    },
                    variableNames: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "748:5:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "806:5:3",
                        },
                      ],
                      functionName: {
                        name: "validator_revert_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "779:26:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "779:33:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "779:33:3",
                  },
                ],
              },
              name: "abi_decode_t_uint256_fromMemory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "offset",
                  nodeType: "YulTypedName",
                  src: "716:6:3",
                  type: "",
                },
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "724:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "732:5:3",
                  type: "",
                },
              ],
              src: "675:143:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "885:78:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "895:22:3",
                    value: {
                      arguments: [
                        {
                          name: "offset",
                          nodeType: "YulIdentifier",
                          src: "910:6:3",
                        },
                      ],
                      functionName: {
                        name: "mload",
                        nodeType: "YulIdentifier",
                        src: "904:5:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "904:13:3",
                    },
                    variableNames: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "895:5:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "951:5:3",
                        },
                      ],
                      functionName: {
                        name: "validator_revert_t_uint8",
                        nodeType: "YulIdentifier",
                        src: "926:24:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "926:31:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "926:31:3",
                  },
                ],
              },
              name: "abi_decode_t_uint8_fromMemory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "offset",
                  nodeType: "YulTypedName",
                  src: "863:6:3",
                  type: "",
                },
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "871:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "879:5:3",
                  type: "",
                },
              ],
              src: "824:139:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "1115:815:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "1162:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1171:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1174:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "1164:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1164:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "1164:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1136:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "1145:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "1132:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1132:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1157:3:3",
                          type: "",
                          value: "128",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "1128:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "1128:33:3",
                    },
                    nodeType: "YulIf",
                    src: "1125:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1188:224:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1203:38:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1227:9:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "1238:1:3",
                                  type: "",
                                  value: "0",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1223:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1223:17:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "1217:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1217:24:3",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1207:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "1288:16:3",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1297:1:3",
                                    type: "",
                                    value: "0",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1300:1:3",
                                    type: "",
                                    value: "0",
                                  },
                                ],
                                functionName: {
                                  name: "revert",
                                  nodeType: "YulIdentifier",
                                  src: "1290:6:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "1290:12:3",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "1290:12:3",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "offset",
                              nodeType: "YulIdentifier",
                              src: "1260:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1268:18:3",
                              type: "",
                              value: "0xffffffffffffffff",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "1257:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1257:30:3",
                        },
                        nodeType: "YulIf",
                        src: "1254:2:3",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1318:84:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1374:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1385:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1370:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1370:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1394:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_string_memory_ptr_fromMemory",
                            nodeType: "YulIdentifier",
                            src: "1328:41:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1328:74:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "1318:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1422:225:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1437:39:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1461:9:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "1472:2:3",
                                  type: "",
                                  value: "32",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1457:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1457:18:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "1451:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1451:25:3",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1441:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        body: {
                          nodeType: "YulBlock",
                          src: "1523:16:3",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1532:1:3",
                                    type: "",
                                    value: "0",
                                  },
                                  {
                                    kind: "number",
                                    nodeType: "YulLiteral",
                                    src: "1535:1:3",
                                    type: "",
                                    value: "0",
                                  },
                                ],
                                functionName: {
                                  name: "revert",
                                  nodeType: "YulIdentifier",
                                  src: "1525:6:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "1525:12:3",
                              },
                              nodeType: "YulExpressionStatement",
                              src: "1525:12:3",
                            },
                          ],
                        },
                        condition: {
                          arguments: [
                            {
                              name: "offset",
                              nodeType: "YulIdentifier",
                              src: "1495:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1503:18:3",
                              type: "",
                              value: "0xffffffffffffffff",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "1492:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1492:30:3",
                        },
                        nodeType: "YulIf",
                        src: "1489:2:3",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1553:84:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1609:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1620:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1605:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1605:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1629:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_string_memory_ptr_fromMemory",
                            nodeType: "YulIdentifier",
                            src: "1563:41:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1563:74:3",
                        },
                        variableNames: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "1553:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1657:127:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1672:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1686:2:3",
                          type: "",
                          value: "64",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1676:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1702:72:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1746:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1757:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1742:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1742:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1766:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint8_fromMemory",
                            nodeType: "YulIdentifier",
                            src: "1712:29:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1712:62:3",
                        },
                        variableNames: [
                          {
                            name: "value2",
                            nodeType: "YulIdentifier",
                            src: "1702:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1794:129:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1809:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1823:2:3",
                          type: "",
                          value: "96",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1813:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1839:74:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1885:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1896:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1881:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1881:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1905:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint256_fromMemory",
                            nodeType: "YulIdentifier",
                            src: "1849:31:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1849:64:3",
                        },
                        variableNames: [
                          {
                            name: "value3",
                            nodeType: "YulIdentifier",
                            src: "1839:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "1061:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "1072:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "1084:6:3",
                  type: "",
                },
                {
                  name: "value1",
                  nodeType: "YulTypedName",
                  src: "1092:6:3",
                  type: "",
                },
                {
                  name: "value2",
                  nodeType: "YulTypedName",
                  src: "1100:6:3",
                  type: "",
                },
                {
                  name: "value3",
                  nodeType: "YulTypedName",
                  src: "1108:6:3",
                  type: "",
                },
              ],
              src: "969:961:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2001:53:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "2018:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "2041:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "2023:17:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2023:24:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "2011:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2011:37:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "2011:37:3",
                  },
                ],
              },
              name: "abi_encode_t_uint256_to_t_uint256_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "1989:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "1996:3:3",
                  type: "",
                },
              ],
              src: "1936:118:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2158:124:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "2168:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "2180:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2191:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "2176:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2176:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "2168:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "2248:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "2261:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2272:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "2257:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2257:17:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                        nodeType: "YulIdentifier",
                        src: "2204:43:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2204:71:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "2204:71:3",
                  },
                ],
              },
              name: "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "2130:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "2142:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "2153:4:3",
                  type: "",
                },
              ],
              src: "2060:222:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2329:88:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "2339:30:3",
                    value: {
                      arguments: [],
                      functionName: {
                        name: "allocate_unbounded",
                        nodeType: "YulIdentifier",
                        src: "2349:18:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2349:20:3",
                    },
                    variableNames: [
                      {
                        name: "memPtr",
                        nodeType: "YulIdentifier",
                        src: "2339:6:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "memPtr",
                          nodeType: "YulIdentifier",
                          src: "2398:6:3",
                        },
                        {
                          name: "size",
                          nodeType: "YulIdentifier",
                          src: "2406:4:3",
                        },
                      ],
                      functionName: {
                        name: "finalize_allocation",
                        nodeType: "YulIdentifier",
                        src: "2378:19:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2378:33:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "2378:33:3",
                  },
                ],
              },
              name: "allocate_memory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "size",
                  nodeType: "YulTypedName",
                  src: "2313:4:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "2322:6:3",
                  type: "",
                },
              ],
              src: "2288:129:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2463:35:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "2473:19:3",
                    value: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2489:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "mload",
                        nodeType: "YulIdentifier",
                        src: "2483:5:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2483:9:3",
                    },
                    variableNames: [
                      {
                        name: "memPtr",
                        nodeType: "YulIdentifier",
                        src: "2473:6:3",
                      },
                    ],
                  },
                ],
              },
              name: "allocate_unbounded",
              nodeType: "YulFunctionDefinition",
              returnVariables: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "2456:6:3",
                  type: "",
                },
              ],
              src: "2423:75:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2571:241:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "2676:22:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x41",
                              nodeType: "YulIdentifier",
                              src: "2678:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2678:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "2678:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "2648:6:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2656:18:3",
                          type: "",
                          value: "0xffffffffffffffff",
                        },
                      ],
                      functionName: {
                        name: "gt",
                        nodeType: "YulIdentifier",
                        src: "2645:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2645:30:3",
                    },
                    nodeType: "YulIf",
                    src: "2642:2:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "2708:37:3",
                    value: {
                      arguments: [
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "2738:6:3",
                        },
                      ],
                      functionName: {
                        name: "round_up_to_mul_of_32",
                        nodeType: "YulIdentifier",
                        src: "2716:21:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2716:29:3",
                    },
                    variableNames: [
                      {
                        name: "size",
                        nodeType: "YulIdentifier",
                        src: "2708:4:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "2782:23:3",
                    value: {
                      arguments: [
                        {
                          name: "size",
                          nodeType: "YulIdentifier",
                          src: "2794:4:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2800:4:3",
                          type: "",
                          value: "0x20",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "2790:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2790:15:3",
                    },
                    variableNames: [
                      {
                        name: "size",
                        nodeType: "YulIdentifier",
                        src: "2782:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_allocation_size_t_string_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "2555:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "size",
                  nodeType: "YulTypedName",
                  src: "2566:4:3",
                  type: "",
                },
              ],
              src: "2504:308:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2863:32:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "2873:16:3",
                    value: {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "2884:5:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "2873:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "2845:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "2855:7:3",
                  type: "",
                },
              ],
              src: "2818:77:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2944:43:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "2954:27:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "2969:5:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2976:4:3",
                          type: "",
                          value: "0xff",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "2965:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2965:16:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "2954:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_uint8",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "2926:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "2936:7:3",
                  type: "",
                },
              ],
              src: "2901:86:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "3042:258:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "3052:10:3",
                    value: {
                      kind: "number",
                      nodeType: "YulLiteral",
                      src: "3061:1:3",
                      type: "",
                      value: "0",
                    },
                    variables: [
                      {
                        name: "i",
                        nodeType: "YulTypedName",
                        src: "3056:1:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "3121:63:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "dst",
                                    nodeType: "YulIdentifier",
                                    src: "3146:3:3",
                                  },
                                  {
                                    name: "i",
                                    nodeType: "YulIdentifier",
                                    src: "3151:1:3",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "3142:3:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "3142:11:3",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        name: "src",
                                        nodeType: "YulIdentifier",
                                        src: "3165:3:3",
                                      },
                                      {
                                        name: "i",
                                        nodeType: "YulIdentifier",
                                        src: "3170:1:3",
                                      },
                                    ],
                                    functionName: {
                                      name: "add",
                                      nodeType: "YulIdentifier",
                                      src: "3161:3:3",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "3161:11:3",
                                  },
                                ],
                                functionName: {
                                  name: "mload",
                                  nodeType: "YulIdentifier",
                                  src: "3155:5:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "3155:18:3",
                              },
                            ],
                            functionName: {
                              name: "mstore",
                              nodeType: "YulIdentifier",
                              src: "3135:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3135:39:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "3135:39:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "i",
                          nodeType: "YulIdentifier",
                          src: "3082:1:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "3085:6:3",
                        },
                      ],
                      functionName: {
                        name: "lt",
                        nodeType: "YulIdentifier",
                        src: "3079:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3079:13:3",
                    },
                    nodeType: "YulForLoop",
                    post: {
                      nodeType: "YulBlock",
                      src: "3093:19:3",
                      statements: [
                        {
                          nodeType: "YulAssignment",
                          src: "3095:15:3",
                          value: {
                            arguments: [
                              {
                                name: "i",
                                nodeType: "YulIdentifier",
                                src: "3104:1:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "3107:2:3",
                                type: "",
                                value: "32",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "3100:3:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3100:10:3",
                          },
                          variableNames: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "3095:1:3",
                            },
                          ],
                        },
                      ],
                    },
                    pre: {
                      nodeType: "YulBlock",
                      src: "3075:3:3",
                      statements: [],
                    },
                    src: "3071:113:3",
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "3218:76:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "dst",
                                    nodeType: "YulIdentifier",
                                    src: "3268:3:3",
                                  },
                                  {
                                    name: "length",
                                    nodeType: "YulIdentifier",
                                    src: "3273:6:3",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "3264:3:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "3264:16:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "3282:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "mstore",
                              nodeType: "YulIdentifier",
                              src: "3257:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3257:27:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "3257:27:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "i",
                          nodeType: "YulIdentifier",
                          src: "3199:1:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "3202:6:3",
                        },
                      ],
                      functionName: {
                        name: "gt",
                        nodeType: "YulIdentifier",
                        src: "3196:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3196:13:3",
                    },
                    nodeType: "YulIf",
                    src: "3193:2:3",
                  },
                ],
              },
              name: "copy_memory_to_memory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "src",
                  nodeType: "YulTypedName",
                  src: "3024:3:3",
                  type: "",
                },
                {
                  name: "dst",
                  nodeType: "YulTypedName",
                  src: "3029:3:3",
                  type: "",
                },
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "3034:6:3",
                  type: "",
                },
              ],
              src: "2993:307:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "3357:269:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "3367:22:3",
                    value: {
                      arguments: [
                        {
                          name: "data",
                          nodeType: "YulIdentifier",
                          src: "3381:4:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "3387:1:3",
                          type: "",
                          value: "2",
                        },
                      ],
                      functionName: {
                        name: "div",
                        nodeType: "YulIdentifier",
                        src: "3377:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3377:12:3",
                    },
                    variableNames: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "3367:6:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "3398:38:3",
                    value: {
                      arguments: [
                        {
                          name: "data",
                          nodeType: "YulIdentifier",
                          src: "3428:4:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "3434:1:3",
                          type: "",
                          value: "1",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "3424:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3424:12:3",
                    },
                    variables: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulTypedName",
                        src: "3402:18:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "3475:51:3",
                      statements: [
                        {
                          nodeType: "YulAssignment",
                          src: "3489:27:3",
                          value: {
                            arguments: [
                              {
                                name: "length",
                                nodeType: "YulIdentifier",
                                src: "3503:6:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "3511:4:3",
                                type: "",
                                value: "0x7f",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "3499:3:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3499:17:3",
                          },
                          variableNames: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "3489:6:3",
                            },
                          ],
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "outOfPlaceEncoding",
                          nodeType: "YulIdentifier",
                          src: "3455:18:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "3448:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3448:26:3",
                    },
                    nodeType: "YulIf",
                    src: "3445:2:3",
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "3578:42:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x22",
                              nodeType: "YulIdentifier",
                              src: "3592:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3592:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "3592:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "outOfPlaceEncoding",
                          nodeType: "YulIdentifier",
                          src: "3542:18:3",
                        },
                        {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "3565:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3573:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "lt",
                            nodeType: "YulIdentifier",
                            src: "3562:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3562:14:3",
                        },
                      ],
                      functionName: {
                        name: "eq",
                        nodeType: "YulIdentifier",
                        src: "3539:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3539:38:3",
                    },
                    nodeType: "YulIf",
                    src: "3536:2:3",
                  },
                ],
              },
              name: "extract_byte_array_length",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "data",
                  nodeType: "YulTypedName",
                  src: "3341:4:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "3350:6:3",
                  type: "",
                },
              ],
              src: "3306:320:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "3675:238:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "3685:58:3",
                    value: {
                      arguments: [
                        {
                          name: "memPtr",
                          nodeType: "YulIdentifier",
                          src: "3707:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "size",
                              nodeType: "YulIdentifier",
                              src: "3737:4:3",
                            },
                          ],
                          functionName: {
                            name: "round_up_to_mul_of_32",
                            nodeType: "YulIdentifier",
                            src: "3715:21:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3715:27:3",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "3703:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3703:40:3",
                    },
                    variables: [
                      {
                        name: "newFreePtr",
                        nodeType: "YulTypedName",
                        src: "3689:10:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "3854:22:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x41",
                              nodeType: "YulIdentifier",
                              src: "3856:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3856:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "3856:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "newFreePtr",
                              nodeType: "YulIdentifier",
                              src: "3797:10:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "3809:18:3",
                              type: "",
                              value: "0xffffffffffffffff",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "3794:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3794:34:3",
                        },
                        {
                          arguments: [
                            {
                              name: "newFreePtr",
                              nodeType: "YulIdentifier",
                              src: "3833:10:3",
                            },
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "3845:6:3",
                            },
                          ],
                          functionName: {
                            name: "lt",
                            nodeType: "YulIdentifier",
                            src: "3830:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3830:22:3",
                        },
                      ],
                      functionName: {
                        name: "or",
                        nodeType: "YulIdentifier",
                        src: "3791:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3791:62:3",
                    },
                    nodeType: "YulIf",
                    src: "3788:2:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "3892:2:3",
                          type: "",
                          value: "64",
                        },
                        {
                          name: "newFreePtr",
                          nodeType: "YulIdentifier",
                          src: "3896:10:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "3885:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3885:22:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "3885:22:3",
                  },
                ],
              },
              name: "finalize_allocation",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "3661:6:3",
                  type: "",
                },
                {
                  name: "size",
                  nodeType: "YulTypedName",
                  src: "3669:4:3",
                  type: "",
                },
              ],
              src: "3632:281:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "3947:152:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "3964:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "3967:77:3",
                          type: "",
                          value:
                            "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "3957:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3957:88:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "3957:88:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4061:1:3",
                          type: "",
                          value: "4",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4064:4:3",
                          type: "",
                          value: "0x22",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "4054:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4054:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4054:15:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4085:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4088:4:3",
                          type: "",
                          value: "0x24",
                        },
                      ],
                      functionName: {
                        name: "revert",
                        nodeType: "YulIdentifier",
                        src: "4078:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4078:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4078:15:3",
                  },
                ],
              },
              name: "panic_error_0x22",
              nodeType: "YulFunctionDefinition",
              src: "3919:180:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4133:152:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4150:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4153:77:3",
                          type: "",
                          value:
                            "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "4143:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4143:88:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4143:88:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4247:1:3",
                          type: "",
                          value: "4",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4250:4:3",
                          type: "",
                          value: "0x41",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "4240:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4240:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4240:15:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4271:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4274:4:3",
                          type: "",
                          value: "0x24",
                        },
                      ],
                      functionName: {
                        name: "revert",
                        nodeType: "YulIdentifier",
                        src: "4264:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4264:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4264:15:3",
                  },
                ],
              },
              name: "panic_error_0x41",
              nodeType: "YulFunctionDefinition",
              src: "4105:180:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4339:54:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "4349:38:3",
                    value: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "4367:5:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4374:2:3",
                              type: "",
                              value: "31",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "4363:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4363:14:3",
                        },
                        {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4383:2:3",
                              type: "",
                              value: "31",
                            },
                          ],
                          functionName: {
                            name: "not",
                            nodeType: "YulIdentifier",
                            src: "4379:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4379:7:3",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "4359:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4359:28:3",
                    },
                    variableNames: [
                      {
                        name: "result",
                        nodeType: "YulIdentifier",
                        src: "4349:6:3",
                      },
                    ],
                  },
                ],
              },
              name: "round_up_to_mul_of_32",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "4322:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "result",
                  nodeType: "YulTypedName",
                  src: "4332:6:3",
                  type: "",
                },
              ],
              src: "4291:102:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4442:79:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "4499:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "4508:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "4511:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "4501:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "4501:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "4501:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "4465:5:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "4490:5:3",
                                },
                              ],
                              functionName: {
                                name: "cleanup_t_uint256",
                                nodeType: "YulIdentifier",
                                src: "4472:17:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "4472:24:3",
                            },
                          ],
                          functionName: {
                            name: "eq",
                            nodeType: "YulIdentifier",
                            src: "4462:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4462:35:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "4455:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4455:43:3",
                    },
                    nodeType: "YulIf",
                    src: "4452:2:3",
                  },
                ],
              },
              name: "validator_revert_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "4435:5:3",
                  type: "",
                },
              ],
              src: "4399:122:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4568:77:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "4623:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "4632:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "4635:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "4625:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "4625:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "4625:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "4591:5:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "4614:5:3",
                                },
                              ],
                              functionName: {
                                name: "cleanup_t_uint8",
                                nodeType: "YulIdentifier",
                                src: "4598:15:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "4598:22:3",
                            },
                          ],
                          functionName: {
                            name: "eq",
                            nodeType: "YulIdentifier",
                            src: "4588:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4588:33:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "4581:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4581:41:3",
                    },
                    nodeType: "YulIf",
                    src: "4578:2:3",
                  },
                ],
              },
              name: "validator_revert_t_uint8",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "4561:5:3",
                  type: "",
                },
              ],
              src: "4527:118:3",
            },
          ],
        },
        contents:
          "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
        id: 3,
        language: "Yul",
        name: "#utility.yul",
      },
    ],
    deployedGeneratedSources: [
      {
        ast: {
          nodeType: "YulBlock",
          src: "0:27145:3",
          statements: [
            {
              body: {
                nodeType: "YulBlock",
                src: "59:87:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "69:29:3",
                    value: {
                      arguments: [
                        {
                          name: "offset",
                          nodeType: "YulIdentifier",
                          src: "91:6:3",
                        },
                      ],
                      functionName: {
                        name: "calldataload",
                        nodeType: "YulIdentifier",
                        src: "78:12:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "78:20:3",
                    },
                    variableNames: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "69:5:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "134:5:3",
                        },
                      ],
                      functionName: {
                        name: "validator_revert_t_address",
                        nodeType: "YulIdentifier",
                        src: "107:26:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "107:33:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "107:33:3",
                  },
                ],
              },
              name: "abi_decode_t_address",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "offset",
                  nodeType: "YulTypedName",
                  src: "37:6:3",
                  type: "",
                },
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "45:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "53:5:3",
                  type: "",
                },
              ],
              src: "7:139:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "204:87:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "214:29:3",
                    value: {
                      arguments: [
                        {
                          name: "offset",
                          nodeType: "YulIdentifier",
                          src: "236:6:3",
                        },
                      ],
                      functionName: {
                        name: "calldataload",
                        nodeType: "YulIdentifier",
                        src: "223:12:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "223:20:3",
                    },
                    variableNames: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "214:5:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "279:5:3",
                        },
                      ],
                      functionName: {
                        name: "validator_revert_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "252:26:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "252:33:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "252:33:3",
                  },
                ],
              },
              name: "abi_decode_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "offset",
                  nodeType: "YulTypedName",
                  src: "182:6:3",
                  type: "",
                },
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "190:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "198:5:3",
                  type: "",
                },
              ],
              src: "152:139:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "363:196:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "409:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "418:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "421:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "411:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "411:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "411:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "384:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "393:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "380:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "380:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "405:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "376:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "376:32:3",
                    },
                    nodeType: "YulIf",
                    src: "373:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "435:117:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "450:15:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "464:1:3",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "454:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "479:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "514:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "525:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "510:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "510:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "534:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_address",
                            nodeType: "YulIdentifier",
                            src: "489:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "489:53:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "479:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_address",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "333:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "344:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "356:6:3",
                  type: "",
                },
              ],
              src: "297:262:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "648:324:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "694:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "703:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "706:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "696:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "696:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "696:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "669:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "678:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "665:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "665:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "690:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "661:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "661:32:3",
                    },
                    nodeType: "YulIf",
                    src: "658:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "720:117:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "735:15:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "749:1:3",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "739:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "764:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "799:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "810:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "795:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "795:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "819:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_address",
                            nodeType: "YulIdentifier",
                            src: "774:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "774:53:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "764:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "847:118:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "862:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "876:2:3",
                          type: "",
                          value: "32",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "866:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "892:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "927:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "938:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "923:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "923:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "947:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_address",
                            nodeType: "YulIdentifier",
                            src: "902:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "902:53:3",
                        },
                        variableNames: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "892:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_addresst_address",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "610:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "621:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "633:6:3",
                  type: "",
                },
                {
                  name: "value1",
                  nodeType: "YulTypedName",
                  src: "641:6:3",
                  type: "",
                },
              ],
              src: "565:407:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "1078:452:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "1124:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1133:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1136:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "1126:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1126:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "1126:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1099:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "1108:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "1095:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1095:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1120:2:3",
                          type: "",
                          value: "96",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "1091:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "1091:32:3",
                    },
                    nodeType: "YulIf",
                    src: "1088:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1150:117:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1165:15:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1179:1:3",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1169:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1194:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1229:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1240:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1225:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1225:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1249:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_address",
                            nodeType: "YulIdentifier",
                            src: "1204:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1204:53:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "1194:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1277:118:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1292:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1306:2:3",
                          type: "",
                          value: "32",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1296:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1322:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1357:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1368:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1353:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1353:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1377:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_address",
                            nodeType: "YulIdentifier",
                            src: "1332:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1332:53:3",
                        },
                        variableNames: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "1322:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1405:118:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1420:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1434:2:3",
                          type: "",
                          value: "64",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1424:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1450:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1485:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1496:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1481:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1481:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1505:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "1460:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1460:53:3",
                        },
                        variableNames: [
                          {
                            name: "value2",
                            nodeType: "YulIdentifier",
                            src: "1450:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_addresst_addresst_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "1032:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "1043:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "1055:6:3",
                  type: "",
                },
                {
                  name: "value1",
                  nodeType: "YulTypedName",
                  src: "1063:6:3",
                  type: "",
                },
                {
                  name: "value2",
                  nodeType: "YulTypedName",
                  src: "1071:6:3",
                  type: "",
                },
              ],
              src: "978:552:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "1619:324:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "1665:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1674:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "1677:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "1667:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1667:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "1667:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1640:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "1649:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "1636:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1636:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1661:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "1632:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "1632:32:3",
                    },
                    nodeType: "YulIf",
                    src: "1629:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1691:117:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1706:15:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1720:1:3",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1710:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1735:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1770:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1781:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1766:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1766:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1790:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_address",
                            nodeType: "YulIdentifier",
                            src: "1745:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1745:53:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "1735:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "1818:118:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "1833:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "1847:2:3",
                          type: "",
                          value: "32",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "1837:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "1863:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "1898:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "1909:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "1894:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "1894:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "1918:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "1873:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1873:53:3",
                        },
                        variableNames: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "1863:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_addresst_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "1581:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "1592:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "1604:6:3",
                  type: "",
                },
                {
                  name: "value1",
                  nodeType: "YulTypedName",
                  src: "1612:6:3",
                  type: "",
                },
              ],
              src: "1536:407:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2015:196:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "2061:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2070:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2073:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "2063:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2063:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "2063:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "2036:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "2045:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "2032:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2032:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2057:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "2028:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2028:32:3",
                    },
                    nodeType: "YulIf",
                    src: "2025:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "2087:117:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "2102:15:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2116:1:3",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "2106:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "2131:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "2166:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "2177:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "2162:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "2162:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "2186:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "2141:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2141:53:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "2131:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "1985:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "1996:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "2008:6:3",
                  type: "",
                },
              ],
              src: "1949:262:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2300:324:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "2346:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2355:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "2358:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "2348:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2348:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "2348:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "2321:7:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "2330:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "2317:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2317:23:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2342:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "slt",
                        nodeType: "YulIdentifier",
                        src: "2313:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2313:32:3",
                    },
                    nodeType: "YulIf",
                    src: "2310:2:3",
                  },
                  {
                    nodeType: "YulBlock",
                    src: "2372:117:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "2387:15:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2401:1:3",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "2391:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "2416:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "2451:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "2462:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "2447:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "2447:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "2471:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "2426:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2426:53:3",
                        },
                        variableNames: [
                          {
                            name: "value0",
                            nodeType: "YulIdentifier",
                            src: "2416:6:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "2499:118:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "2514:16:3",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2528:2:3",
                          type: "",
                          value: "32",
                        },
                        variables: [
                          {
                            name: "offset",
                            nodeType: "YulTypedName",
                            src: "2518:6:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "2544:63:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "headStart",
                                  nodeType: "YulIdentifier",
                                  src: "2579:9:3",
                                },
                                {
                                  name: "offset",
                                  nodeType: "YulIdentifier",
                                  src: "2590:6:3",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "2575:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "2575:22:3",
                            },
                            {
                              name: "dataEnd",
                              nodeType: "YulIdentifier",
                              src: "2599:7:3",
                            },
                          ],
                          functionName: {
                            name: "abi_decode_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "2554:20:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2554:53:3",
                        },
                        variableNames: [
                          {
                            name: "value1",
                            nodeType: "YulIdentifier",
                            src: "2544:6:3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              name: "abi_decode_tuple_t_uint256t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "2262:9:3",
                  type: "",
                },
                {
                  name: "dataEnd",
                  nodeType: "YulTypedName",
                  src: "2273:7:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "2285:6:3",
                  type: "",
                },
                {
                  name: "value1",
                  nodeType: "YulTypedName",
                  src: "2293:6:3",
                  type: "",
                },
              ],
              src: "2217:407:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2754:143:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "2842:6:3",
                        },
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "2850:3:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr",
                        nodeType: "YulIdentifier",
                        src: "2764:77:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2764:90:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "2764:90:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "2863:28:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "2881:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "2886:4:3",
                          type: "",
                          value: "0x80",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "2877:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2877:14:3",
                    },
                    variableNames: [
                      {
                        name: "updatedPos",
                        nodeType: "YulIdentifier",
                        src: "2863:10:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encodeUpdatedPos_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "2727:6:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "2735:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "updatedPos",
                  nodeType: "YulTypedName",
                  src: "2743:10:3",
                  type: "",
                },
              ],
              src: "2630:267:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "2958:53:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "2975:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "2998:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_address",
                            nodeType: "YulIdentifier",
                            src: "2980:17:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2980:24:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "2968:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "2968:37:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "2968:37:3",
                  },
                ],
              },
              name: "abi_encode_t_address_to_t_address",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "2946:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "2953:3:3",
                  type: "",
                },
              ],
              src: "2903:108:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "3082:53:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "3099:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "3122:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_address",
                            nodeType: "YulIdentifier",
                            src: "3104:17:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "3104:24:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "3092:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3092:37:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "3092:37:3",
                  },
                ],
              },
              name: "abi_encode_t_address_to_t_address_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "3070:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "3077:3:3",
                  type: "",
                },
              ],
              src: "3017:118:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "3357:730:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "3367:90:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "3451:5:3",
                        },
                      ],
                      functionName: {
                        name: "array_length_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
                        nodeType: "YulIdentifier",
                        src: "3381:69:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3381:76:3",
                    },
                    variables: [
                      {
                        name: "length",
                        nodeType: "YulTypedName",
                        src: "3371:6:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "3466:105:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "3559:3:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "3564:6:3",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
                        nodeType: "YulIdentifier",
                        src: "3473:85:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3473:98:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3466:3:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "3580:93:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "3667:5:3",
                        },
                      ],
                      functionName: {
                        name: "array_dataslot_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
                        nodeType: "YulIdentifier",
                        src: "3595:71:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3595:78:3",
                    },
                    variables: [
                      {
                        name: "baseRef",
                        nodeType: "YulTypedName",
                        src: "3584:7:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "3682:21:3",
                    value: {
                      name: "baseRef",
                      nodeType: "YulIdentifier",
                      src: "3696:7:3",
                    },
                    variables: [
                      {
                        name: "srcPtr",
                        nodeType: "YulTypedName",
                        src: "3686:6:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "3772:290:3",
                      statements: [
                        {
                          nodeType: "YulVariableDeclaration",
                          src: "3786:34:3",
                          value: {
                            arguments: [
                              {
                                name: "srcPtr",
                                nodeType: "YulIdentifier",
                                src: "3813:6:3",
                              },
                            ],
                            functionName: {
                              name: "mload",
                              nodeType: "YulIdentifier",
                              src: "3807:5:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3807:13:3",
                          },
                          variables: [
                            {
                              name: "elementValue0",
                              nodeType: "YulTypedName",
                              src: "3790:13:3",
                              type: "",
                            },
                          ],
                        },
                        {
                          nodeType: "YulAssignment",
                          src: "3833:114:3",
                          value: {
                            arguments: [
                              {
                                name: "elementValue0",
                                nodeType: "YulIdentifier",
                                src: "3928:13:3",
                              },
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "3943:3:3",
                              },
                            ],
                            functionName: {
                              name: "abi_encodeUpdatedPos_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr",
                              nodeType: "YulIdentifier",
                              src: "3840:87:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3840:107:3",
                          },
                          variableNames: [
                            {
                              name: "pos",
                              nodeType: "YulIdentifier",
                              src: "3833:3:3",
                            },
                          ],
                        },
                        {
                          nodeType: "YulAssignment",
                          src: "3960:92:3",
                          value: {
                            arguments: [
                              {
                                name: "srcPtr",
                                nodeType: "YulIdentifier",
                                src: "4045:6:3",
                              },
                            ],
                            functionName: {
                              name: "array_nextElement_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
                              nodeType: "YulIdentifier",
                              src: "3970:74:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3970:82:3",
                          },
                          variableNames: [
                            {
                              name: "srcPtr",
                              nodeType: "YulIdentifier",
                              src: "3960:6:3",
                            },
                          ],
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "i",
                          nodeType: "YulIdentifier",
                          src: "3734:1:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "3737:6:3",
                        },
                      ],
                      functionName: {
                        name: "lt",
                        nodeType: "YulIdentifier",
                        src: "3731:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "3731:13:3",
                    },
                    nodeType: "YulForLoop",
                    post: {
                      nodeType: "YulBlock",
                      src: "3745:18:3",
                      statements: [
                        {
                          nodeType: "YulAssignment",
                          src: "3747:14:3",
                          value: {
                            arguments: [
                              {
                                name: "i",
                                nodeType: "YulIdentifier",
                                src: "3756:1:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "3759:1:3",
                                type: "",
                                value: "1",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "3752:3:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3752:9:3",
                          },
                          variableNames: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "3747:1:3",
                            },
                          ],
                        },
                      ],
                    },
                    pre: {
                      nodeType: "YulBlock",
                      src: "3716:14:3",
                      statements: [
                        {
                          nodeType: "YulVariableDeclaration",
                          src: "3718:10:3",
                          value: {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3727:1:3",
                            type: "",
                            value: "0",
                          },
                          variables: [
                            {
                              name: "i",
                              nodeType: "YulTypedName",
                              src: "3722:1:3",
                              type: "",
                            },
                          ],
                        },
                      ],
                    },
                    src: "3712:350:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "4071:10:3",
                    value: {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "4078:3:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "4071:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "3336:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "3343:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "3352:3:3",
                  type: "",
                },
              ],
              src: "3199:888:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4152:50:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4169:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "4189:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_bool",
                            nodeType: "YulIdentifier",
                            src: "4174:14:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4174:21:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "4162:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4162:34:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4162:34:3",
                  },
                ],
              },
              name: "abi_encode_t_bool_to_t_bool_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "4140:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "4147:3:3",
                  type: "",
                },
              ],
              src: "4093:109:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4300:272:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "4310:53:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "4357:5:3",
                        },
                      ],
                      functionName: {
                        name: "array_length_t_string_memory_ptr",
                        nodeType: "YulIdentifier",
                        src: "4324:32:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4324:39:3",
                    },
                    variables: [
                      {
                        name: "length",
                        nodeType: "YulTypedName",
                        src: "4314:6:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "4372:78:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4438:3:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "4443:6:3",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "4379:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4379:71:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "4372:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "4485:5:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4492:4:3",
                              type: "",
                              value: "0x20",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "4481:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4481:16:3",
                        },
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4499:3:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "4504:6:3",
                        },
                      ],
                      functionName: {
                        name: "copy_memory_to_memory",
                        nodeType: "YulIdentifier",
                        src: "4459:21:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4459:52:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4459:52:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "4520:46:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4531:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "4558:6:3",
                            },
                          ],
                          functionName: {
                            name: "round_up_to_mul_of_32",
                            nodeType: "YulIdentifier",
                            src: "4536:21:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4536:29:3",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "4527:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4527:39:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "4520:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "4281:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "4288:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "4296:3:3",
                  type: "",
                },
              ],
              src: "4208:364:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "4724:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "4734:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4800:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4805:2:3",
                          type: "",
                          value: "43",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "4741:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4741:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "4734:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4906:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116",
                        nodeType: "YulIdentifier",
                        src: "4817:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4817:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "4817:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "4919:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "4930:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4935:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "4926:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "4926:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "4919:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "4712:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "4720:3:3",
                  type: "",
                },
              ],
              src: "4578:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "5096:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "5106:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5172:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "5177:2:3",
                          type: "",
                          value: "44",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "5113:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5113:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5106:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5278:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595",
                        nodeType: "YulIdentifier",
                        src: "5189:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5189:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "5189:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "5291:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5302:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "5307:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "5298:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5298:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "5291:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "5084:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "5092:3:3",
                  type: "",
                },
              ],
              src: "4950:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "5468:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "5478:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5544:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "5549:2:3",
                          type: "",
                          value: "43",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "5485:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5485:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5478:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5650:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e",
                        nodeType: "YulIdentifier",
                        src: "5561:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5561:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "5561:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "5663:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5674:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "5679:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "5670:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5670:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "5663:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "5456:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "5464:3:3",
                  type: "",
                },
              ],
              src: "5322:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "5840:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "5850:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "5916:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "5921:2:3",
                          type: "",
                          value: "53",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "5857:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5857:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5850:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6022:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f",
                        nodeType: "YulIdentifier",
                        src: "5933:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "5933:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "5933:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "6035:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6046:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "6051:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "6042:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6042:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "6035:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "5828:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "5836:3:3",
                  type: "",
                },
              ],
              src: "5694:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "6212:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "6222:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6288:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "6293:2:3",
                          type: "",
                          value: "35",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "6229:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6229:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6222:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6394:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53",
                        nodeType: "YulIdentifier",
                        src: "6305:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6305:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "6305:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "6407:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6418:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "6423:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "6414:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6414:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "6407:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "6200:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "6208:3:3",
                  type: "",
                },
              ],
              src: "6066:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "6584:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "6594:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6660:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "6665:2:3",
                          type: "",
                          value: "51",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "6601:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6601:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6594:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6766:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1",
                        nodeType: "YulIdentifier",
                        src: "6677:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6677:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "6677:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "6779:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "6790:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "6795:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "6786:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6786:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "6779:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "6572:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "6580:3:3",
                  type: "",
                },
              ],
              src: "6438:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "6956:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "6966:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7032:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7037:2:3",
                          type: "",
                          value: "49",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "6973:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "6973:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6966:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7138:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d",
                        nodeType: "YulIdentifier",
                        src: "7049:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7049:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "7049:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "7151:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7162:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7167:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "7158:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7158:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "7151:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "6944:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "6952:3:3",
                  type: "",
                },
              ],
              src: "6810:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "7328:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "7338:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7404:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7409:2:3",
                          type: "",
                          value: "41",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "7345:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7345:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7338:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7510:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50",
                        nodeType: "YulIdentifier",
                        src: "7421:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7421:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "7421:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "7523:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7534:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7539:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "7530:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7530:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "7523:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "7316:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "7324:3:3",
                  type: "",
                },
              ],
              src: "7182:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "7700:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "7710:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7776:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7781:2:3",
                          type: "",
                          value: "51",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "7717:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7717:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7710:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7882:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9",
                        nodeType: "YulIdentifier",
                        src: "7793:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7793:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "7793:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "7895:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "7906:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "7911:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "7902:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "7902:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "7895:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "7688:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "7696:3:3",
                  type: "",
                },
              ],
              src: "7554:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "8072:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "8082:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8148:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8153:2:3",
                          type: "",
                          value: "37",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "8089:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8089:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8082:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8254:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af",
                        nodeType: "YulIdentifier",
                        src: "8165:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8165:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "8165:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "8267:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8278:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8283:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "8274:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8274:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "8267:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "8060:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "8068:3:3",
                  type: "",
                },
              ],
              src: "7926:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "8444:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "8454:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8520:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8525:2:3",
                          type: "",
                          value: "20",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "8461:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8461:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8454:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8626:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
                        nodeType: "YulIdentifier",
                        src: "8537:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8537:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "8537:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "8639:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8650:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8655:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "8646:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8646:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "8639:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "8432:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "8440:3:3",
                  type: "",
                },
              ],
              src: "8298:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "8816:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "8826:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8892:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "8897:2:3",
                          type: "",
                          value: "40",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "8833:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8833:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8826:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "8998:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b",
                        nodeType: "YulIdentifier",
                        src: "8909:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "8909:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "8909:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "9011:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9022:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "9027:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "9018:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9018:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "9011:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "8804:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "8812:3:3",
                  type: "",
                },
              ],
              src: "8670:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "9188:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "9198:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9264:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "9269:2:3",
                          type: "",
                          value: "53",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "9205:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9205:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "9198:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9370:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4",
                        nodeType: "YulIdentifier",
                        src: "9281:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9281:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "9281:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "9383:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9394:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "9399:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "9390:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9390:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "9383:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "9176:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "9184:3:3",
                  type: "",
                },
              ],
              src: "9042:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "9560:220:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "9570:74:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9636:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "9641:2:3",
                          type: "",
                          value: "38",
                        },
                      ],
                      functionName: {
                        name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "9577:58:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9577:67:3",
                    },
                    variableNames: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "9570:3:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9742:3:3",
                        },
                      ],
                      functionName: {
                        name: "store_literal_in_memory_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d",
                        nodeType: "YulIdentifier",
                        src: "9653:88:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9653:93:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "9653:93:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "9755:19:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9766:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "9771:2:3",
                          type: "",
                          value: "64",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "9762:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9762:12:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "9755:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d_to_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "9548:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "9556:3:3",
                  type: "",
                },
              ],
              src: "9414:366:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "9940:747:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "9950:26:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "9966:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "9971:4:3",
                          type: "",
                          value: "0x80",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "9962:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "9962:14:3",
                    },
                    variables: [
                      {
                        name: "tail",
                        nodeType: "YulTypedName",
                        src: "9954:4:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "9986:164:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "10021:43:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "10051:5:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10058:4:3",
                                  type: "",
                                  value: "0x00",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10047:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10047:16:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "10041:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10041:23:3",
                        },
                        variables: [
                          {
                            name: "memberValue0",
                            nodeType: "YulTypedName",
                            src: "10025:12:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "memberValue0",
                              nodeType: "YulIdentifier",
                              src: "10111:12:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "10129:3:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10134:4:3",
                                  type: "",
                                  value: "0x00",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10125:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10125:14:3",
                            },
                          ],
                          functionName: {
                            name: "abi_encode_t_address_to_t_address",
                            nodeType: "YulIdentifier",
                            src: "10077:33:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10077:63:3",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10077:63:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "10160:166:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "10197:43:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "10227:5:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10234:4:3",
                                  type: "",
                                  value: "0x20",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10223:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10223:16:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "10217:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10217:23:3",
                        },
                        variables: [
                          {
                            name: "memberValue0",
                            nodeType: "YulTypedName",
                            src: "10201:12:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "memberValue0",
                              nodeType: "YulIdentifier",
                              src: "10287:12:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "10305:3:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10310:4:3",
                                  type: "",
                                  value: "0x20",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10301:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10301:14:3",
                            },
                          ],
                          functionName: {
                            name: "abi_encode_t_uint256_to_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "10253:33:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10253:63:3",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10253:63:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "10336:165:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "10372:43:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "10402:5:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10409:4:3",
                                  type: "",
                                  value: "0x40",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10398:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10398:16:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "10392:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10392:23:3",
                        },
                        variables: [
                          {
                            name: "memberValue0",
                            nodeType: "YulTypedName",
                            src: "10376:12:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "memberValue0",
                              nodeType: "YulIdentifier",
                              src: "10462:12:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "10480:3:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10485:4:3",
                                  type: "",
                                  value: "0x40",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10476:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10476:14:3",
                            },
                          ],
                          functionName: {
                            name: "abi_encode_t_uint256_to_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "10428:33:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10428:63:3",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10428:63:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "10511:169:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "10551:43:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "10581:5:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10588:4:3",
                                  type: "",
                                  value: "0x60",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10577:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10577:16:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "10571:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10571:23:3",
                        },
                        variables: [
                          {
                            name: "memberValue0",
                            nodeType: "YulTypedName",
                            src: "10555:12:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "memberValue0",
                              nodeType: "YulIdentifier",
                              src: "10641:12:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "10659:3:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "10664:4:3",
                                  type: "",
                                  value: "0x60",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "10655:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "10655:14:3",
                            },
                          ],
                          functionName: {
                            name: "abi_encode_t_uint256_to_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "10607:33:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10607:63:3",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10607:63:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "9927:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "9934:3:3",
                  type: "",
                },
              ],
              src: "9840:847:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "10901:566:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "10911:26:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "10927:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "10932:4:3",
                          type: "",
                          value: "0x40",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "10923:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "10923:14:3",
                    },
                    variables: [
                      {
                        name: "tail",
                        nodeType: "YulTypedName",
                        src: "10915:4:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "10947:172:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "10990:43:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "11020:5:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "11027:4:3",
                                  type: "",
                                  value: "0x00",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "11016:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "11016:16:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "11010:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11010:23:3",
                        },
                        variables: [
                          {
                            name: "memberValue0",
                            nodeType: "YulTypedName",
                            src: "10994:12:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "memberValue0",
                              nodeType: "YulIdentifier",
                              src: "11080:12:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "11098:3:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "11103:4:3",
                                  type: "",
                                  value: "0x00",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "11094:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "11094:14:3",
                            },
                          ],
                          functionName: {
                            name: "abi_encode_t_uint256_to_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "11046:33:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11046:63:3",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "11046:63:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulBlock",
                    src: "11129:311:3",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "11166:43:3",
                        value: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "11196:5:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "11203:4:3",
                                  type: "",
                                  value: "0x20",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "11192:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "11192:16:3",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "11186:5:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11186:23:3",
                        },
                        variables: [
                          {
                            name: "memberValue0",
                            nodeType: "YulTypedName",
                            src: "11170:12:3",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "11234:3:3",
                                },
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "11239:4:3",
                                  type: "",
                                  value: "0x20",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "11230:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "11230:14:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "tail",
                                  nodeType: "YulIdentifier",
                                  src: "11250:4:3",
                                },
                                {
                                  name: "pos",
                                  nodeType: "YulIdentifier",
                                  src: "11256:3:3",
                                },
                              ],
                              functionName: {
                                name: "sub",
                                nodeType: "YulIdentifier",
                                src: "11246:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "11246:14:3",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "11223:6:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11223:38:3",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "11223:38:3",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "11274:155:3",
                        value: {
                          arguments: [
                            {
                              name: "memberValue0",
                              nodeType: "YulIdentifier",
                              src: "11410:12:3",
                            },
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "11424:4:3",
                            },
                          ],
                          functionName: {
                            name: "abi_encode_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
                            nodeType: "YulIdentifier",
                            src: "11282:127:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11282:147:3",
                        },
                        variableNames: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "11274:4:3",
                          },
                        ],
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "11450:11:3",
                    value: {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "11457:4:3",
                    },
                    variableNames: [
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "11450:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_t_struct$_StakingSummary_$703_memory_ptr_to_t_struct$_StakingSummary_$703_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "10880:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "10887:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "end",
                  nodeType: "YulTypedName",
                  src: "10896:3:3",
                  type: "",
                },
              ],
              src: "10765:702:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "11528:53:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "11545:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "11568:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "11550:17:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11550:24:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "11538:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "11538:37:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "11538:37:3",
                  },
                ],
              },
              name: "abi_encode_t_uint256_to_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "11516:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "11523:3:3",
                  type: "",
                },
              ],
              src: "11473:108:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "11652:53:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "11669:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "11692:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_uint256",
                            nodeType: "YulIdentifier",
                            src: "11674:17:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11674:24:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "11662:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "11662:37:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "11662:37:3",
                  },
                ],
              },
              name: "abi_encode_t_uint256_to_t_uint256_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "11640:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "11647:3:3",
                  type: "",
                },
              ],
              src: "11587:118:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "11772:51:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "11789:3:3",
                        },
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "11810:5:3",
                            },
                          ],
                          functionName: {
                            name: "cleanup_t_uint8",
                            nodeType: "YulIdentifier",
                            src: "11794:15:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11794:22:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "11782:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "11782:35:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "11782:35:3",
                  },
                ],
              },
              name: "abi_encode_t_uint8_to_t_uint8_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "11760:5:3",
                  type: "",
                },
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "11767:3:3",
                  type: "",
                },
              ],
              src: "11711:112:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "11927:124:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "11937:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "11949:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "11960:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "11945:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "11945:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "11937:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "12017:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "12030:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "12041:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "12026:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "12026:17:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_address_to_t_address_fromStack",
                        nodeType: "YulIdentifier",
                        src: "11973:43:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "11973:71:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "11973:71:3",
                  },
                ],
              },
              name: "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "11899:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "11911:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "11922:4:3",
                  type: "",
                },
              ],
              src: "11829:222:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "12149:118:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "12159:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "12171:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "12182:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "12167:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12167:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "12159:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "12233:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "12246:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "12257:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "12242:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "12242:17:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_bool_to_t_bool_fromStack",
                        nodeType: "YulIdentifier",
                        src: "12195:37:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12195:65:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "12195:65:3",
                  },
                ],
              },
              name: "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "12121:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "12133:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "12144:4:3",
                  type: "",
                },
              ],
              src: "12057:210:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "12391:195:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "12401:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "12413:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "12424:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "12409:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12409:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "12401:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "12448:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "12459:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "12444:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "12444:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "12467:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "12473:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "12463:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "12463:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "12437:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12437:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "12437:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "12493:86:3",
                    value: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "12565:6:3",
                        },
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "12574:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "12501:63:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12501:78:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "12493:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "12363:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "12375:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "12386:4:3",
                  type: "",
                },
              ],
              src: "12273:313:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "12763:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "12773:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "12785:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "12796:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "12781:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12781:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "12773:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "12820:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "12831:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "12816:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "12816:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "12839:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "12845:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "12835:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "12835:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "12809:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12809:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "12809:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "12865:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "12999:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "12873:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "12873:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "12865:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "12743:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "12758:4:3",
                  type: "",
                },
              ],
              src: "12592:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "13188:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "13198:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "13210:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "13221:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "13206:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "13206:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13198:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "13245:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "13256:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "13241:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "13241:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "13264:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "13270:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "13260:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "13260:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "13234:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "13234:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "13234:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "13290:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "13424:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "13298:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "13298:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13290:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "13168:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "13183:4:3",
                  type: "",
                },
              ],
              src: "13017:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "13613:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "13623:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "13635:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "13646:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "13631:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "13631:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13623:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "13670:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "13681:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "13666:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "13666:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "13689:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "13695:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "13685:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "13685:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "13659:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "13659:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "13659:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "13715:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "13849:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "13723:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "13723:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13715:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "13593:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "13608:4:3",
                  type: "",
                },
              ],
              src: "13442:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "14038:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "14048:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "14060:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "14071:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "14056:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14056:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14048:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "14095:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "14106:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "14091:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "14091:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "14114:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "14120:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "14110:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "14110:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "14084:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14084:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "14084:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "14140:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "14274:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "14148:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14148:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14140:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "14018:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "14033:4:3",
                  type: "",
                },
              ],
              src: "13867:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "14463:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "14473:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "14485:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "14496:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "14481:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14481:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14473:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "14520:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "14531:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "14516:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "14516:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "14539:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "14545:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "14535:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "14535:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "14509:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14509:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "14509:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "14565:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "14699:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "14573:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14573:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14565:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "14443:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "14458:4:3",
                  type: "",
                },
              ],
              src: "14292:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "14888:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "14898:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "14910:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "14921:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "14906:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14906:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14898:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "14945:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "14956:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "14941:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "14941:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "14964:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "14970:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "14960:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "14960:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "14934:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14934:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "14934:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "14990:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "15124:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "14998:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "14998:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14990:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "14868:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "14883:4:3",
                  type: "",
                },
              ],
              src: "14717:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "15313:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "15323:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "15335:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "15346:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "15331:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "15331:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15323:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "15370:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "15381:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "15366:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "15366:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "15389:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "15395:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "15385:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "15385:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "15359:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "15359:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "15359:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "15415:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "15549:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "15423:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "15423:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15415:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "15293:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "15308:4:3",
                  type: "",
                },
              ],
              src: "15142:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "15738:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "15748:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "15760:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "15771:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "15756:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "15756:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15748:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "15795:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "15806:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "15791:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "15791:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "15814:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "15820:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "15810:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "15810:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "15784:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "15784:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "15784:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "15840:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "15974:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "15848:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "15848:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15840:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "15718:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "15733:4:3",
                  type: "",
                },
              ],
              src: "15567:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "16163:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "16173:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "16185:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "16196:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "16181:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "16181:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16173:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "16220:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "16231:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "16216:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "16216:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "16239:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "16245:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "16235:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "16235:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "16209:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "16209:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "16209:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "16265:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "16399:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "16273:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "16273:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16265:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "16143:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "16158:4:3",
                  type: "",
                },
              ],
              src: "15992:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "16588:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "16598:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "16610:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "16621:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "16606:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "16606:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16598:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "16645:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "16656:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "16641:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "16641:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "16664:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "16670:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "16660:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "16660:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "16634:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "16634:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "16634:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "16690:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "16824:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "16698:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "16698:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16690:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "16568:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "16583:4:3",
                  type: "",
                },
              ],
              src: "16417:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "17013:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "17023:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "17035:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "17046:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "17031:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17031:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17023:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "17070:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "17081:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "17066:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "17066:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "17089:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "17095:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "17085:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "17085:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "17059:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17059:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "17059:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "17115:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "17249:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "17123:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17123:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17115:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "16993:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "17008:4:3",
                  type: "",
                },
              ],
              src: "16842:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "17438:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "17448:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "17460:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "17471:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "17456:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17456:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17448:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "17495:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "17506:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "17491:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "17491:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "17514:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "17520:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "17510:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "17510:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "17484:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17484:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "17484:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "17540:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "17674:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "17548:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17548:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17540:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "17418:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "17433:4:3",
                  type: "",
                },
              ],
              src: "17267:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "17863:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "17873:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "17885:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "17896:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "17881:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17881:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17873:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "17920:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "17931:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "17916:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "17916:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "17939:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "17945:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "17935:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "17935:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "17909:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17909:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "17909:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "17965:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "18099:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "17973:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "17973:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17965:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "17843:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "17858:4:3",
                  type: "",
                },
              ],
              src: "17692:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "18288:248:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "18298:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "18310:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "18321:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "18306:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "18306:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "18298:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "18345:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "18356:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "18341:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18341:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "18364:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "18370:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "18360:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18360:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "18334:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "18334:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "18334:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "18390:139:3",
                    value: {
                      arguments: [
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "18524:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d_to_t_string_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "18398:124:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "18398:131:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "18390:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d__to_t_string_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "18268:9:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "18283:4:3",
                  type: "",
                },
              ],
              src: "18117:419:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "18702:237:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "18712:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "18724:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "18735:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "18720:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "18720:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "18712:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "18759:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "18770:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "18755:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18755:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "tail",
                              nodeType: "YulIdentifier",
                              src: "18778:4:3",
                            },
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "18784:9:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "18774:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "18774:20:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "18748:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "18748:47:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "18748:47:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "18804:128:3",
                    value: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "18918:6:3",
                        },
                        {
                          name: "tail",
                          nodeType: "YulIdentifier",
                          src: "18927:4:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_struct$_StakingSummary_$703_memory_ptr_to_t_struct$_StakingSummary_$703_memory_ptr_fromStack",
                        nodeType: "YulIdentifier",
                        src: "18812:105:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "18812:120:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "18804:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "abi_encode_tuple_t_struct$_StakingSummary_$703_memory_ptr__to_t_struct$_StakingSummary_$703_memory_ptr__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "18674:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "18686:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "18697:4:3",
                  type: "",
                },
              ],
              src: "18542:397:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "19043:124:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "19053:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "19065:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "19076:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "19061:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19061:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "19053:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "19133:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "19146:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19157:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "19142:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19142:17:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                        nodeType: "YulIdentifier",
                        src: "19089:43:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19089:71:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "19089:71:3",
                  },
                ],
              },
              name: "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "19015:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "19027:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "19038:4:3",
                  type: "",
                },
              ],
              src: "18945:222:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "19327:288:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "19337:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "19349:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "19360:2:3",
                          type: "",
                          value: "96",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "19345:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19345:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "19337:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "19417:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "19430:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19441:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "19426:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19426:17:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                        nodeType: "YulIdentifier",
                        src: "19373:43:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19373:71:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "19373:71:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "19498:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "19511:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19522:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "19507:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19507:18:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                        nodeType: "YulIdentifier",
                        src: "19454:43:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19454:72:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "19454:72:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value2",
                          nodeType: "YulIdentifier",
                          src: "19580:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "19593:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19604:2:3",
                              type: "",
                              value: "64",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "19589:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19589:18:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                        nodeType: "YulIdentifier",
                        src: "19536:43:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19536:72:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "19536:72:3",
                  },
                ],
              },
              name: "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "19283:9:3",
                  type: "",
                },
                {
                  name: "value2",
                  nodeType: "YulTypedName",
                  src: "19295:6:3",
                  type: "",
                },
                {
                  name: "value1",
                  nodeType: "YulTypedName",
                  src: "19303:6:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "19311:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "19322:4:3",
                  type: "",
                },
              ],
              src: "19173:442:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "19715:120:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "19725:26:3",
                    value: {
                      arguments: [
                        {
                          name: "headStart",
                          nodeType: "YulIdentifier",
                          src: "19737:9:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "19748:2:3",
                          type: "",
                          value: "32",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "19733:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19733:18:3",
                    },
                    variableNames: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "19725:4:3",
                      },
                    ],
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "19801:6:3",
                        },
                        {
                          arguments: [
                            {
                              name: "headStart",
                              nodeType: "YulIdentifier",
                              src: "19814:9:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "19825:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "19810:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "19810:17:3",
                        },
                      ],
                      functionName: {
                        name: "abi_encode_t_uint8_to_t_uint8_fromStack",
                        nodeType: "YulIdentifier",
                        src: "19761:39:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19761:67:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "19761:67:3",
                  },
                ],
              },
              name: "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "headStart",
                  nodeType: "YulTypedName",
                  src: "19687:9:3",
                  type: "",
                },
                {
                  name: "value0",
                  nodeType: "YulTypedName",
                  src: "19699:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "tail",
                  nodeType: "YulTypedName",
                  src: "19710:4:3",
                  type: "",
                },
              ],
              src: "19621:214:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "19935:60:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "19945:11:3",
                    value: {
                      name: "ptr",
                      nodeType: "YulIdentifier",
                      src: "19953:3:3",
                    },
                    variableNames: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "19945:4:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "19966:22:3",
                    value: {
                      arguments: [
                        {
                          name: "ptr",
                          nodeType: "YulIdentifier",
                          src: "19978:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "19983:4:3",
                          type: "",
                          value: "0x20",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "19974:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "19974:14:3",
                    },
                    variableNames: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "19966:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_dataslot_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "ptr",
                  nodeType: "YulTypedName",
                  src: "19922:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "data",
                  nodeType: "YulTypedName",
                  src: "19930:4:3",
                  type: "",
                },
              ],
              src: "19841:154:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "20097:40:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "20108:22:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "20124:5:3",
                        },
                      ],
                      functionName: {
                        name: "mload",
                        nodeType: "YulIdentifier",
                        src: "20118:5:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20118:12:3",
                    },
                    variableNames: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "20108:6:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_length_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "20080:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "20090:6:3",
                  type: "",
                },
              ],
              src: "20001:136:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "20202:40:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "20213:22:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "20229:5:3",
                        },
                      ],
                      functionName: {
                        name: "mload",
                        nodeType: "YulIdentifier",
                        src: "20223:5:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20223:12:3",
                    },
                    variableNames: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "20213:6:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_length_t_string_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "20185:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "20195:6:3",
                  type: "",
                },
              ],
              src: "20143:99:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "20345:38:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "20355:22:3",
                    value: {
                      arguments: [
                        {
                          name: "ptr",
                          nodeType: "YulIdentifier",
                          src: "20367:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "20372:4:3",
                          type: "",
                          value: "0x20",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "20363:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20363:14:3",
                    },
                    variableNames: [
                      {
                        name: "next",
                        nodeType: "YulIdentifier",
                        src: "20355:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_nextElement_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "ptr",
                  nodeType: "YulTypedName",
                  src: "20332:3:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "next",
                  nodeType: "YulTypedName",
                  src: "20340:4:3",
                  type: "",
                },
              ],
              src: "20248:135:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "20512:73:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "20529:3:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "20534:6:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "20522:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20522:19:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "20522:19:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "20550:29:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "20569:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "20574:4:3",
                          type: "",
                          value: "0x20",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "20565:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20565:14:3",
                    },
                    variableNames: [
                      {
                        name: "updated_pos",
                        nodeType: "YulIdentifier",
                        src: "20550:11:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "20484:3:3",
                  type: "",
                },
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "20489:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "updated_pos",
                  nodeType: "YulTypedName",
                  src: "20500:11:3",
                  type: "",
                },
              ],
              src: "20389:196:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "20687:73:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "20704:3:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "20709:6:3",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "20697:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20697:19:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "20697:19:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "20725:29:3",
                    value: {
                      arguments: [
                        {
                          name: "pos",
                          nodeType: "YulIdentifier",
                          src: "20744:3:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "20749:4:3",
                          type: "",
                          value: "0x20",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "20740:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20740:14:3",
                    },
                    variableNames: [
                      {
                        name: "updated_pos",
                        nodeType: "YulIdentifier",
                        src: "20725:11:3",
                      },
                    ],
                  },
                ],
              },
              name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "pos",
                  nodeType: "YulTypedName",
                  src: "20659:3:3",
                  type: "",
                },
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "20664:6:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "updated_pos",
                  nodeType: "YulTypedName",
                  src: "20675:11:3",
                  type: "",
                },
              ],
              src: "20591:169:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "20810:261:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "20820:25:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "20843:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "20825:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20825:20:3",
                    },
                    variableNames: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "20820:1:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "20854:25:3",
                    value: {
                      arguments: [
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "20877:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "20859:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20859:20:3",
                    },
                    variableNames: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "20854:1:3",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "21017:22:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x11",
                              nodeType: "YulIdentifier",
                              src: "21019:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "21019:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "21019:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "20938:1:3",
                        },
                        {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "20945:66:3",
                              type: "",
                              value:
                                "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                            },
                            {
                              name: "y",
                              nodeType: "YulIdentifier",
                              src: "21013:1:3",
                            },
                          ],
                          functionName: {
                            name: "sub",
                            nodeType: "YulIdentifier",
                            src: "20941:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "20941:74:3",
                        },
                      ],
                      functionName: {
                        name: "gt",
                        nodeType: "YulIdentifier",
                        src: "20935:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "20935:81:3",
                    },
                    nodeType: "YulIf",
                    src: "20932:2:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21049:16:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21060:1:3",
                        },
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21063:1:3",
                        },
                      ],
                      functionName: {
                        name: "add",
                        nodeType: "YulIdentifier",
                        src: "21056:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21056:9:3",
                    },
                    variableNames: [
                      {
                        name: "sum",
                        nodeType: "YulIdentifier",
                        src: "21049:3:3",
                      },
                    ],
                  },
                ],
              },
              name: "checked_add_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "x",
                  nodeType: "YulTypedName",
                  src: "20797:1:3",
                  type: "",
                },
                {
                  name: "y",
                  nodeType: "YulTypedName",
                  src: "20800:1:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "sum",
                  nodeType: "YulTypedName",
                  src: "20806:3:3",
                  type: "",
                },
              ],
              src: "20766:305:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "21119:143:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "21129:25:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21152:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "21134:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21134:20:3",
                    },
                    variableNames: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "21129:1:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21163:25:3",
                    value: {
                      arguments: [
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21186:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "21168:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21168:20:3",
                    },
                    variableNames: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "21163:1:3",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "21210:22:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x12",
                              nodeType: "YulIdentifier",
                              src: "21212:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "21212:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "21212:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21207:1:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "21200:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21200:9:3",
                    },
                    nodeType: "YulIf",
                    src: "21197:2:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21242:14:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21251:1:3",
                        },
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21254:1:3",
                        },
                      ],
                      functionName: {
                        name: "div",
                        nodeType: "YulIdentifier",
                        src: "21247:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21247:9:3",
                    },
                    variableNames: [
                      {
                        name: "r",
                        nodeType: "YulIdentifier",
                        src: "21242:1:3",
                      },
                    ],
                  },
                ],
              },
              name: "checked_div_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "x",
                  nodeType: "YulTypedName",
                  src: "21108:1:3",
                  type: "",
                },
                {
                  name: "y",
                  nodeType: "YulTypedName",
                  src: "21111:1:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "r",
                  nodeType: "YulTypedName",
                  src: "21117:1:3",
                  type: "",
                },
              ],
              src: "21077:185:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "21316:300:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "21326:25:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21349:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "21331:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21331:20:3",
                    },
                    variableNames: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "21326:1:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21360:25:3",
                    value: {
                      arguments: [
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21383:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "21365:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21365:20:3",
                    },
                    variableNames: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "21360:1:3",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "21558:22:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x11",
                              nodeType: "YulIdentifier",
                              src: "21560:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "21560:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "21560:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "x",
                                  nodeType: "YulIdentifier",
                                  src: "21470:1:3",
                                },
                              ],
                              functionName: {
                                name: "iszero",
                                nodeType: "YulIdentifier",
                                src: "21463:6:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "21463:9:3",
                            },
                          ],
                          functionName: {
                            name: "iszero",
                            nodeType: "YulIdentifier",
                            src: "21456:6:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "21456:17:3",
                        },
                        {
                          arguments: [
                            {
                              name: "y",
                              nodeType: "YulIdentifier",
                              src: "21478:1:3",
                            },
                            {
                              arguments: [
                                {
                                  kind: "number",
                                  nodeType: "YulLiteral",
                                  src: "21485:66:3",
                                  type: "",
                                  value:
                                    "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                                },
                                {
                                  name: "x",
                                  nodeType: "YulIdentifier",
                                  src: "21553:1:3",
                                },
                              ],
                              functionName: {
                                name: "div",
                                nodeType: "YulIdentifier",
                                src: "21481:3:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "21481:74:3",
                            },
                          ],
                          functionName: {
                            name: "gt",
                            nodeType: "YulIdentifier",
                            src: "21475:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "21475:81:3",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "21452:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21452:105:3",
                    },
                    nodeType: "YulIf",
                    src: "21449:2:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21590:20:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21605:1:3",
                        },
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21608:1:3",
                        },
                      ],
                      functionName: {
                        name: "mul",
                        nodeType: "YulIdentifier",
                        src: "21601:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21601:9:3",
                    },
                    variableNames: [
                      {
                        name: "product",
                        nodeType: "YulIdentifier",
                        src: "21590:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "checked_mul_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "x",
                  nodeType: "YulTypedName",
                  src: "21299:1:3",
                  type: "",
                },
                {
                  name: "y",
                  nodeType: "YulTypedName",
                  src: "21302:1:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "product",
                  nodeType: "YulTypedName",
                  src: "21308:7:3",
                  type: "",
                },
              ],
              src: "21268:348:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "21667:146:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "21677:25:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21700:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "21682:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21682:20:3",
                    },
                    variableNames: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "21677:1:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21711:25:3",
                    value: {
                      arguments: [
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21734:1:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint256",
                        nodeType: "YulIdentifier",
                        src: "21716:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21716:20:3",
                    },
                    variableNames: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "21711:1:3",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "21758:22:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x11",
                              nodeType: "YulIdentifier",
                              src: "21760:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "21760:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "21760:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21752:1:3",
                        },
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21755:1:3",
                        },
                      ],
                      functionName: {
                        name: "lt",
                        nodeType: "YulIdentifier",
                        src: "21749:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21749:8:3",
                    },
                    nodeType: "YulIf",
                    src: "21746:2:3",
                  },
                  {
                    nodeType: "YulAssignment",
                    src: "21790:17:3",
                    value: {
                      arguments: [
                        {
                          name: "x",
                          nodeType: "YulIdentifier",
                          src: "21802:1:3",
                        },
                        {
                          name: "y",
                          nodeType: "YulIdentifier",
                          src: "21805:1:3",
                        },
                      ],
                      functionName: {
                        name: "sub",
                        nodeType: "YulIdentifier",
                        src: "21798:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21798:9:3",
                    },
                    variableNames: [
                      {
                        name: "diff",
                        nodeType: "YulIdentifier",
                        src: "21790:4:3",
                      },
                    ],
                  },
                ],
              },
              name: "checked_sub_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "x",
                  nodeType: "YulTypedName",
                  src: "21653:1:3",
                  type: "",
                },
                {
                  name: "y",
                  nodeType: "YulTypedName",
                  src: "21656:1:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "diff",
                  nodeType: "YulTypedName",
                  src: "21662:4:3",
                  type: "",
                },
              ],
              src: "21622:191:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "21864:51:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "21874:35:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "21903:5:3",
                        },
                      ],
                      functionName: {
                        name: "cleanup_t_uint160",
                        nodeType: "YulIdentifier",
                        src: "21885:17:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21885:24:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "21874:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_address",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "21846:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "21856:7:3",
                  type: "",
                },
              ],
              src: "21819:96:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "21963:48:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "21973:32:3",
                    value: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "21998:5:3",
                            },
                          ],
                          functionName: {
                            name: "iszero",
                            nodeType: "YulIdentifier",
                            src: "21991:6:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "21991:13:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "21984:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "21984:21:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "21973:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_bool",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "21945:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "21955:7:3",
                  type: "",
                },
              ],
              src: "21921:90:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "22062:81:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "22072:65:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "22087:5:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "22094:42:3",
                          type: "",
                          value: "0xffffffffffffffffffffffffffffffffffffffff",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "22083:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22083:54:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "22072:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_uint160",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "22044:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "22054:7:3",
                  type: "",
                },
              ],
              src: "22017:126:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "22194:32:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "22204:16:3",
                    value: {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "22215:5:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "22204:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "22176:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "22186:7:3",
                  type: "",
                },
              ],
              src: "22149:77:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "22275:43:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "22285:27:3",
                    value: {
                      arguments: [
                        {
                          name: "value",
                          nodeType: "YulIdentifier",
                          src: "22300:5:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "22307:4:3",
                          type: "",
                          value: "0xff",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "22296:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22296:16:3",
                    },
                    variableNames: [
                      {
                        name: "cleaned",
                        nodeType: "YulIdentifier",
                        src: "22285:7:3",
                      },
                    ],
                  },
                ],
              },
              name: "cleanup_t_uint8",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "22257:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "cleaned",
                  nodeType: "YulTypedName",
                  src: "22267:7:3",
                  type: "",
                },
              ],
              src: "22232:86:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "22373:258:3",
                statements: [
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "22383:10:3",
                    value: {
                      kind: "number",
                      nodeType: "YulLiteral",
                      src: "22392:1:3",
                      type: "",
                      value: "0",
                    },
                    variables: [
                      {
                        name: "i",
                        nodeType: "YulTypedName",
                        src: "22387:1:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "22452:63:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "dst",
                                    nodeType: "YulIdentifier",
                                    src: "22477:3:3",
                                  },
                                  {
                                    name: "i",
                                    nodeType: "YulIdentifier",
                                    src: "22482:1:3",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "22473:3:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "22473:11:3",
                              },
                              {
                                arguments: [
                                  {
                                    arguments: [
                                      {
                                        name: "src",
                                        nodeType: "YulIdentifier",
                                        src: "22496:3:3",
                                      },
                                      {
                                        name: "i",
                                        nodeType: "YulIdentifier",
                                        src: "22501:1:3",
                                      },
                                    ],
                                    functionName: {
                                      name: "add",
                                      nodeType: "YulIdentifier",
                                      src: "22492:3:3",
                                    },
                                    nodeType: "YulFunctionCall",
                                    src: "22492:11:3",
                                  },
                                ],
                                functionName: {
                                  name: "mload",
                                  nodeType: "YulIdentifier",
                                  src: "22486:5:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "22486:18:3",
                              },
                            ],
                            functionName: {
                              name: "mstore",
                              nodeType: "YulIdentifier",
                              src: "22466:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "22466:39:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "22466:39:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "i",
                          nodeType: "YulIdentifier",
                          src: "22413:1:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "22416:6:3",
                        },
                      ],
                      functionName: {
                        name: "lt",
                        nodeType: "YulIdentifier",
                        src: "22410:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22410:13:3",
                    },
                    nodeType: "YulForLoop",
                    post: {
                      nodeType: "YulBlock",
                      src: "22424:19:3",
                      statements: [
                        {
                          nodeType: "YulAssignment",
                          src: "22426:15:3",
                          value: {
                            arguments: [
                              {
                                name: "i",
                                nodeType: "YulIdentifier",
                                src: "22435:1:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "22438:2:3",
                                type: "",
                                value: "32",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "22431:3:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "22431:10:3",
                          },
                          variableNames: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "22426:1:3",
                            },
                          ],
                        },
                      ],
                    },
                    pre: {
                      nodeType: "YulBlock",
                      src: "22406:3:3",
                      statements: [],
                    },
                    src: "22402:113:3",
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "22549:76:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                arguments: [
                                  {
                                    name: "dst",
                                    nodeType: "YulIdentifier",
                                    src: "22599:3:3",
                                  },
                                  {
                                    name: "length",
                                    nodeType: "YulIdentifier",
                                    src: "22604:6:3",
                                  },
                                ],
                                functionName: {
                                  name: "add",
                                  nodeType: "YulIdentifier",
                                  src: "22595:3:3",
                                },
                                nodeType: "YulFunctionCall",
                                src: "22595:16:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "22613:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "mstore",
                              nodeType: "YulIdentifier",
                              src: "22588:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "22588:27:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "22588:27:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "i",
                          nodeType: "YulIdentifier",
                          src: "22530:1:3",
                        },
                        {
                          name: "length",
                          nodeType: "YulIdentifier",
                          src: "22533:6:3",
                        },
                      ],
                      functionName: {
                        name: "gt",
                        nodeType: "YulIdentifier",
                        src: "22527:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22527:13:3",
                    },
                    nodeType: "YulIf",
                    src: "22524:2:3",
                  },
                ],
              },
              name: "copy_memory_to_memory",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "src",
                  nodeType: "YulTypedName",
                  src: "22355:3:3",
                  type: "",
                },
                {
                  name: "dst",
                  nodeType: "YulTypedName",
                  src: "22360:3:3",
                  type: "",
                },
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "22365:6:3",
                  type: "",
                },
              ],
              src: "22324:307:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "22688:269:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "22698:22:3",
                    value: {
                      arguments: [
                        {
                          name: "data",
                          nodeType: "YulIdentifier",
                          src: "22712:4:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "22718:1:3",
                          type: "",
                          value: "2",
                        },
                      ],
                      functionName: {
                        name: "div",
                        nodeType: "YulIdentifier",
                        src: "22708:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22708:12:3",
                    },
                    variableNames: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "22698:6:3",
                      },
                    ],
                  },
                  {
                    nodeType: "YulVariableDeclaration",
                    src: "22729:38:3",
                    value: {
                      arguments: [
                        {
                          name: "data",
                          nodeType: "YulIdentifier",
                          src: "22759:4:3",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "22765:1:3",
                          type: "",
                          value: "1",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "22755:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22755:12:3",
                    },
                    variables: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulTypedName",
                        src: "22733:18:3",
                        type: "",
                      },
                    ],
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "22806:51:3",
                      statements: [
                        {
                          nodeType: "YulAssignment",
                          src: "22820:27:3",
                          value: {
                            arguments: [
                              {
                                name: "length",
                                nodeType: "YulIdentifier",
                                src: "22834:6:3",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "22842:4:3",
                                type: "",
                                value: "0x7f",
                              },
                            ],
                            functionName: {
                              name: "and",
                              nodeType: "YulIdentifier",
                              src: "22830:3:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "22830:17:3",
                          },
                          variableNames: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "22820:6:3",
                            },
                          ],
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "outOfPlaceEncoding",
                          nodeType: "YulIdentifier",
                          src: "22786:18:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "22779:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22779:26:3",
                    },
                    nodeType: "YulIf",
                    src: "22776:2:3",
                  },
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "22909:42:3",
                      statements: [
                        {
                          expression: {
                            arguments: [],
                            functionName: {
                              name: "panic_error_0x22",
                              nodeType: "YulIdentifier",
                              src: "22923:16:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "22923:18:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "22923:18:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          name: "outOfPlaceEncoding",
                          nodeType: "YulIdentifier",
                          src: "22873:18:3",
                        },
                        {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "22896:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "22904:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "lt",
                            nodeType: "YulIdentifier",
                            src: "22893:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "22893:14:3",
                        },
                      ],
                      functionName: {
                        name: "eq",
                        nodeType: "YulIdentifier",
                        src: "22870:2:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "22870:38:3",
                    },
                    nodeType: "YulIf",
                    src: "22867:2:3",
                  },
                ],
              },
              name: "extract_byte_array_length",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "data",
                  nodeType: "YulTypedName",
                  src: "22672:4:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "length",
                  nodeType: "YulTypedName",
                  src: "22681:6:3",
                  type: "",
                },
              ],
              src: "22637:320:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "22991:152:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23008:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23011:77:3",
                          type: "",
                          value:
                            "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23001:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23001:88:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23001:88:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23105:1:3",
                          type: "",
                          value: "4",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23108:4:3",
                          type: "",
                          value: "0x11",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23098:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23098:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23098:15:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23129:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23132:4:3",
                          type: "",
                          value: "0x24",
                        },
                      ],
                      functionName: {
                        name: "revert",
                        nodeType: "YulIdentifier",
                        src: "23122:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23122:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23122:15:3",
                  },
                ],
              },
              name: "panic_error_0x11",
              nodeType: "YulFunctionDefinition",
              src: "22963:180:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "23177:152:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23194:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23197:77:3",
                          type: "",
                          value:
                            "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23187:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23187:88:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23187:88:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23291:1:3",
                          type: "",
                          value: "4",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23294:4:3",
                          type: "",
                          value: "0x12",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23284:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23284:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23284:15:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23315:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23318:4:3",
                          type: "",
                          value: "0x24",
                        },
                      ],
                      functionName: {
                        name: "revert",
                        nodeType: "YulIdentifier",
                        src: "23308:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23308:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23308:15:3",
                  },
                ],
              },
              name: "panic_error_0x12",
              nodeType: "YulFunctionDefinition",
              src: "23149:180:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "23363:152:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23380:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23383:77:3",
                          type: "",
                          value:
                            "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23373:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23373:88:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23373:88:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23477:1:3",
                          type: "",
                          value: "4",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23480:4:3",
                          type: "",
                          value: "0x22",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23470:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23470:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23470:15:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23501:1:3",
                          type: "",
                          value: "0",
                        },
                        {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "23504:4:3",
                          type: "",
                          value: "0x24",
                        },
                      ],
                      functionName: {
                        name: "revert",
                        nodeType: "YulIdentifier",
                        src: "23494:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23494:15:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23494:15:3",
                  },
                ],
              },
              name: "panic_error_0x22",
              nodeType: "YulFunctionDefinition",
              src: "23335:180:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "23569:54:3",
                statements: [
                  {
                    nodeType: "YulAssignment",
                    src: "23579:38:3",
                    value: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "23597:5:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23604:2:3",
                              type: "",
                              value: "31",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "23593:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23593:14:3",
                        },
                        {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23613:2:3",
                              type: "",
                              value: "31",
                            },
                          ],
                          functionName: {
                            name: "not",
                            nodeType: "YulIdentifier",
                            src: "23609:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23609:7:3",
                        },
                      ],
                      functionName: {
                        name: "and",
                        nodeType: "YulIdentifier",
                        src: "23589:3:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23589:28:3",
                    },
                    variableNames: [
                      {
                        name: "result",
                        nodeType: "YulIdentifier",
                        src: "23579:6:3",
                      },
                    ],
                  },
                ],
              },
              name: "round_up_to_mul_of_32",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "23552:5:3",
                  type: "",
                },
              ],
              returnVariables: [
                {
                  name: "result",
                  nodeType: "YulTypedName",
                  src: "23562:6:3",
                  type: "",
                },
              ],
              src: "23521:102:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "23735:124:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "23757:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23765:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "23753:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23753:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "23769:34:3",
                          type: "",
                          value: "Ownable: only onwer can call thi",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23746:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23746:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23746:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "23825:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23833:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "23821:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23821:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "23838:13:3",
                          type: "",
                          value: "s function.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23814:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23814:38:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23814:38:3",
                  },
                ],
              },
              name: "store_literal_in_memory_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "23727:6:3",
                  type: "",
                },
              ],
              src: "23629:230:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "23971:125:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "23993:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24001:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "23989:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23989:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24005:34:3",
                          type: "",
                          value: "DevToken: approve cannot be to z",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "23982:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "23982:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "23982:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24061:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24069:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24057:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24057:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24074:14:3",
                          type: "",
                          value: "ero address.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24050:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24050:39:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24050:39:3",
                  },
                ],
              },
              name: "store_literal_in_memory_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "23963:6:3",
                  type: "",
                },
              ],
              src: "23865:231:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "24208:124:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24230:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24238:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24226:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24226:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24242:34:3",
                          type: "",
                          value: "Ownable: new oner can't be the r",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24219:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24219:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24219:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24298:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24306:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24294:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24294:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24311:13:3",
                          type: "",
                          value: "ezo address",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24287:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24287:38:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24287:38:3",
                  },
                ],
              },
              name: "store_literal_in_memory_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "24200:6:3",
                  type: "",
                },
              ],
              src: "24102:230:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "24444:134:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24466:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24474:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24462:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24462:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24478:34:3",
                          type: "",
                          value: "DevToken: You cannot spend that ",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24455:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24455:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24455:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24534:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24542:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24530:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24530:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24547:23:3",
                          type: "",
                          value: "much on this account.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24523:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24523:48:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24523:48:3",
                  },
                ],
              },
              name: "store_literal_in_memory_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "24436:6:3",
                  type: "",
                },
              ],
              src: "24338:240:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "24690:116:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24712:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24720:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24708:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24708:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24724:34:3",
                          type: "",
                          value: "DevToken: transfer to zero addre",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24701:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24701:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24701:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24780:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24788:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24776:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24776:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24793:5:3",
                          type: "",
                          value: "ss.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24769:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24769:30:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24769:30:3",
                  },
                ],
              },
              name: "store_literal_in_memory_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "24682:6:3",
                  type: "",
                },
              ],
              src: "24584:222:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "24918:132:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "24940:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "24948:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "24936:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "24936:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "24952:34:3",
                          type: "",
                          value: "DevToken: approve cannot be done",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24929:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24929:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24929:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25008:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25016:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25004:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25004:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25021:21:3",
                          type: "",
                          value: " from zero address.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "24997:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "24997:46:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "24997:46:3",
                  },
                ],
              },
              name: "store_literal_in_memory_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "24910:6:3",
                  type: "",
                },
              ],
              src: "24812:238:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "25162:130:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25184:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25192:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25180:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25180:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25196:34:3",
                          type: "",
                          value: "DevToken: Cannot burn more than ",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25173:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25173:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25173:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25252:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25260:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25248:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25248:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25265:19:3",
                          type: "",
                          value: "the account owns.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25241:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25241:44:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25241:44:3",
                  },
                ],
              },
              name: "store_literal_in_memory_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "25154:6:3",
                  type: "",
                },
              ],
              src: "25056:236:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "25404:122:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25426:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25434:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25422:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25422:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25438:34:3",
                          type: "",
                          value: "DevToken: Cannot stake more than",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25415:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25415:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25415:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25494:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25502:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25490:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25490:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25507:11:3",
                          type: "",
                          value: " you own.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25483:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25483:36:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25483:36:3",
                  },
                ],
              },
              name: "store_literal_in_memory_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "25396:6:3",
                  type: "",
                },
              ],
              src: "25298:228:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "25638:132:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25660:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25668:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25656:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25656:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25672:34:3",
                          type: "",
                          value: "Staking: Cannot withdraw more th",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25649:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25649:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25649:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25728:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25736:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25724:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25724:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25741:21:3",
                          type: "",
                          value: "an you have staked.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25717:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25717:46:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25717:46:3",
                  },
                ],
              },
              name: "store_literal_in_memory_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "25630:6:3",
                  type: "",
                },
              ],
              src: "25532:238:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "25882:118:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25904:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25912:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25900:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25900:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25916:34:3",
                          type: "",
                          value: "DevToken: transfer from zero add",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25893:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25893:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25893:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "25972:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "25980:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "25968:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "25968:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "25985:7:3",
                          type: "",
                          value: "ress.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "25961:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "25961:32:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "25961:32:3",
                  },
                ],
              },
              name: "store_literal_in_memory_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "25874:6:3",
                  type: "",
                },
              ],
              src: "25776:224:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "26112:64:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26134:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26142:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26130:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26130:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26146:22:3",
                          type: "",
                          value: "Cannot stake nothing",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26123:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26123:46:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26123:46:3",
                  },
                ],
              },
              name: "store_literal_in_memory_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "26104:6:3",
                  type: "",
                },
              ],
              src: "26006:170:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "26288:121:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26310:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26318:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26306:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26306:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26322:34:3",
                          type: "",
                          value: "DevToken: cannot burn from zero ",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26299:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26299:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26299:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26378:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26386:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26374:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26374:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26391:10:3",
                          type: "",
                          value: "address.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26367:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26367:35:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26367:35:3",
                  },
                ],
              },
              name: "store_literal_in_memory_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "26280:6:3",
                  type: "",
                },
              ],
              src: "26182:227:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "26521:134:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26543:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26551:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26539:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26539:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26555:34:3",
                          type: "",
                          value: "DevToken: cant transfer more tha",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26532:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26532:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26532:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26611:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26619:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26607:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26607:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26624:23:3",
                          type: "",
                          value: "n your account holds.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26600:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26600:48:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26600:48:3",
                  },
                ],
              },
              name: "store_literal_in_memory_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "26513:6:3",
                  type: "",
                },
              ],
              src: "26415:240:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "26767:119:3",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26789:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26797:1:3",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26785:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26785:14:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26801:34:3",
                          type: "",
                          value: "DevToken: cannot mint to zero ad",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26778:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26778:58:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26778:58:3",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "memPtr",
                              nodeType: "YulIdentifier",
                              src: "26857:6:3",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "26865:2:3",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "26853:3:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26853:15:3",
                        },
                        {
                          kind: "string",
                          nodeType: "YulLiteral",
                          src: "26870:8:3",
                          type: "",
                          value: "dress.",
                        },
                      ],
                      functionName: {
                        name: "mstore",
                        nodeType: "YulIdentifier",
                        src: "26846:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26846:33:3",
                    },
                    nodeType: "YulExpressionStatement",
                    src: "26846:33:3",
                  },
                ],
              },
              name: "store_literal_in_memory_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "memPtr",
                  nodeType: "YulTypedName",
                  src: "26759:6:3",
                  type: "",
                },
              ],
              src: "26661:225:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "26935:79:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "26992:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "27001:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "27004:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "26994:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "26994:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "26994:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "26958:5:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "26983:5:3",
                                },
                              ],
                              functionName: {
                                name: "cleanup_t_address",
                                nodeType: "YulIdentifier",
                                src: "26965:17:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "26965:24:3",
                            },
                          ],
                          functionName: {
                            name: "eq",
                            nodeType: "YulIdentifier",
                            src: "26955:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26955:35:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "26948:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "26948:43:3",
                    },
                    nodeType: "YulIf",
                    src: "26945:2:3",
                  },
                ],
              },
              name: "validator_revert_t_address",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "26928:5:3",
                  type: "",
                },
              ],
              src: "26892:122:3",
            },
            {
              body: {
                nodeType: "YulBlock",
                src: "27063:79:3",
                statements: [
                  {
                    body: {
                      nodeType: "YulBlock",
                      src: "27120:16:3",
                      statements: [
                        {
                          expression: {
                            arguments: [
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "27129:1:3",
                                type: "",
                                value: "0",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "27132:1:3",
                                type: "",
                                value: "0",
                              },
                            ],
                            functionName: {
                              name: "revert",
                              nodeType: "YulIdentifier",
                              src: "27122:6:3",
                            },
                            nodeType: "YulFunctionCall",
                            src: "27122:12:3",
                          },
                          nodeType: "YulExpressionStatement",
                          src: "27122:12:3",
                        },
                      ],
                    },
                    condition: {
                      arguments: [
                        {
                          arguments: [
                            {
                              name: "value",
                              nodeType: "YulIdentifier",
                              src: "27086:5:3",
                            },
                            {
                              arguments: [
                                {
                                  name: "value",
                                  nodeType: "YulIdentifier",
                                  src: "27111:5:3",
                                },
                              ],
                              functionName: {
                                name: "cleanup_t_uint256",
                                nodeType: "YulIdentifier",
                                src: "27093:17:3",
                              },
                              nodeType: "YulFunctionCall",
                              src: "27093:24:3",
                            },
                          ],
                          functionName: {
                            name: "eq",
                            nodeType: "YulIdentifier",
                            src: "27083:2:3",
                          },
                          nodeType: "YulFunctionCall",
                          src: "27083:35:3",
                        },
                      ],
                      functionName: {
                        name: "iszero",
                        nodeType: "YulIdentifier",
                        src: "27076:6:3",
                      },
                      nodeType: "YulFunctionCall",
                      src: "27076:43:3",
                    },
                    nodeType: "YulIf",
                    src: "27073:2:3",
                  },
                ],
              },
              name: "validator_revert_t_uint256",
              nodeType: "YulFunctionDefinition",
              parameters: [
                {
                  name: "value",
                  nodeType: "YulTypedName",
                  src: "27056:5:3",
                  type: "",
                },
              ],
              src: "27020:122:3",
            },
          ],
        },
        contents:
          '{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakable.Stake[] -> struct Stakable.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d(pos)\n        end := add(pos, 64)\n    }\n\n    // struct Stakable.Stake -> struct Stakable.Stake\n    function abi_encode_t_struct$_Stake_$696_memory_ptr_to_t_struct$_Stake_$696_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    // struct Stakable.StakingSummary -> struct Stakable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$703_memory_ptr_to_t_struct$_StakingSummary_$703_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakes\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$703_memory_ptr__to_t_struct$_StakingSummary_$703_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_StakingSummary_$703_memory_ptr_to_t_struct$_StakingSummary_$703_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$696_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_093302c898a3228f13082cb28d7b0051c4ea63a9029366a5a98bf48f22dba116(memPtr) {\n\n        mstore(add(memPtr, 0), "Ownable: only onwer can call thi")\n\n        mstore(add(memPtr, 32), "s function.")\n\n    }\n\n    function store_literal_in_memory_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: approve cannot be to z")\n\n        mstore(add(memPtr, 32), "ero address.")\n\n    }\n\n    function store_literal_in_memory_2e6cd0ea49368d04f5c777050e28aa1ab384c8c98bcec109176ee0299a664a2e(memPtr) {\n\n        mstore(add(memPtr, 0), "Ownable: new oner can\'t be the r")\n\n        mstore(add(memPtr, 32), "ezo address")\n\n    }\n\n    function store_literal_in_memory_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: You cannot spend that ")\n\n        mstore(add(memPtr, 32), "much on this account.")\n\n    }\n\n    function store_literal_in_memory_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: transfer to zero addre")\n\n        mstore(add(memPtr, 32), "ss.")\n\n    }\n\n    function store_literal_in_memory_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: approve cannot be done")\n\n        mstore(add(memPtr, 32), " from zero address.")\n\n    }\n\n    function store_literal_in_memory_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: Cannot burn more than ")\n\n        mstore(add(memPtr, 32), "the account owns.")\n\n    }\n\n    function store_literal_in_memory_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: Cannot stake more than")\n\n        mstore(add(memPtr, 32), " you own.")\n\n    }\n\n    function store_literal_in_memory_a3fe97486f374e86b24fd0391f82380a0ee0f95b002898b44d9cad106c525bd9(memPtr) {\n\n        mstore(add(memPtr, 0), "Staking: Cannot withdraw more th")\n\n        mstore(add(memPtr, 32), "an you have staked.")\n\n    }\n\n    function store_literal_in_memory_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: transfer from zero add")\n\n        mstore(add(memPtr, 32), "ress.")\n\n    }\n\n    function store_literal_in_memory_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522(memPtr) {\n\n        mstore(add(memPtr, 0), "Cannot stake nothing")\n\n    }\n\n    function store_literal_in_memory_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: cannot burn from zero ")\n\n        mstore(add(memPtr, 32), "address.")\n\n    }\n\n    function store_literal_in_memory_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: cant transfer more tha")\n\n        mstore(add(memPtr, 32), "n your account holds.")\n\n    }\n\n    function store_literal_in_memory_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d(memPtr) {\n\n        mstore(add(memPtr, 0), "DevToken: cannot mint to zero ad")\n\n        mstore(add(memPtr, 32), "dress.")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n',
        id: 3,
        language: "Yul",
        name: "#utility.yul",
      },
    ],
    sourceMap:
      "107:6366:0:-:0;;;1972:4:2;1939:37;;586:467:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;419:10:1;410:6;;:19;;;;;;;;;;;;;;;;;;477:6;;;;;;;;;;444:40;;473:1;444:40;;;;;;;;;;;;1710:12:2;:19;;;;;;;;;;;;;;;;;;;;;;;756:10:0;748:5;:18;;;;;;;;;;;;:::i;:::-;;786:12;776:7;:22;;;;;;;;;;;;:::i;:::-;;820:13;808:9;;:25;;;;;;;;;;;;;;;;;;858:17;843:12;:32;;;;972:12;;948:9;:21;958:10;948:21;;;;;;;;;;;;;;;:36;;;;1021:10;1000:46;;1017:1;1000:46;;;1033:12;;1000:46;;;;;;:::i;:::-;;;;;;;;586:467;;;;107:6366;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:3:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:143::-;732:5;763:6;757:13;748:22;;779:33;806:5;779:33;:::i;:::-;738:80;;;;:::o;824:139::-;879:5;910:6;904:13;895:22;;926:31;951:5;926:31;:::i;:::-;885:78;;;;:::o;969:961::-;1084:6;1092;1100;1108;1157:3;1145:9;1136:7;1132:23;1128:33;1125:2;;;1174:1;1171;1164:12;1125:2;1238:1;1227:9;1223:17;1217:24;1268:18;1260:6;1257:30;1254:2;;;1300:1;1297;1290:12;1254:2;1328:74;1394:7;1385:6;1374:9;1370:22;1328:74;:::i;:::-;1318:84;;1188:224;1472:2;1461:9;1457:18;1451:25;1503:18;1495:6;1492:30;1489:2;;;1535:1;1532;1525:12;1489:2;1563:74;1629:7;1620:6;1609:9;1605:22;1563:74;:::i;:::-;1553:84;;1422:225;1686:2;1712:62;1766:7;1757:6;1746:9;1742:22;1712:62;:::i;:::-;1702:72;;1657:127;1823:2;1849:64;1905:7;1896:6;1885:9;1881:22;1849:64;:::i;:::-;1839:74;;1794:129;1115:815;;;;;;;:::o;1936:118::-;2023:24;2041:5;2023:24;:::i;:::-;2018:3;2011:37;2001:53;;:::o;2060:222::-;2153:4;2191:2;2180:9;2176:18;2168:26;;2204:71;2272:1;2261:9;2257:17;2248:6;2204:71;:::i;:::-;2158:124;;;;:::o;2288:129::-;2322:6;2349:20;;:::i;:::-;2339:30;;2378:33;2406:4;2398:6;2378:33;:::i;:::-;2329:88;;;:::o;2423:75::-;2456:6;2489:2;2483:9;2473:19;;2463:35;:::o;2504:308::-;2566:4;2656:18;2648:6;2645:30;2642:2;;;2678:18;;:::i;:::-;2642:2;2716:29;2738:6;2716:29;:::i;:::-;2708:37;;2800:4;2794;2790:15;2782:23;;2571:241;;;:::o;2818:77::-;2855:7;2884:5;2873:16;;2863:32;;;:::o;2901:86::-;2936:7;2976:4;2969:5;2965:16;2954:27;;2944:43;;;:::o;2993:307::-;3061:1;3071:113;3085:6;3082:1;3079:13;3071:113;;;3170:1;3165:3;3161:11;3155:18;3151:1;3146:3;3142:11;3135:39;3107:2;3104:1;3100:10;3095:15;;3071:113;;;3202:6;3199:1;3196:13;3193:2;;;3282:1;3273:6;3268:3;3264:16;3257:27;3193:2;3042:258;;;;:::o;3306:320::-;3350:6;3387:1;3381:4;3377:12;3367:22;;3434:1;3428:4;3424:12;3455:18;3445:2;;3511:4;3503:6;3499:17;3489:27;;3445:2;3573;3565:6;3562:14;3542:18;3539:38;3536:2;;;3592:18;;:::i;:::-;3536:2;3357:269;;;;:::o;3632:281::-;3715:27;3737:4;3715:27;:::i;:::-;3707:6;3703:40;3845:6;3833:10;3830:22;3809:18;3797:10;3794:34;3791:62;3788:2;;;3856:18;;:::i;:::-;3788:2;3896:10;3892:2;3885:22;3675:238;;;:::o;3919:180::-;3967:77;3964:1;3957:88;4064:4;4061:1;4054:15;4088:4;4085:1;4078:15;4105:180;4153:77;4150:1;4143:88;4250:4;4247:1;4240:15;4274:4;4271:1;4264:15;4291:102;4332:6;4383:2;4379:7;4374:2;4367:5;4363:14;4359:28;4349:38;;4339:54;;;:::o;4399:122::-;4472:24;4490:5;4472:24;:::i;:::-;4465:5;4462:35;4452:2;;4511:1;4508;4501:12;4452:2;4442:79;:::o;4527:118::-;4598:22;4614:5;4598:22;:::i;:::-;4591:5;4588:33;4578:2;;4635:1;4632;4625:12;4578:2;4568:77;:::o;107:6366:0:-;;;;;;;",
    deployedSourceMap:
      "107:6366:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3946:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4664:572;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1059:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5242:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1546:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1430:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;580:137:1;;;:::i;:::-;;3689:83:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:77:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1148:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2179:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5506:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5770:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2959:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1330:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3778:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6458:889:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6242:229:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;723:107:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1241:83:0;1280:13;1312:5;1305:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:83;:::o;3946:149::-;4014:4;4030:37;4039:10;4051:7;4060:6;4030:8;:37::i;:::-;4084:4;4077:11;;3946:149;;;;:::o;4664:572::-;4786:4;4859:6;4823:11;:20;4835:7;4823:20;;;;;;;;;;;;;;;:32;4844:10;4823:32;;;;;;;;;;;;;;;;:42;;4802:142;;;;;;;;;;;;:::i;:::-;;;;;;;;;4981:37;4991:7;5000:9;5011:6;4981:9;:37::i;:::-;5090:118;5112:7;5133:10;5192:6;5157:11;:20;5169:7;5157:20;;;;;;;;;;;;;;;:32;5178:10;5157:32;;;;;;;;;;;;;;;;:41;;;;:::i;:::-;5090:8;:118::i;:::-;5225:4;5218:11;;4664:572;;;;;:::o;1059:83::-;1102:5;1126:9;;;;;;;;;;;1119:16;;1059:83;:::o;5242:258::-;5334:4;5354:118;5376:10;5400:7;5456:6;5421:11;:23;5433:10;5421:23;;;;;;;;;;;;;;;:32;5445:7;5421:32;;;;;;;;;;;;;;;;:41;;;;:::i;:::-;5354:8;:118::i;:::-;5489:4;5482:11;;5242:258;;;;:::o;1546:167::-;1643:4;283:10:1;273:20;;:6;;;;;;;;;;:20;;;252:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1663:22:0::1;1669:7;1678:6;1663:5;:22::i;:::-;1702:4;1695:11;;1546:167:::0;;;;:::o;1430:110::-;1489:7;1515:9;:18;1525:7;1515:18;;;;;;;;;;;;;;;;1508:25;;1430:110;;;:::o;580:137:1:-;283:10;273:20;;:6;;;;;;;;;;:20;;;252:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;678:1:::1;641:40;;662:6;::::0;::::1;;;;;;;;641:40;;;;;;;;;;;;708:1;691:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;580:137::o:0;3689:83:0:-;3732:7;3758;:5;:7::i;:::-;3751:14;;3689:83;:::o;497:77:1:-;535:7;561:6;;;;;;;;;;;554:13;;497:77;:::o;1148:87:0:-;1189:13;1221:7;1214:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:87;:::o;2179:167::-;2276:4;283:10:1;273:20;;:6;;;;;;;;;;:20;;;252:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2296:22:0::1;2302:7;2311:6;2296:5;:22::i;:::-;2335:4;2328:11;;2179:167:::0;;;;:::o;5506:258::-;5598:4;5618:118;5640:10;5664:7;5720:6;5685:11;:23;5697:10;5685:23;;;;;;;;;;;;;;;:32;5709:7;5685:32;;;;;;;;;;;;;;;;:41;;;;:::i;:::-;5618:8;:118::i;:::-;5753:4;5746:11;;5506:258;;;;:::o;5770:370::-;5931:9;:21;5941:10;5931:21;;;;;;;;;;;;;;;;5920:7;:32;;5899:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;6030:15;6037:7;6030:6;:15::i;:::-;6107:26;6113:10;6125:7;6107:5;:26::i;:::-;5770:370;:::o;2959:175::-;3046:4;3066:40;3076:10;3088:9;3099:6;3066:9;:40::i;:::-;3123:4;3116:11;;2959:175;;;;:::o;1330:94::-;1379:7;1405:12;;1398:19;;1330:94;:::o;3778:162::-;3876:7;3906:11;:18;3918:5;3906:18;;;;;;;;;;;;;;;:27;3925:7;3906:27;;;;;;;;;;;;;;;;3899:34;;3778:162;;;;:::o;6458:889:2:-;6538:21;;:::i;:::-;6655:24;6762:29;6794:97;;;;;;;;6822:1;6794:97;;;;6837:12;6850:6;:15;6857:7;6850:15;;;;;;;;;;;;;;;;6837:29;;;;;;;;;;;;;;;;;;;;;;;;;;:44;;6794:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6762:129;;6963:9;6958:262;6982:7;:14;;;:21;6978:1;:25;6958:262;;;7027:23;7053:39;7074:7;:14;;;7089:1;7074:17;;;;;;;;;;;;;;;;;;;;;;7053:20;:39::i;:::-;7027:65;;7136:15;7106:7;:14;;;7121:1;7106:17;;;;;;;;;;;;;;;;;;;;;;:27;;:45;;;;;7185:7;:14;;;7200:1;7185:17;;;;;;;;;;;;;;;;;;;;;;:24;;;7165:44;;;;;:::i;:::-;;;6958:262;7010:1;7005:6;;;;;:::i;:::-;;;6958:262;;;;7300:16;7277:7;:20;;:39;;;;;7333:7;7326:14;;;;6458:889;;;:::o;6242:229:0:-;6319:22;6344:35;6359:6;6367:11;6344:14;:35::i;:::-;6319:60;;6431:33;6437:10;6449:14;6431:5;:33::i;:::-;6242:229;;;:::o;723:107:1:-;283:10;273:20;;:6;;;;;;;;;;:20;;;252:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;795:28:::1;814:8;795:18;:28::i;:::-;723:107:::0;:::o;4101:557:0:-;4254:1;4237:19;;:5;:19;;;;4216:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;4383:1;4364:21;;:7;:21;;;;4343:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;4597:6;4567:11;:18;4579:5;4567:18;;;;;;;;;;;;;;;:27;4586:7;4567:27;;;;;;;;;;;;;;;:36;;;;4635:7;4619:32;;4628:5;4619:32;;;4644:6;4619:32;;;;;;:::i;:::-;;;;;;;;4101:557;;;:::o;3140:543::-;3285:1;3267:20;;:6;:20;;;;3259:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3368:1;3347:23;;:9;:23;;;;3339:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3462:6;3441:9;:17;3451:6;3441:17;;;;;;;;;;;;;;;;:27;;3420:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;3579:6;3558:9;:17;3568:6;3558:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;3619:6;3595:9;:20;3605:9;3595:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;3658:9;3641:35;;3650:6;3641:35;;;3669:6;3641:35;;;;;;:::i;:::-;;;;;;;;3140:543;;;:::o;1719:454::-;1826:1;1807:21;;:7;:21;;;;1786:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:6;1936:12;;:22;;;;;;;:::i;:::-;;;;;;;;2067:6;2045:9;:18;2055:7;2045:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2150:7;2129:37;;2146:1;2129:37;;;2159:6;2129:37;;;;;;:::i;:::-;;;;;;;;1719:454;;:::o;2352:601::-;2459:1;2440:21;;:7;:21;;;;2419:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2580:6;2558:9;:18;2568:7;2558:18;;;;;;;;;;;;;;;;:28;;2537:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;2768:6;2747:9;:18;2757:7;2747:18;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;2726:9;:18;2736:7;2726:18;;;;;;;;;;;;;;;:48;;;;2833:6;2817:12;;:22;;;;;;;:::i;:::-;;;;;;;;2935:1;2909:37;;2918:7;2909:37;;;2939:6;2909:37;;;;;;:::i;:::-;;;;;;;;2352:601;;:::o;2810:921:2:-;2880:1;2870:7;:11;2862:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2917:13;2933:6;:18;2940:10;2933:18;;;;;;;;;;;;;;;;2917:34;;2961:17;2981:15;2961:35;;3079:1;3070:5;:10;3066:314;;;3342:27;3358:10;3342:15;:27::i;:::-;3334:35;;3066:314;3507:12;3520:5;3507:19;;;;;;;;;;;;;;;;;;;;;;;;;;:34;;3560:40;;;;;;;;3566:10;3560:40;;;;;;3578:7;3560:40;;;;3587:9;3560:40;;;;3598:1;3560:40;;;3507:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3686:10;3679:45;;;3698:7;3707:5;3714:9;3679:45;;;;;;;;:::i;:::-;;;;;;;;2810:921;;;:::o;5558:750::-;5664:7;6288:13;;6263:14;:21;;;6236:7;6212:14;:20;;;6194:15;:38;;;;:::i;:::-;6193:50;;;;:::i;:::-;6192:92;;;;:::i;:::-;6191:110;;;;:::i;:::-;6172:129;;5558:750;;;:::o;4076:1294::-;4165:7;4261:18;4282:6;:18;4289:10;4282:18;;;;;;;;;;;;;;;;4261:39;;4310:26;4339:12;4352:10;4339:24;;;;;;;;;;;;;;;;;;;;;;;;;;:39;;4392:5;4339:68;;;;;;;;;;;;;;;;;;;;;;;;;;4310:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4462:6;4438:13;:20;;;:30;;4417:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;4631:14;4648:35;4669:13;4648:20;:35::i;:::-;4631:52;;4792:6;4769:13;:20;;;:29;;;;:::i;:::-;4746:13;:20;;:52;;;;;4914:1;4890:13;:20;;;:25;4886:445;;;4938:12;4951:10;4938:24;;;;;;;;;;;;;;;;;;;;;;;;;;:39;;4978:5;4938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;4931:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4886:445;;;5162:13;:20;;;5072:12;5085:10;5072:24;;;;;;;;;;;;;;;;;;;;;;;;;;:56;;5129:5;5072:63;;;;;;;;;;;;;;;;;;;;;;;;;;:87;;:110;;;;5288:32;5233:12;5246:10;5233:24;;;;;;;;;;;;;;;;;;;;;;;;;;:39;;5273:5;5233:46;;;;;;;;;;;;;;;;;;;;;;;;;;:52;;:87;;;;4886:445;5357:6;5348;:15;;;;:::i;:::-;5341:22;;;;;4076:1294;;;;:::o;836:274:1:-;283:10;273:20;;:6;;;;;;;;;;:20;;;252:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;952:1:::1;932:22;;:8;:22;;;;911:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1067:8;1038:38;;1059:6;::::0;::::1;;;;;;;;1038:38;;;;;;;;;;;;1095:8;1086:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;836:274:::0;:::o;2091:508:2:-;2150:7;2249:12;:19;;;;;;;;;;;;;;;;;;;;;;;2349:17;2391:1;2369:12;:19;;;;:23;;;;:::i;:::-;2349:43;;2481:6;2450:12;2463:9;2450:23;;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;:37;;;;;;;;;;;;;;;;;;2556:9;2539:6;:14;2546:6;2539:14;;;;;;;;;;;;;;;:26;;;;2583:9;2576:16;;;2091:508;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:262::-;2008:6;2057:2;2045:9;2036:7;2032:23;2028:32;2025:2;;;2073:1;2070;2063:12;2025:2;2116:1;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2087:117;2015:196;;;;:::o;2217:407::-;2285:6;2293;2342:2;2330:9;2321:7;2317:23;2313:32;2310:2;;;2358:1;2355;2348:12;2310:2;2401:1;2426:53;2471:7;2462:6;2451:9;2447:22;2426:53;:::i;:::-;2416:63;;2372:117;2528:2;2554:53;2599:7;2590:6;2579:9;2575:22;2554:53;:::i;:::-;2544:63;;2499:118;2300:324;;;;;:::o;2630:267::-;2743:10;2764:90;2850:3;2842:6;2764:90;:::i;:::-;2886:4;2881:3;2877:14;2863:28;;2754:143;;;;:::o;2903:108::-;2980:24;2998:5;2980:24;:::i;:::-;2975:3;2968:37;2958:53;;:::o;3017:118::-;3104:24;3122:5;3104:24;:::i;:::-;3099:3;3092:37;3082:53;;:::o;3199:888::-;3352:3;3381:76;3451:5;3381:76;:::i;:::-;3473:98;3564:6;3559:3;3473:98;:::i;:::-;3466:105;;3595:78;3667:5;3595:78;:::i;:::-;3696:7;3727:1;3712:350;3737:6;3734:1;3731:13;3712:350;;;3813:6;3807:13;3840:107;3943:3;3928:13;3840:107;:::i;:::-;3833:114;;3970:82;4045:6;3970:82;:::i;:::-;3960:92;;3772:290;3759:1;3756;3752:9;3747:14;;3712:350;;;3716:14;4078:3;4071:10;;3357:730;;;;;;;:::o;4093:109::-;4174:21;4189:5;4174:21;:::i;:::-;4169:3;4162:34;4152:50;;:::o;4208:364::-;4296:3;4324:39;4357:5;4324:39;:::i;:::-;4379:71;4443:6;4438:3;4379:71;:::i;:::-;4372:78;;4459:52;4504:6;4499:3;4492:4;4485:5;4481:16;4459:52;:::i;:::-;4536:29;4558:6;4536:29;:::i;:::-;4531:3;4527:39;4520:46;;4300:272;;;;;:::o;4578:366::-;4720:3;4741:67;4805:2;4800:3;4741:67;:::i;:::-;4734:74;;4817:93;4906:3;4817:93;:::i;:::-;4935:2;4930:3;4926:12;4919:19;;4724:220;;;:::o;4950:366::-;5092:3;5113:67;5177:2;5172:3;5113:67;:::i;:::-;5106:74;;5189:93;5278:3;5189:93;:::i;:::-;5307:2;5302:3;5298:12;5291:19;;5096:220;;;:::o;5322:366::-;5464:3;5485:67;5549:2;5544:3;5485:67;:::i;:::-;5478:74;;5561:93;5650:3;5561:93;:::i;:::-;5679:2;5674:3;5670:12;5663:19;;5468:220;;;:::o;5694:366::-;5836:3;5857:67;5921:2;5916:3;5857:67;:::i;:::-;5850:74;;5933:93;6022:3;5933:93;:::i;:::-;6051:2;6046:3;6042:12;6035:19;;5840:220;;;:::o;6066:366::-;6208:3;6229:67;6293:2;6288:3;6229:67;:::i;:::-;6222:74;;6305:93;6394:3;6305:93;:::i;:::-;6423:2;6418:3;6414:12;6407:19;;6212:220;;;:::o;6438:366::-;6580:3;6601:67;6665:2;6660:3;6601:67;:::i;:::-;6594:74;;6677:93;6766:3;6677:93;:::i;:::-;6795:2;6790:3;6786:12;6779:19;;6584:220;;;:::o;6810:366::-;6952:3;6973:67;7037:2;7032:3;6973:67;:::i;:::-;6966:74;;7049:93;7138:3;7049:93;:::i;:::-;7167:2;7162:3;7158:12;7151:19;;6956:220;;;:::o;7182:366::-;7324:3;7345:67;7409:2;7404:3;7345:67;:::i;:::-;7338:74;;7421:93;7510:3;7421:93;:::i;:::-;7539:2;7534:3;7530:12;7523:19;;7328:220;;;:::o;7554:366::-;7696:3;7717:67;7781:2;7776:3;7717:67;:::i;:::-;7710:74;;7793:93;7882:3;7793:93;:::i;:::-;7911:2;7906:3;7902:12;7895:19;;7700:220;;;:::o;7926:366::-;8068:3;8089:67;8153:2;8148:3;8089:67;:::i;:::-;8082:74;;8165:93;8254:3;8165:93;:::i;:::-;8283:2;8278:3;8274:12;8267:19;;8072:220;;;:::o;8298:366::-;8440:3;8461:67;8525:2;8520:3;8461:67;:::i;:::-;8454:74;;8537:93;8626:3;8537:93;:::i;:::-;8655:2;8650:3;8646:12;8639:19;;8444:220;;;:::o;8670:366::-;8812:3;8833:67;8897:2;8892:3;8833:67;:::i;:::-;8826:74;;8909:93;8998:3;8909:93;:::i;:::-;9027:2;9022:3;9018:12;9011:19;;8816:220;;;:::o;9042:366::-;9184:3;9205:67;9269:2;9264:3;9205:67;:::i;:::-;9198:74;;9281:93;9370:3;9281:93;:::i;:::-;9399:2;9394:3;9390:12;9383:19;;9188:220;;;:::o;9414:366::-;9556:3;9577:67;9641:2;9636:3;9577:67;:::i;:::-;9570:74;;9653:93;9742:3;9653:93;:::i;:::-;9771:2;9766:3;9762:12;9755:19;;9560:220;;;:::o;9840:847::-;9971:4;9966:3;9962:14;10058:4;10051:5;10047:16;10041:23;10077:63;10134:4;10129:3;10125:14;10111:12;10077:63;:::i;:::-;9986:164;10234:4;10227:5;10223:16;10217:23;10253:63;10310:4;10305:3;10301:14;10287:12;10253:63;:::i;:::-;10160:166;10409:4;10402:5;10398:16;10392:23;10428:63;10485:4;10480:3;10476:14;10462:12;10428:63;:::i;:::-;10336:165;10588:4;10581:5;10577:16;10571:23;10607:63;10664:4;10659:3;10655:14;10641:12;10607:63;:::i;:::-;10511:169;9940:747;;;:::o;10765:702::-;10896:3;10932:4;10927:3;10923:14;11027:4;11020:5;11016:16;11010:23;11046:63;11103:4;11098:3;11094:14;11080:12;11046:63;:::i;:::-;10947:172;11203:4;11196:5;11192:16;11186:23;11256:3;11250:4;11246:14;11239:4;11234:3;11230:14;11223:38;11282:147;11424:4;11410:12;11282:147;:::i;:::-;11274:155;;11129:311;11457:4;11450:11;;10901:566;;;;;:::o;11473:108::-;11550:24;11568:5;11550:24;:::i;:::-;11545:3;11538:37;11528:53;;:::o;11587:118::-;11674:24;11692:5;11674:24;:::i;:::-;11669:3;11662:37;11652:53;;:::o;11711:112::-;11794:22;11810:5;11794:22;:::i;:::-;11789:3;11782:35;11772:51;;:::o;11829:222::-;11922:4;11960:2;11949:9;11945:18;11937:26;;11973:71;12041:1;12030:9;12026:17;12017:6;11973:71;:::i;:::-;11927:124;;;;:::o;12057:210::-;12144:4;12182:2;12171:9;12167:18;12159:26;;12195:65;12257:1;12246:9;12242:17;12233:6;12195:65;:::i;:::-;12149:118;;;;:::o;12273:313::-;12386:4;12424:2;12413:9;12409:18;12401:26;;12473:9;12467:4;12463:20;12459:1;12448:9;12444:17;12437:47;12501:78;12574:4;12565:6;12501:78;:::i;:::-;12493:86;;12391:195;;;;:::o;12592:419::-;12758:4;12796:2;12785:9;12781:18;12773:26;;12845:9;12839:4;12835:20;12831:1;12820:9;12816:17;12809:47;12873:131;12999:4;12873:131;:::i;:::-;12865:139;;12763:248;;;:::o;13017:419::-;13183:4;13221:2;13210:9;13206:18;13198:26;;13270:9;13264:4;13260:20;13256:1;13245:9;13241:17;13234:47;13298:131;13424:4;13298:131;:::i;:::-;13290:139;;13188:248;;;:::o;13442:419::-;13608:4;13646:2;13635:9;13631:18;13623:26;;13695:9;13689:4;13685:20;13681:1;13670:9;13666:17;13659:47;13723:131;13849:4;13723:131;:::i;:::-;13715:139;;13613:248;;;:::o;13867:419::-;14033:4;14071:2;14060:9;14056:18;14048:26;;14120:9;14114:4;14110:20;14106:1;14095:9;14091:17;14084:47;14148:131;14274:4;14148:131;:::i;:::-;14140:139;;14038:248;;;:::o;14292:419::-;14458:4;14496:2;14485:9;14481:18;14473:26;;14545:9;14539:4;14535:20;14531:1;14520:9;14516:17;14509:47;14573:131;14699:4;14573:131;:::i;:::-;14565:139;;14463:248;;;:::o;14717:419::-;14883:4;14921:2;14910:9;14906:18;14898:26;;14970:9;14964:4;14960:20;14956:1;14945:9;14941:17;14934:47;14998:131;15124:4;14998:131;:::i;:::-;14990:139;;14888:248;;;:::o;15142:419::-;15308:4;15346:2;15335:9;15331:18;15323:26;;15395:9;15389:4;15385:20;15381:1;15370:9;15366:17;15359:47;15423:131;15549:4;15423:131;:::i;:::-;15415:139;;15313:248;;;:::o;15567:419::-;15733:4;15771:2;15760:9;15756:18;15748:26;;15820:9;15814:4;15810:20;15806:1;15795:9;15791:17;15784:47;15848:131;15974:4;15848:131;:::i;:::-;15840:139;;15738:248;;;:::o;15992:419::-;16158:4;16196:2;16185:9;16181:18;16173:26;;16245:9;16239:4;16235:20;16231:1;16220:9;16216:17;16209:47;16273:131;16399:4;16273:131;:::i;:::-;16265:139;;16163:248;;;:::o;16417:419::-;16583:4;16621:2;16610:9;16606:18;16598:26;;16670:9;16664:4;16660:20;16656:1;16645:9;16641:17;16634:47;16698:131;16824:4;16698:131;:::i;:::-;16690:139;;16588:248;;;:::o;16842:419::-;17008:4;17046:2;17035:9;17031:18;17023:26;;17095:9;17089:4;17085:20;17081:1;17070:9;17066:17;17059:47;17123:131;17249:4;17123:131;:::i;:::-;17115:139;;17013:248;;;:::o;17267:419::-;17433:4;17471:2;17460:9;17456:18;17448:26;;17520:9;17514:4;17510:20;17506:1;17495:9;17491:17;17484:47;17548:131;17674:4;17548:131;:::i;:::-;17540:139;;17438:248;;;:::o;17692:419::-;17858:4;17896:2;17885:9;17881:18;17873:26;;17945:9;17939:4;17935:20;17931:1;17920:9;17916:17;17909:47;17973:131;18099:4;17973:131;:::i;:::-;17965:139;;17863:248;;;:::o;18117:419::-;18283:4;18321:2;18310:9;18306:18;18298:26;;18370:9;18364:4;18360:20;18356:1;18345:9;18341:17;18334:47;18398:131;18524:4;18398:131;:::i;:::-;18390:139;;18288:248;;;:::o;18542:397::-;18697:4;18735:2;18724:9;18720:18;18712:26;;18784:9;18778:4;18774:20;18770:1;18759:9;18755:17;18748:47;18812:120;18927:4;18918:6;18812:120;:::i;:::-;18804:128;;18702:237;;;;:::o;18945:222::-;19038:4;19076:2;19065:9;19061:18;19053:26;;19089:71;19157:1;19146:9;19142:17;19133:6;19089:71;:::i;:::-;19043:124;;;;:::o;19173:442::-;19322:4;19360:2;19349:9;19345:18;19337:26;;19373:71;19441:1;19430:9;19426:17;19417:6;19373:71;:::i;:::-;19454:72;19522:2;19511:9;19507:18;19498:6;19454:72;:::i;:::-;19536;19604:2;19593:9;19589:18;19580:6;19536:72;:::i;:::-;19327:288;;;;;;:::o;19621:214::-;19710:4;19748:2;19737:9;19733:18;19725:26;;19761:67;19825:1;19814:9;19810:17;19801:6;19761:67;:::i;:::-;19715:120;;;;:::o;19841:154::-;19930:4;19953:3;19945:11;;19983:4;19978:3;19974:14;19966:22;;19935:60;;;:::o;20001:136::-;20090:6;20124:5;20118:12;20108:22;;20097:40;;;:::o;20143:99::-;20195:6;20229:5;20223:12;20213:22;;20202:40;;;:::o;20248:135::-;20340:4;20372;20367:3;20363:14;20355:22;;20345:38;;;:::o;20389:196::-;20500:11;20534:6;20529:3;20522:19;20574:4;20569:3;20565:14;20550:29;;20512:73;;;;:::o;20591:169::-;20675:11;20709:6;20704:3;20697:19;20749:4;20744:3;20740:14;20725:29;;20687:73;;;;:::o;20766:305::-;20806:3;20825:20;20843:1;20825:20;:::i;:::-;20820:25;;20859:20;20877:1;20859:20;:::i;:::-;20854:25;;21013:1;20945:66;20941:74;20938:1;20935:81;20932:2;;;21019:18;;:::i;:::-;20932:2;21063:1;21060;21056:9;21049:16;;20810:261;;;;:::o;21077:185::-;21117:1;21134:20;21152:1;21134:20;:::i;:::-;21129:25;;21168:20;21186:1;21168:20;:::i;:::-;21163:25;;21207:1;21197:2;;21212:18;;:::i;:::-;21197:2;21254:1;21251;21247:9;21242:14;;21119:143;;;;:::o;21268:348::-;21308:7;21331:20;21349:1;21331:20;:::i;:::-;21326:25;;21365:20;21383:1;21365:20;:::i;:::-;21360:25;;21553:1;21485:66;21481:74;21478:1;21475:81;21470:1;21463:9;21456:17;21452:105;21449:2;;;21560:18;;:::i;:::-;21449:2;21608:1;21605;21601:9;21590:20;;21316:300;;;;:::o;21622:191::-;21662:4;21682:20;21700:1;21682:20;:::i;:::-;21677:25;;21716:20;21734:1;21716:20;:::i;:::-;21711:25;;21755:1;21752;21749:8;21746:2;;;21760:18;;:::i;:::-;21746:2;21805:1;21802;21798:9;21790:17;;21667:146;;;;:::o;21819:96::-;21856:7;21885:24;21903:5;21885:24;:::i;:::-;21874:35;;21864:51;;;:::o;21921:90::-;21955:7;21998:5;21991:13;21984:21;21973:32;;21963:48;;;:::o;22017:126::-;22054:7;22094:42;22087:5;22083:54;22072:65;;22062:81;;;:::o;22149:77::-;22186:7;22215:5;22204:16;;22194:32;;;:::o;22232:86::-;22267:7;22307:4;22300:5;22296:16;22285:27;;22275:43;;;:::o;22324:307::-;22392:1;22402:113;22416:6;22413:1;22410:13;22402:113;;;22501:1;22496:3;22492:11;22486:18;22482:1;22477:3;22473:11;22466:39;22438:2;22435:1;22431:10;22426:15;;22402:113;;;22533:6;22530:1;22527:13;22524:2;;;22613:1;22604:6;22599:3;22595:16;22588:27;22524:2;22373:258;;;;:::o;22637:320::-;22681:6;22718:1;22712:4;22708:12;22698:22;;22765:1;22759:4;22755:12;22786:18;22776:2;;22842:4;22834:6;22830:17;22820:27;;22776:2;22904;22896:6;22893:14;22873:18;22870:38;22867:2;;;22923:18;;:::i;:::-;22867:2;22688:269;;;;:::o;22963:180::-;23011:77;23008:1;23001:88;23108:4;23105:1;23098:15;23132:4;23129:1;23122:15;23149:180;23197:77;23194:1;23187:88;23294:4;23291:1;23284:15;23318:4;23315:1;23308:15;23335:180;23383:77;23380:1;23373:88;23480:4;23477:1;23470:15;23504:4;23501:1;23494:15;23521:102;23562:6;23613:2;23609:7;23604:2;23597:5;23593:14;23589:28;23579:38;;23569:54;;;:::o;23629:230::-;23769:34;23765:1;23757:6;23753:14;23746:58;23838:13;23833:2;23825:6;23821:15;23814:38;23735:124;:::o;23865:231::-;24005:34;24001:1;23993:6;23989:14;23982:58;24074:14;24069:2;24061:6;24057:15;24050:39;23971:125;:::o;24102:230::-;24242:34;24238:1;24230:6;24226:14;24219:58;24311:13;24306:2;24298:6;24294:15;24287:38;24208:124;:::o;24338:240::-;24478:34;24474:1;24466:6;24462:14;24455:58;24547:23;24542:2;24534:6;24530:15;24523:48;24444:134;:::o;24584:222::-;24724:34;24720:1;24712:6;24708:14;24701:58;24793:5;24788:2;24780:6;24776:15;24769:30;24690:116;:::o;24812:238::-;24952:34;24948:1;24940:6;24936:14;24929:58;25021:21;25016:2;25008:6;25004:15;24997:46;24918:132;:::o;25056:236::-;25196:34;25192:1;25184:6;25180:14;25173:58;25265:19;25260:2;25252:6;25248:15;25241:44;25162:130;:::o;25298:228::-;25438:34;25434:1;25426:6;25422:14;25415:58;25507:11;25502:2;25494:6;25490:15;25483:36;25404:122;:::o;25532:238::-;25672:34;25668:1;25660:6;25656:14;25649:58;25741:21;25736:2;25728:6;25724:15;25717:46;25638:132;:::o;25776:224::-;25916:34;25912:1;25904:6;25900:14;25893:58;25985:7;25980:2;25972:6;25968:15;25961:32;25882:118;:::o;26006:170::-;26146:22;26142:1;26134:6;26130:14;26123:46;26112:64;:::o;26182:227::-;26322:34;26318:1;26310:6;26306:14;26299:58;26391:10;26386:2;26378:6;26374:15;26367:35;26288:121;:::o;26415:240::-;26555:34;26551:1;26543:6;26539:14;26532:58;26624:23;26619:2;26611:6;26607:15;26600:48;26521:134;:::o;26661:225::-;26801:34;26797:1;26789:6;26785:14;26778:58;26870:8;26865:2;26857:6;26853:15;26846:33;26767:119;:::o;26892:122::-;26965:24;26983:5;26965:24;:::i;:::-;26958:5;26955:35;26945:2;;27004:1;27001;26994:12;26945:2;26935:79;:::o;27020:122::-;27093:24;27111:5;27093:24;:::i;:::-;27086:5;27083:35;27073:2;;27132:1;27129;27122:12;27073:2;27063:79;:::o",
    source:
      '// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport "./Ownable.sol";\nimport "./Stakable.sol";\n\ncontract DevToken is Ownable, Stakable {\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    uint256 private _totalSupply;\n    uint8 private _decimals;\n    string private _symbol;\n    string private _name;\n\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    constructor(\n        string memory token_name,\n        string memory short_symbol,\n        uint8 token_decimal,\n        uint256 token_totalSupply\n    ) {\n        _name = token_name;\n        _symbol = short_symbol;\n        _decimals = token_decimal;\n        _totalSupply = token_totalSupply;\n\n        // Add all tokens created to the creator of the token\n        _balances[msg.sender] = _totalSupply;\n\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    function decimals() external view returns (uint8) {\n        return _decimals;\n    }\n\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    function getTotalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) external view returns (uint256) {\n        return _balances[account];\n    }\n\n    function mint(address account, uint256 amount)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        _mint(account, amount);\n        return true;\n    }\n\n    function _mint(address account, uint256 amount) internal {\n        require(\n            account != address(0),\n            "DevToken: cannot mint to zero address."\n        );\n\n        // Increase total supply\n        _totalSupply += amount;\n\n        // Add the ammount to the account balance using the balance mapping\n        _balances[account] += amount;\n\n        // Emit event to log the action\n        emit Transfer(address(0), account, amount);\n    }\n\n    function burn(address account, uint256 amount)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        _burn(account, amount);\n        return true;\n    }\n\n    function _burn(address account, uint256 amount) internal {\n        require(\n            account != address(0),\n            "DevToken: cannot burn from zero address."\n        );\n        require(\n            _balances[account] >= amount,\n            "DevToken: Cannot burn more than the account owns."\n        );\n\n        // Remove the amount from the account balance\n        _balances[account] = _balances[account] - amount;\n\n        // Decrease totalSupply\n        _totalSupply -= amount;\n\n        // Emit event, uzero zero address as receiver\n        emit Transfer(account, address(0), amount);\n    }\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool)\n    {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal {\n        require(sender != address(0), "DevToken: transfer from zero address.");\n        require(recipient != address(0), "DevToken: transfer to zero address.");\n        require(\n            _balances[sender] >= amount,\n            "DevToken: cant transfer more than your account holds."\n        );\n\n        _balances[sender] -= amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    function getOwner() external view returns (address) {\n        return owner();\n    }\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) external returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal {\n        require(\n            owner != address(0),\n            "DevToken: approve cannot be done from zero address."\n        );\n        require(\n            spender != address(0),\n            "DevToken: approve cannot be to zero address."\n        );\n\n        // Set the allowance of the spender address at the Owner mapping over accounts to the amount\n        _allowances[owner][spender] = amount;\n\n        emit Approval(owner, spender, amount);\n    }\n\n    function transferFrom(\n        address spender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool) {\n        require(\n            _allowances[spender][msg.sender] >= amount,\n            "DevToken: You cannot spend that much on this account."\n        );\n\n        // Transfer first\n        _transfer(spender, recipient, amount);\n\n        // Reduce current allowance so a user cannot respend\n        _approve(\n            spender,\n            msg.sender,\n            _allowances[spender][msg.sender] - amount\n        );\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 amount)\n        public\n        returns (bool)\n    {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender] + amount\n        );\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 amount)\n        public\n        returns (bool)\n    {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender] - amount\n        );\n        return true;\n    }\n\n    function stake(uint256 _amount) public {\n        // Make sure staker actually is staking only what he has in his balance\n        require(\n            _amount <= _balances[msg.sender],\n            "DevToken: Cannot stake more than you own."\n        );\n\n        _stake(_amount);\n\n        // Burn the amount of tokens on the sender\n        _burn(msg.sender, _amount);\n    }\n\n    /**\n     * @notice withdrawStake is used to withdraw stakes from the account holder\n     */\n    function withdrawStake(uint256 amount, uint256 stake_index) public {\n        uint256 amount_to_mint = _withdrawStake(amount, stake_index);\n\n        // Return tstaked tokens to user\n        _mint(msg.sender, amount_to_mint);\n    }\n}\n',
    sourcePath:
      "/Users/mayckonbarbosadasilva/Desktop/desktop/mayckon/solidity/BEP20-app/contracts/DevToken.sol",
    ast: {
      absolutePath: "project:/contracts/DevToken.sol",
      exportedSymbols: {
        DevToken: [566],
        Ownable: [674],
        Stakable: [1024],
      },
      id: 567,
      license: "MIT",
      nodeType: "SourceUnit",
      nodes: [
        {
          id: 1,
          literals: ["solidity", "^", "0.8", ".4"],
          nodeType: "PragmaDirective",
          src: "32:23:0",
        },
        {
          absolutePath: "project:/contracts/Ownable.sol",
          file: "./Ownable.sol",
          id: 2,
          nameLocation: "-1:-1:-1",
          nodeType: "ImportDirective",
          scope: 567,
          sourceUnit: 675,
          src: "57:23:0",
          symbolAliases: [],
          unitAlias: "",
        },
        {
          absolutePath: "project:/contracts/Stakable.sol",
          file: "./Stakable.sol",
          id: 3,
          nameLocation: "-1:-1:-1",
          nodeType: "ImportDirective",
          scope: 567,
          sourceUnit: 1025,
          src: "81:24:0",
          symbolAliases: [],
          unitAlias: "",
        },
        {
          abstract: false,
          baseContracts: [
            {
              baseName: {
                id: 4,
                name: "Ownable",
                nodeType: "IdentifierPath",
                referencedDeclaration: 674,
                src: "128:7:0",
              },
              id: 5,
              nodeType: "InheritanceSpecifier",
              src: "128:7:0",
            },
            {
              baseName: {
                id: 6,
                name: "Stakable",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1024,
                src: "137:8:0",
              },
              id: 7,
              nodeType: "InheritanceSpecifier",
              src: "137:8:0",
            },
          ],
          contractDependencies: [],
          contractKind: "contract",
          fullyImplemented: true,
          id: 566,
          linearizedBaseContracts: [566, 1024, 674],
          name: "DevToken",
          nameLocation: "116:8:0",
          nodeType: "ContractDefinition",
          nodes: [
            {
              anonymous: false,
              id: 15,
              name: "Transfer",
              nameLocation: "158:8:0",
              nodeType: "EventDefinition",
              parameters: {
                id: 14,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 9,
                    indexed: true,
                    mutability: "mutable",
                    name: "from",
                    nameLocation: "183:4:0",
                    nodeType: "VariableDeclaration",
                    scope: 15,
                    src: "167:20:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 8,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "167:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 11,
                    indexed: true,
                    mutability: "mutable",
                    name: "to",
                    nameLocation: "205:2:0",
                    nodeType: "VariableDeclaration",
                    scope: 15,
                    src: "189:18:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 10,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "189:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 13,
                    indexed: false,
                    mutability: "mutable",
                    name: "value",
                    nameLocation: "217:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 15,
                    src: "209:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 12,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "209:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "166:57:0",
              },
              src: "152:72:0",
            },
            {
              anonymous: false,
              id: 23,
              name: "Approval",
              nameLocation: "235:8:0",
              nodeType: "EventDefinition",
              parameters: {
                id: 22,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 17,
                    indexed: true,
                    mutability: "mutable",
                    name: "owner",
                    nameLocation: "269:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 23,
                    src: "253:21:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 16,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "253:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 19,
                    indexed: true,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "300:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 23,
                    src: "284:23:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 18,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "284:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 21,
                    indexed: false,
                    mutability: "mutable",
                    name: "value",
                    nameLocation: "325:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 23,
                    src: "317:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 20,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "317:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "243:93:0",
              },
              src: "229:108:0",
            },
            {
              constant: false,
              id: 25,
              mutability: "mutable",
              name: "_totalSupply",
              nameLocation: "359:12:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "343:28:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
              typeName: {
                id: 24,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "343:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 27,
              mutability: "mutable",
              name: "_decimals",
              nameLocation: "391:9:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "377:23:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_uint8",
                typeString: "uint8",
              },
              typeName: {
                id: 26,
                name: "uint8",
                nodeType: "ElementaryTypeName",
                src: "377:5:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint8",
                  typeString: "uint8",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 29,
              mutability: "mutable",
              name: "_symbol",
              nameLocation: "421:7:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "406:22:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_string_storage",
                typeString: "string",
              },
              typeName: {
                id: 28,
                name: "string",
                nodeType: "ElementaryTypeName",
                src: "406:6:0",
                typeDescriptions: {
                  typeIdentifier: "t_string_storage_ptr",
                  typeString: "string",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 31,
              mutability: "mutable",
              name: "_name",
              nameLocation: "449:5:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "434:20:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_string_storage",
                typeString: "string",
              },
              typeName: {
                id: 30,
                name: "string",
                nodeType: "ElementaryTypeName",
                src: "434:6:0",
                typeDescriptions: {
                  typeIdentifier: "t_string_storage_ptr",
                  typeString: "string",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 35,
              mutability: "mutable",
              name: "_balances",
              nameLocation: "497:9:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "461:45:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                typeString: "mapping(address => uint256)",
              },
              typeName: {
                id: 34,
                keyType: {
                  id: 32,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "469:7:0",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                nodeType: "Mapping",
                src: "461:27:0",
                typeDescriptions: {
                  typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                  typeString: "mapping(address => uint256)",
                },
                valueType: {
                  id: 33,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "480:7:0",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 41,
              mutability: "mutable",
              name: "_allowances",
              nameLocation: "568:11:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "512:67:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                typeString: "mapping(address => mapping(address => uint256))",
              },
              typeName: {
                id: 40,
                keyType: {
                  id: 36,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "520:7:0",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                nodeType: "Mapping",
                src: "512:47:0",
                typeDescriptions: {
                  typeIdentifier:
                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  typeString: "mapping(address => mapping(address => uint256))",
                },
                valueType: {
                  id: 39,
                  keyType: {
                    id: 37,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "539:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  nodeType: "Mapping",
                  src: "531:27:0",
                  typeDescriptions: {
                    typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                    typeString: "mapping(address => uint256)",
                  },
                  valueType: {
                    id: 38,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "550:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                },
              },
              visibility: "private",
            },
            {
              body: {
                id: 85,
                nodeType: "Block",
                src: "738:315:0",
                statements: [
                  {
                    expression: {
                      id: 54,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 52,
                        name: "_name",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 31,
                        src: "748:5:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage",
                          typeString: "string storage ref",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 53,
                        name: "token_name",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 43,
                        src: "756:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                      src: "748:18:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    id: 55,
                    nodeType: "ExpressionStatement",
                    src: "748:18:0",
                  },
                  {
                    expression: {
                      id: 58,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 56,
                        name: "_symbol",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29,
                        src: "776:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage",
                          typeString: "string storage ref",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 57,
                        name: "short_symbol",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 45,
                        src: "786:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                      src: "776:22:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    id: 59,
                    nodeType: "ExpressionStatement",
                    src: "776:22:0",
                  },
                  {
                    expression: {
                      id: 62,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 60,
                        name: "_decimals",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 27,
                        src: "808:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint8",
                          typeString: "uint8",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 61,
                        name: "token_decimal",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 47,
                        src: "820:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint8",
                          typeString: "uint8",
                        },
                      },
                      src: "808:25:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    id: 63,
                    nodeType: "ExpressionStatement",
                    src: "808:25:0",
                  },
                  {
                    expression: {
                      id: 66,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 64,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "843:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 65,
                        name: "token_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 49,
                        src: "858:17:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "843:32:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 67,
                    nodeType: "ExpressionStatement",
                    src: "843:32:0",
                  },
                  {
                    expression: {
                      id: 73,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 68,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "948:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 71,
                        indexExpression: {
                          expression: {
                            id: 69,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "958:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 70,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "958:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "948:21:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 72,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "972:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "948:36:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 74,
                    nodeType: "ExpressionStatement",
                    src: "948:36:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          arguments: [
                            {
                              hexValue: "30",
                              id: 78,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "1017:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 77,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1009:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 76,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1009:7:0",
                              typeDescriptions: {},
                            },
                          },
                          id: 79,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1009:10:0",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          expression: {
                            id: 80,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "1021:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 81,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "1021:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 82,
                          name: "_totalSupply",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 25,
                          src: "1033:12:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 75,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "1000:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 83,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1000:46:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 84,
                    nodeType: "EmitStatement",
                    src: "995:51:0",
                  },
                ],
              },
              id: 86,
              implemented: true,
              kind: "constructor",
              modifiers: [],
              name: "",
              nameLocation: "-1:-1:-1",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 50,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 43,
                    mutability: "mutable",
                    name: "token_name",
                    nameLocation: "621:10:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "607:24:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 42,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "607:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 45,
                    mutability: "mutable",
                    name: "short_symbol",
                    nameLocation: "655:12:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "641:26:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 44,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "641:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 47,
                    mutability: "mutable",
                    name: "token_decimal",
                    nameLocation: "683:13:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "677:19:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                    typeName: {
                      id: 46,
                      name: "uint8",
                      nodeType: "ElementaryTypeName",
                      src: "677:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 49,
                    mutability: "mutable",
                    name: "token_totalSupply",
                    nameLocation: "714:17:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "706:25:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 48,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "706:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "597:140:0",
              },
              returnParameters: {
                id: 51,
                nodeType: "ParameterList",
                parameters: [],
                src: "738:0:0",
              },
              scope: 566,
              src: "586:467:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 93,
                nodeType: "Block",
                src: "1109:33:0",
                statements: [
                  {
                    expression: {
                      id: 91,
                      name: "_decimals",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 27,
                      src: "1126:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    functionReturnParameters: 90,
                    id: 92,
                    nodeType: "Return",
                    src: "1119:16:0",
                  },
                ],
              },
              functionSelector: "313ce567",
              id: 94,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "decimals",
              nameLocation: "1068:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 87,
                nodeType: "ParameterList",
                parameters: [],
                src: "1076:2:0",
              },
              returnParameters: {
                id: 90,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 89,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 94,
                    src: "1102:5:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                    typeName: {
                      id: 88,
                      name: "uint8",
                      nodeType: "ElementaryTypeName",
                      src: "1102:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1101:7:0",
              },
              scope: 566,
              src: "1059:83:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 101,
                nodeType: "Block",
                src: "1204:31:0",
                statements: [
                  {
                    expression: {
                      id: 99,
                      name: "_symbol",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 29,
                      src: "1221:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    functionReturnParameters: 98,
                    id: 100,
                    nodeType: "Return",
                    src: "1214:14:0",
                  },
                ],
              },
              functionSelector: "95d89b41",
              id: 102,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "symbol",
              nameLocation: "1157:6:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 95,
                nodeType: "ParameterList",
                parameters: [],
                src: "1163:2:0",
              },
              returnParameters: {
                id: 98,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 97,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 102,
                    src: "1189:13:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 96,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "1189:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1188:15:0",
              },
              scope: 566,
              src: "1148:87:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 109,
                nodeType: "Block",
                src: "1295:29:0",
                statements: [
                  {
                    expression: {
                      id: 107,
                      name: "_name",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 31,
                      src: "1312:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    functionReturnParameters: 106,
                    id: 108,
                    nodeType: "Return",
                    src: "1305:12:0",
                  },
                ],
              },
              functionSelector: "06fdde03",
              id: 110,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "name",
              nameLocation: "1250:4:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 103,
                nodeType: "ParameterList",
                parameters: [],
                src: "1254:2:0",
              },
              returnParameters: {
                id: 106,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 105,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 110,
                    src: "1280:13:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 104,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "1280:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1279:15:0",
              },
              scope: 566,
              src: "1241:83:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 117,
                nodeType: "Block",
                src: "1388:36:0",
                statements: [
                  {
                    expression: {
                      id: 115,
                      name: "_totalSupply",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 25,
                      src: "1405:12:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    functionReturnParameters: 114,
                    id: 116,
                    nodeType: "Return",
                    src: "1398:19:0",
                  },
                ],
              },
              functionSelector: "c4e41b22",
              id: 118,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "getTotalSupply",
              nameLocation: "1339:14:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 111,
                nodeType: "ParameterList",
                parameters: [],
                src: "1353:2:0",
              },
              returnParameters: {
                id: 114,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 113,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 118,
                    src: "1379:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 112,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1379:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1378:9:0",
              },
              scope: 566,
              src: "1330:94:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 129,
                nodeType: "Block",
                src: "1498:42:0",
                statements: [
                  {
                    expression: {
                      baseExpression: {
                        id: 125,
                        name: "_balances",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 35,
                        src: "1515:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                          typeString: "mapping(address => uint256)",
                        },
                      },
                      id: 127,
                      indexExpression: {
                        id: 126,
                        name: "account",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 120,
                        src: "1525:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "1515:18:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    functionReturnParameters: 124,
                    id: 128,
                    nodeType: "Return",
                    src: "1508:25:0",
                  },
                ],
              },
              functionSelector: "70a08231",
              id: 130,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "balanceOf",
              nameLocation: "1439:9:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 121,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 120,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "1457:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 130,
                    src: "1449:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 119,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "1449:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1448:17:0",
              },
              returnParameters: {
                id: 124,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 123,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 130,
                    src: "1489:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 122,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1489:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1488:9:0",
              },
              scope: 566,
              src: "1430:110:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 148,
                nodeType: "Block",
                src: "1653:60:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          id: 142,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 132,
                          src: "1669:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 143,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 134,
                          src: "1678:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 141,
                        name: "_mint",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 186,
                        src: "1663:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 144,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1663:22:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 145,
                    nodeType: "ExpressionStatement",
                    src: "1663:22:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 146,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1702:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 140,
                    id: 147,
                    nodeType: "Return",
                    src: "1695:11:0",
                  },
                ],
              },
              functionSelector: "40c10f19",
              id: 149,
              implemented: true,
              kind: "function",
              modifiers: [
                {
                  id: 137,
                  kind: "modifierInvocation",
                  modifierName: {
                    id: 136,
                    name: "onlyOwner",
                    nodeType: "IdentifierPath",
                    referencedDeclaration: 588,
                    src: "1616:9:0",
                  },
                  nodeType: "ModifierInvocation",
                  src: "1616:9:0",
                },
              ],
              name: "mint",
              nameLocation: "1555:4:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 135,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 132,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "1568:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 149,
                    src: "1560:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 131,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "1560:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 134,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "1585:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 149,
                    src: "1577:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 133,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1577:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1559:33:0",
              },
              returnParameters: {
                id: 140,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 139,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 149,
                    src: "1643:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 138,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "1643:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1642:6:0",
              },
              scope: 566,
              src: "1546:167:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 185,
                nodeType: "Block",
                src: "1776:397:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 162,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 157,
                            name: "account",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 151,
                            src: "1807:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 160,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1826:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 159,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "1818:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 158,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "1818:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 161,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "1818:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "1807:21:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2063616e6e6f74206d696e7420746f207a65726f20616464726573732e",
                          id: 163,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1842:40:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d",
                            typeString:
                              'literal_string "DevToken: cannot mint to zero address."',
                          },
                          value: "DevToken: cannot mint to zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d",
                            typeString:
                              'literal_string "DevToken: cannot mint to zero address."',
                          },
                        ],
                        id: 156,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "1786:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 164,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1786:106:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 165,
                    nodeType: "ExpressionStatement",
                    src: "1786:106:0",
                  },
                  {
                    expression: {
                      id: 168,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 166,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "1936:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "+=",
                      rightHandSide: {
                        id: 167,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 153,
                        src: "1952:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "1936:22:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 169,
                    nodeType: "ExpressionStatement",
                    src: "1936:22:0",
                  },
                  {
                    expression: {
                      id: 174,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 170,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "2045:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 172,
                        indexExpression: {
                          id: 171,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 151,
                          src: "2055:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "2045:18:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "+=",
                      rightHandSide: {
                        id: 173,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 153,
                        src: "2067:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2045:28:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 175,
                    nodeType: "ExpressionStatement",
                    src: "2045:28:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          arguments: [
                            {
                              hexValue: "30",
                              id: 179,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2146:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 178,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2138:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 177,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2138:7:0",
                              typeDescriptions: {},
                            },
                          },
                          id: 180,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2138:10:0",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 181,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 151,
                          src: "2150:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 182,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 153,
                          src: "2159:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 176,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "2129:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 183,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2129:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 184,
                    nodeType: "EmitStatement",
                    src: "2124:42:0",
                  },
                ],
              },
              id: 186,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_mint",
              nameLocation: "1728:5:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 154,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 151,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "1742:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 186,
                    src: "1734:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 150,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "1734:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 153,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "1759:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 186,
                    src: "1751:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 152,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1751:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1733:33:0",
              },
              returnParameters: {
                id: 155,
                nodeType: "ParameterList",
                parameters: [],
                src: "1776:0:0",
              },
              scope: 566,
              src: "1719:454:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 204,
                nodeType: "Block",
                src: "2286:60:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          id: 198,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 188,
                          src: "2302:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 199,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 190,
                          src: "2311:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 197,
                        name: "_burn",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 255,
                        src: "2296:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 200,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2296:22:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 201,
                    nodeType: "ExpressionStatement",
                    src: "2296:22:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 202,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2335:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 196,
                    id: 203,
                    nodeType: "Return",
                    src: "2328:11:0",
                  },
                ],
              },
              functionSelector: "9dc29fac",
              id: 205,
              implemented: true,
              kind: "function",
              modifiers: [
                {
                  id: 193,
                  kind: "modifierInvocation",
                  modifierName: {
                    id: 192,
                    name: "onlyOwner",
                    nodeType: "IdentifierPath",
                    referencedDeclaration: 588,
                    src: "2249:9:0",
                  },
                  nodeType: "ModifierInvocation",
                  src: "2249:9:0",
                },
              ],
              name: "burn",
              nameLocation: "2188:4:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 191,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 188,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "2201:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 205,
                    src: "2193:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 187,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "2193:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 190,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "2218:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 205,
                    src: "2210:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 189,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "2210:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2192:33:0",
              },
              returnParameters: {
                id: 196,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 195,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 205,
                    src: "2276:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 194,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "2276:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2275:6:0",
              },
              scope: 566,
              src: "2179:167:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 254,
                nodeType: "Block",
                src: "2409:544:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 218,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 213,
                            name: "account",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 207,
                            src: "2440:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 216,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2459:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 215,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "2451:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 214,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "2451:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 217,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "2451:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "2440:21:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2063616e6e6f74206275726e2066726f6d207a65726f20616464726573732e",
                          id: 219,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2475:42:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b",
                            typeString:
                              'literal_string "DevToken: cannot burn from zero address."',
                          },
                          value: "DevToken: cannot burn from zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b",
                            typeString:
                              'literal_string "DevToken: cannot burn from zero address."',
                          },
                        ],
                        id: 212,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "2419:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 220,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2419:108:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 221,
                    nodeType: "ExpressionStatement",
                    src: "2419:108:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 227,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              id: 223,
                              name: "_balances",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "2558:9:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 225,
                            indexExpression: {
                              id: 224,
                              name: "account",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 207,
                              src: "2568:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2558:18:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            id: 226,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 209,
                            src: "2580:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2558:28:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2043616e6e6f74206275726e206d6f7265207468616e20746865206163636f756e74206f776e732e",
                          id: 228,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2600:51:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d",
                            typeString:
                              'literal_string "DevToken: Cannot burn more than the account owns."',
                          },
                          value:
                            "DevToken: Cannot burn more than the account owns.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d",
                            typeString:
                              'literal_string "DevToken: Cannot burn more than the account owns."',
                          },
                        ],
                        id: 222,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "2537:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 229,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2537:124:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 230,
                    nodeType: "ExpressionStatement",
                    src: "2537:124:0",
                  },
                  {
                    expression: {
                      id: 239,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 231,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "2726:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 233,
                        indexExpression: {
                          id: 232,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 207,
                          src: "2736:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "2726:18:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 238,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            id: 234,
                            name: "_balances",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 35,
                            src: "2747:9:0",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_address_$_t_uint256_$",
                              typeString: "mapping(address => uint256)",
                            },
                          },
                          id: 236,
                          indexExpression: {
                            id: 235,
                            name: "account",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 207,
                            src: "2757:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2747:18:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "-",
                        rightExpression: {
                          id: 237,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 209,
                          src: "2768:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "2747:27:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2726:48:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 240,
                    nodeType: "ExpressionStatement",
                    src: "2726:48:0",
                  },
                  {
                    expression: {
                      id: 243,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 241,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "2817:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "-=",
                      rightHandSide: {
                        id: 242,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 209,
                        src: "2833:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2817:22:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 244,
                    nodeType: "ExpressionStatement",
                    src: "2817:22:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          id: 246,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 207,
                          src: "2918:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          arguments: [
                            {
                              hexValue: "30",
                              id: 249,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2935:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 248,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2927:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 247,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2927:7:0",
                              typeDescriptions: {},
                            },
                          },
                          id: 250,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2927:10:0",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 251,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 209,
                          src: "2939:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 245,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "2909:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 252,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2909:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 253,
                    nodeType: "EmitStatement",
                    src: "2904:42:0",
                  },
                ],
              },
              id: 255,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_burn",
              nameLocation: "2361:5:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 210,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 207,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "2375:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 255,
                    src: "2367:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 206,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "2367:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 209,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "2392:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 255,
                    src: "2384:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 208,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "2384:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2366:33:0",
              },
              returnParameters: {
                id: 211,
                nodeType: "ParameterList",
                parameters: [],
                src: "2409:0:0",
              },
              scope: 566,
              src: "2352:601:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 273,
                nodeType: "Block",
                src: "3056:78:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 265,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "3076:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 266,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "3076:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 267,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 257,
                          src: "3088:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 268,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 259,
                          src: "3099:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 264,
                        name: "_transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 331,
                        src: "3066:9:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 269,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3066:40:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 270,
                    nodeType: "ExpressionStatement",
                    src: "3066:40:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 271,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3123:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 263,
                    id: 272,
                    nodeType: "Return",
                    src: "3116:11:0",
                  },
                ],
              },
              functionSelector: "a9059cbb",
              id: 274,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "transfer",
              nameLocation: "2968:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 260,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 257,
                    mutability: "mutable",
                    name: "recipient",
                    nameLocation: "2985:9:0",
                    nodeType: "VariableDeclaration",
                    scope: 274,
                    src: "2977:17:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 256,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "2977:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 259,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "3004:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 274,
                    src: "2996:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 258,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "2996:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2976:35:0",
              },
              returnParameters: {
                id: 263,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 262,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 274,
                    src: "3046:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 261,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "3046:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3045:6:0",
              },
              scope: 566,
              src: "2959:175:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 330,
                nodeType: "Block",
                src: "3249:434:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 289,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 284,
                            name: "sender",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 276,
                            src: "3267:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 287,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "3285:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 286,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "3277:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 285,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "3277:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 288,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3277:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "3267:20:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a207472616e736665722066726f6d207a65726f20616464726573732e",
                          id: 290,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3289:39:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af",
                            typeString:
                              'literal_string "DevToken: transfer from zero address."',
                          },
                          value: "DevToken: transfer from zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af",
                            typeString:
                              'literal_string "DevToken: transfer from zero address."',
                          },
                        ],
                        id: 283,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "3259:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 291,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3259:70:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 292,
                    nodeType: "ExpressionStatement",
                    src: "3259:70:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 299,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 294,
                            name: "recipient",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 278,
                            src: "3347:9:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 297,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "3368:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 296,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "3360:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 295,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "3360:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 298,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3360:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "3347:23:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a207472616e7366657220746f207a65726f20616464726573732e",
                          id: 300,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3372:37:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53",
                            typeString:
                              'literal_string "DevToken: transfer to zero address."',
                          },
                          value: "DevToken: transfer to zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53",
                            typeString:
                              'literal_string "DevToken: transfer to zero address."',
                          },
                        ],
                        id: 293,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "3339:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 301,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3339:71:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 302,
                    nodeType: "ExpressionStatement",
                    src: "3339:71:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 308,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              id: 304,
                              name: "_balances",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "3441:9:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 306,
                            indexExpression: {
                              id: 305,
                              name: "sender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 276,
                              src: "3451:6:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "3441:17:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            id: 307,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 280,
                            src: "3462:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3441:27:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2063616e74207472616e73666572206d6f7265207468616e20796f7572206163636f756e7420686f6c64732e",
                          id: 309,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3482:55:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4",
                            typeString:
                              'literal_string "DevToken: cant transfer more than your account holds."',
                          },
                          value:
                            "DevToken: cant transfer more than your account holds.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4",
                            typeString:
                              'literal_string "DevToken: cant transfer more than your account holds."',
                          },
                        ],
                        id: 303,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "3420:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 310,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3420:127:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 311,
                    nodeType: "ExpressionStatement",
                    src: "3420:127:0",
                  },
                  {
                    expression: {
                      id: 316,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 312,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "3558:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 314,
                        indexExpression: {
                          id: 313,
                          name: "sender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 276,
                          src: "3568:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "3558:17:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "-=",
                      rightHandSide: {
                        id: 315,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 280,
                        src: "3579:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "3558:27:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 317,
                    nodeType: "ExpressionStatement",
                    src: "3558:27:0",
                  },
                  {
                    expression: {
                      id: 322,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 318,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "3595:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 320,
                        indexExpression: {
                          id: 319,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 278,
                          src: "3605:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "3595:20:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "+=",
                      rightHandSide: {
                        id: 321,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 280,
                        src: "3619:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "3595:30:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 323,
                    nodeType: "ExpressionStatement",
                    src: "3595:30:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          id: 325,
                          name: "sender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 276,
                          src: "3650:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 326,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 278,
                          src: "3658:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 327,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 280,
                          src: "3669:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 324,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "3641:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 328,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3641:35:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 329,
                    nodeType: "EmitStatement",
                    src: "3636:40:0",
                  },
                ],
              },
              id: 331,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_transfer",
              nameLocation: "3149:9:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 281,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 276,
                    mutability: "mutable",
                    name: "sender",
                    nameLocation: "3176:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 331,
                    src: "3168:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 275,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3168:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 278,
                    mutability: "mutable",
                    name: "recipient",
                    nameLocation: "3200:9:0",
                    nodeType: "VariableDeclaration",
                    scope: 331,
                    src: "3192:17:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 277,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3192:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 280,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "3227:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 331,
                    src: "3219:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 279,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "3219:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3158:81:0",
              },
              returnParameters: {
                id: 282,
                nodeType: "ParameterList",
                parameters: [],
                src: "3249:0:0",
              },
              scope: 566,
              src: "3140:543:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 339,
                nodeType: "Block",
                src: "3741:31:0",
                statements: [
                  {
                    expression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 336,
                        name: "owner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 613,
                        src: "3758:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$__$returns$_t_address_$",
                          typeString: "function () view returns (address)",
                        },
                      },
                      id: 337,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3758:7:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    functionReturnParameters: 335,
                    id: 338,
                    nodeType: "Return",
                    src: "3751:14:0",
                  },
                ],
              },
              functionSelector: "893d20e8",
              id: 340,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "getOwner",
              nameLocation: "3698:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 332,
                nodeType: "ParameterList",
                parameters: [],
                src: "3706:2:0",
              },
              returnParameters: {
                id: 335,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 334,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 340,
                    src: "3732:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 333,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3732:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3731:9:0",
              },
              scope: 566,
              src: "3689:83:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 355,
                nodeType: "Block",
                src: "3889:51:0",
                statements: [
                  {
                    expression: {
                      baseExpression: {
                        baseExpression: {
                          id: 349,
                          name: "_allowances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 41,
                          src: "3906:11:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            typeString:
                              "mapping(address => mapping(address => uint256))",
                          },
                        },
                        id: 351,
                        indexExpression: {
                          id: 350,
                          name: "owner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 342,
                          src: "3918:5:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3906:18:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                          typeString: "mapping(address => uint256)",
                        },
                      },
                      id: 353,
                      indexExpression: {
                        id: 352,
                        name: "spender",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 344,
                        src: "3925:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "3906:27:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    functionReturnParameters: 348,
                    id: 354,
                    nodeType: "Return",
                    src: "3899:34:0",
                  },
                ],
              },
              functionSelector: "dd62ed3e",
              id: 356,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "allowance",
              nameLocation: "3787:9:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 345,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 342,
                    mutability: "mutable",
                    name: "owner",
                    nameLocation: "3805:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 356,
                    src: "3797:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 341,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3797:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 344,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "3820:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 356,
                    src: "3812:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 343,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3812:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3796:32:0",
              },
              returnParameters: {
                id: 348,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 347,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 356,
                    src: "3876:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 346,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "3876:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3875:9:0",
              },
              scope: 566,
              src: "3778:162:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 374,
                nodeType: "Block",
                src: "4020:75:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 366,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "4039:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 367,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "4039:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 368,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 358,
                          src: "4051:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 369,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 360,
                          src: "4060:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 365,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "4030:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 370,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4030:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 371,
                    nodeType: "ExpressionStatement",
                    src: "4030:37:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 372,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4084:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 364,
                    id: 373,
                    nodeType: "Return",
                    src: "4077:11:0",
                  },
                ],
              },
              functionSelector: "095ea7b3",
              id: 375,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "approve",
              nameLocation: "3955:7:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 361,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 358,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "3971:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 375,
                    src: "3963:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 357,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3963:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 360,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "3988:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 375,
                    src: "3980:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 359,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "3980:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3962:33:0",
              },
              returnParameters: {
                id: 364,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 363,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 375,
                    src: "4014:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 362,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "4014:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4013:6:0",
              },
              scope: 566,
              src: "3946:149:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 418,
                nodeType: "Block",
                src: "4206:452:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 390,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 385,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 377,
                            src: "4237:5:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 388,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "4254:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 387,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4246:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 386,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "4246:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 389,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4246:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "4237:19:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a20617070726f76652063616e6e6f7420626520646f6e652066726f6d207a65726f20616464726573732e",
                          id: 391,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4270:53:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1",
                            typeString:
                              'literal_string "DevToken: approve cannot be done from zero address."',
                          },
                          value:
                            "DevToken: approve cannot be done from zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1",
                            typeString:
                              'literal_string "DevToken: approve cannot be done from zero address."',
                          },
                        ],
                        id: 384,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "4216:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 392,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4216:117:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 393,
                    nodeType: "ExpressionStatement",
                    src: "4216:117:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 400,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 395,
                            name: "spender",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 379,
                            src: "4364:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 398,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "4383:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 397,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4375:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 396,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "4375:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 399,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4375:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "4364:21:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a20617070726f76652063616e6e6f7420626520746f207a65726f20616464726573732e",
                          id: 401,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4399:46:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595",
                            typeString:
                              'literal_string "DevToken: approve cannot be to zero address."',
                          },
                          value: "DevToken: approve cannot be to zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595",
                            typeString:
                              'literal_string "DevToken: approve cannot be to zero address."',
                          },
                        ],
                        id: 394,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "4343:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 402,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4343:112:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 403,
                    nodeType: "ExpressionStatement",
                    src: "4343:112:0",
                  },
                  {
                    expression: {
                      id: 410,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          baseExpression: {
                            id: 404,
                            name: "_allowances",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 41,
                            src: "4567:11:0",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              typeString:
                                "mapping(address => mapping(address => uint256))",
                            },
                          },
                          id: 407,
                          indexExpression: {
                            id: 405,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 377,
                            src: "4579:5:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4567:18:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 408,
                        indexExpression: {
                          id: 406,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 379,
                          src: "4586:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "4567:27:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 409,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 381,
                        src: "4597:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "4567:36:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 411,
                    nodeType: "ExpressionStatement",
                    src: "4567:36:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          id: 413,
                          name: "owner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 377,
                          src: "4628:5:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 414,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 379,
                          src: "4635:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 415,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 381,
                          src: "4644:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 412,
                        name: "Approval",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 23,
                        src: "4619:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 416,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4619:32:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 417,
                    nodeType: "EmitStatement",
                    src: "4614:37:0",
                  },
                ],
              },
              id: 419,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_approve",
              nameLocation: "4110:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 382,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 377,
                    mutability: "mutable",
                    name: "owner",
                    nameLocation: "4136:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 419,
                    src: "4128:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 376,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4128:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 379,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "4159:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 419,
                    src: "4151:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 378,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4151:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 381,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "4184:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 419,
                    src: "4176:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 380,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "4176:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4118:78:0",
              },
              returnParameters: {
                id: 383,
                nodeType: "ParameterList",
                parameters: [],
                src: "4206:0:0",
              },
              scope: 566,
              src: "4101:557:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 464,
                nodeType: "Block",
                src: "4792:444:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 438,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 431,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "4823:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 433,
                              indexExpression: {
                                id: 432,
                                name: "spender",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 421,
                                src: "4835:7:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "4823:20:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 436,
                            indexExpression: {
                              expression: {
                                id: 434,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "4844:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 435,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "4844:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "4823:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            id: 437,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 425,
                            src: "4859:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4823:42:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a20596f752063616e6e6f74207370656e642074686174206d756368206f6e2074686973206163636f756e742e",
                          id: 439,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4879:55:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f",
                            typeString:
                              'literal_string "DevToken: You cannot spend that much on this account."',
                          },
                          value:
                            "DevToken: You cannot spend that much on this account.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f",
                            typeString:
                              'literal_string "DevToken: You cannot spend that much on this account."',
                          },
                        ],
                        id: 430,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "4802:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 440,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4802:142:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 441,
                    nodeType: "ExpressionStatement",
                    src: "4802:142:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          id: 443,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 421,
                          src: "4991:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 444,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 423,
                          src: "5000:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 445,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 425,
                          src: "5011:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 442,
                        name: "_transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 331,
                        src: "4981:9:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 446,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4981:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 447,
                    nodeType: "ExpressionStatement",
                    src: "4981:37:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          id: 449,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 421,
                          src: "5112:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          expression: {
                            id: 450,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "5133:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 451,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "5133:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 459,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 452,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "5157:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 454,
                              indexExpression: {
                                id: 453,
                                name: "spender",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 421,
                                src: "5169:7:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5157:20:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 457,
                            indexExpression: {
                              expression: {
                                id: 455,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "5178:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 456,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "5178:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5157:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            id: 458,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 425,
                            src: "5192:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5157:41:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 448,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "5090:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 460,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5090:118:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 461,
                    nodeType: "ExpressionStatement",
                    src: "5090:118:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 462,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5225:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 429,
                    id: 463,
                    nodeType: "Return",
                    src: "5218:11:0",
                  },
                ],
              },
              functionSelector: "23b872dd",
              id: 465,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "transferFrom",
              nameLocation: "4673:12:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 426,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 421,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "4703:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4695:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 420,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4695:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 423,
                    mutability: "mutable",
                    name: "recipient",
                    nameLocation: "4728:9:0",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4720:17:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 422,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4720:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 425,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "4755:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4747:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 424,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "4747:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4685:82:0",
              },
              returnParameters: {
                id: 429,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 428,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4786:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 427,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "4786:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4785:6:0",
              },
              scope: 566,
              src: "4664:572:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 490,
                nodeType: "Block",
                src: "5344:156:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 475,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "5376:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 476,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "5376:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 477,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 467,
                          src: "5400:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 485,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 478,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "5421:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 481,
                              indexExpression: {
                                expression: {
                                  id: 479,
                                  name: "msg",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967281,
                                  src: "5433:3:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_message",
                                    typeString: "msg",
                                  },
                                },
                                id: 480,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "sender",
                                nodeType: "MemberAccess",
                                src: "5433:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5421:23:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 483,
                            indexExpression: {
                              id: 482,
                              name: "spender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 467,
                              src: "5445:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5421:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "+",
                          rightExpression: {
                            id: 484,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 469,
                            src: "5456:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5421:41:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 474,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "5354:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 486,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5354:118:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 487,
                    nodeType: "ExpressionStatement",
                    src: "5354:118:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 488,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5489:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 473,
                    id: 489,
                    nodeType: "Return",
                    src: "5482:11:0",
                  },
                ],
              },
              functionSelector: "39509351",
              id: 491,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "increaseAllowance",
              nameLocation: "5251:17:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 470,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 467,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "5277:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 491,
                    src: "5269:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 466,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "5269:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 469,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "5294:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 491,
                    src: "5286:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 468,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "5286:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5268:33:0",
              },
              returnParameters: {
                id: 473,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 472,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 491,
                    src: "5334:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 471,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "5334:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5333:6:0",
              },
              scope: 566,
              src: "5242:258:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 516,
                nodeType: "Block",
                src: "5608:156:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 501,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "5640:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 502,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "5640:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 503,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 493,
                          src: "5664:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 511,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 504,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "5685:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 507,
                              indexExpression: {
                                expression: {
                                  id: 505,
                                  name: "msg",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967281,
                                  src: "5697:3:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_message",
                                    typeString: "msg",
                                  },
                                },
                                id: 506,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "sender",
                                nodeType: "MemberAccess",
                                src: "5697:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5685:23:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 509,
                            indexExpression: {
                              id: 508,
                              name: "spender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 493,
                              src: "5709:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5685:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            id: 510,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 495,
                            src: "5720:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5685:41:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 500,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "5618:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 512,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5618:118:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 513,
                    nodeType: "ExpressionStatement",
                    src: "5618:118:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 514,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5753:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 499,
                    id: 515,
                    nodeType: "Return",
                    src: "5746:11:0",
                  },
                ],
              },
              functionSelector: "a457c2d7",
              id: 517,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "decreaseAllowance",
              nameLocation: "5515:17:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 496,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 493,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "5541:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 517,
                    src: "5533:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 492,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "5533:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 495,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "5558:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 517,
                    src: "5550:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 494,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "5550:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5532:33:0",
              },
              returnParameters: {
                id: 499,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 498,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 517,
                    src: "5598:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 497,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "5598:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5597:6:0",
              },
              scope: 566,
              src: "5506:258:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 542,
                nodeType: "Block",
                src: "5809:331:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 528,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 523,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 519,
                            src: "5920:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<=",
                          rightExpression: {
                            baseExpression: {
                              id: 524,
                              name: "_balances",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "5931:9:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 527,
                            indexExpression: {
                              expression: {
                                id: 525,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "5941:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 526,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "5941:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5931:21:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5920:32:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2043616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e2e",
                          id: 529,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "5966:43:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50",
                            typeString:
                              'literal_string "DevToken: Cannot stake more than you own."',
                          },
                          value: "DevToken: Cannot stake more than you own.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50",
                            typeString:
                              'literal_string "DevToken: Cannot stake more than you own."',
                          },
                        ],
                        id: 522,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "5899:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 530,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5899:120:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 531,
                    nodeType: "ExpressionStatement",
                    src: "5899:120:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          id: 533,
                          name: "_amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 519,
                          src: "6037:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 532,
                        name: "_stake",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 829,
                        src: "6030:6:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          typeString: "function (uint256)",
                        },
                      },
                      id: 534,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6030:15:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 535,
                    nodeType: "ExpressionStatement",
                    src: "6030:15:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 537,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "6113:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 538,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "6113:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 539,
                          name: "_amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 519,
                          src: "6125:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 536,
                        name: "_burn",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 255,
                        src: "6107:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 540,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6107:26:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 541,
                    nodeType: "ExpressionStatement",
                    src: "6107:26:0",
                  },
                ],
              },
              functionSelector: "a694fc3a",
              id: 543,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "stake",
              nameLocation: "5779:5:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 520,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 519,
                    mutability: "mutable",
                    name: "_amount",
                    nameLocation: "5793:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 543,
                    src: "5785:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 518,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "5785:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5784:17:0",
              },
              returnParameters: {
                id: 521,
                nodeType: "ParameterList",
                parameters: [],
                src: "5809:0:0",
              },
              scope: 566,
              src: "5770:370:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 564,
                nodeType: "Block",
                src: "6309:162:0",
                statements: [
                  {
                    assignments: [552],
                    declarations: [
                      {
                        constant: false,
                        id: 552,
                        mutability: "mutable",
                        name: "amount_to_mint",
                        nameLocation: "6327:14:0",
                        nodeType: "VariableDeclaration",
                        scope: 564,
                        src: "6319:22:0",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 551,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6319:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 557,
                    initialValue: {
                      arguments: [
                        {
                          id: 554,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 546,
                          src: "6359:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 555,
                          name: "stake_index",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 548,
                          src: "6367:11:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 553,
                        name: "_withdrawStake",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 921,
                        src: "6344:14:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          typeString:
                            "function (uint256,uint256) returns (uint256)",
                        },
                      },
                      id: 556,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6344:35:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6319:60:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 559,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "6437:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 560,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "6437:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 561,
                          name: "amount_to_mint",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 552,
                          src: "6449:14:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 558,
                        name: "_mint",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 186,
                        src: "6431:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 562,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6431:33:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 563,
                    nodeType: "ExpressionStatement",
                    src: "6431:33:0",
                  },
                ],
              },
              documentation: {
                id: 544,
                nodeType: "StructuredDocumentation",
                src: "6146:91:0",
                text: " @notice withdrawStake is used to withdraw stakes from the account holder",
              },
              functionSelector: "f1fdf469",
              id: 565,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "withdrawStake",
              nameLocation: "6251:13:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 549,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 546,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "6273:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 565,
                    src: "6265:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 545,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "6265:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 548,
                    mutability: "mutable",
                    name: "stake_index",
                    nameLocation: "6289:11:0",
                    nodeType: "VariableDeclaration",
                    scope: 565,
                    src: "6281:19:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 547,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "6281:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "6264:37:0",
              },
              returnParameters: {
                id: 550,
                nodeType: "ParameterList",
                parameters: [],
                src: "6309:0:0",
              },
              scope: 566,
              src: "6242:229:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
          ],
          scope: 567,
          src: "107:6366:0",
          usedErrors: [],
        },
      ],
      src: "32:6442:0",
    },
    legacyAST: {
      absolutePath: "project:/contracts/DevToken.sol",
      exportedSymbols: {
        DevToken: [566],
        Ownable: [674],
        Stakable: [1024],
      },
      id: 567,
      license: "MIT",
      nodeType: "SourceUnit",
      nodes: [
        {
          id: 1,
          literals: ["solidity", "^", "0.8", ".4"],
          nodeType: "PragmaDirective",
          src: "32:23:0",
        },
        {
          absolutePath: "project:/contracts/Ownable.sol",
          file: "./Ownable.sol",
          id: 2,
          nameLocation: "-1:-1:-1",
          nodeType: "ImportDirective",
          scope: 567,
          sourceUnit: 675,
          src: "57:23:0",
          symbolAliases: [],
          unitAlias: "",
        },
        {
          absolutePath: "project:/contracts/Stakable.sol",
          file: "./Stakable.sol",
          id: 3,
          nameLocation: "-1:-1:-1",
          nodeType: "ImportDirective",
          scope: 567,
          sourceUnit: 1025,
          src: "81:24:0",
          symbolAliases: [],
          unitAlias: "",
        },
        {
          abstract: false,
          baseContracts: [
            {
              baseName: {
                id: 4,
                name: "Ownable",
                nodeType: "IdentifierPath",
                referencedDeclaration: 674,
                src: "128:7:0",
              },
              id: 5,
              nodeType: "InheritanceSpecifier",
              src: "128:7:0",
            },
            {
              baseName: {
                id: 6,
                name: "Stakable",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1024,
                src: "137:8:0",
              },
              id: 7,
              nodeType: "InheritanceSpecifier",
              src: "137:8:0",
            },
          ],
          contractDependencies: [],
          contractKind: "contract",
          fullyImplemented: true,
          id: 566,
          linearizedBaseContracts: [566, 1024, 674],
          name: "DevToken",
          nameLocation: "116:8:0",
          nodeType: "ContractDefinition",
          nodes: [
            {
              anonymous: false,
              id: 15,
              name: "Transfer",
              nameLocation: "158:8:0",
              nodeType: "EventDefinition",
              parameters: {
                id: 14,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 9,
                    indexed: true,
                    mutability: "mutable",
                    name: "from",
                    nameLocation: "183:4:0",
                    nodeType: "VariableDeclaration",
                    scope: 15,
                    src: "167:20:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 8,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "167:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 11,
                    indexed: true,
                    mutability: "mutable",
                    name: "to",
                    nameLocation: "205:2:0",
                    nodeType: "VariableDeclaration",
                    scope: 15,
                    src: "189:18:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 10,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "189:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 13,
                    indexed: false,
                    mutability: "mutable",
                    name: "value",
                    nameLocation: "217:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 15,
                    src: "209:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 12,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "209:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "166:57:0",
              },
              src: "152:72:0",
            },
            {
              anonymous: false,
              id: 23,
              name: "Approval",
              nameLocation: "235:8:0",
              nodeType: "EventDefinition",
              parameters: {
                id: 22,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 17,
                    indexed: true,
                    mutability: "mutable",
                    name: "owner",
                    nameLocation: "269:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 23,
                    src: "253:21:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 16,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "253:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 19,
                    indexed: true,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "300:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 23,
                    src: "284:23:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 18,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "284:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 21,
                    indexed: false,
                    mutability: "mutable",
                    name: "value",
                    nameLocation: "325:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 23,
                    src: "317:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 20,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "317:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "243:93:0",
              },
              src: "229:108:0",
            },
            {
              constant: false,
              id: 25,
              mutability: "mutable",
              name: "_totalSupply",
              nameLocation: "359:12:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "343:28:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
              typeName: {
                id: 24,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "343:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 27,
              mutability: "mutable",
              name: "_decimals",
              nameLocation: "391:9:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "377:23:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_uint8",
                typeString: "uint8",
              },
              typeName: {
                id: 26,
                name: "uint8",
                nodeType: "ElementaryTypeName",
                src: "377:5:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint8",
                  typeString: "uint8",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 29,
              mutability: "mutable",
              name: "_symbol",
              nameLocation: "421:7:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "406:22:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_string_storage",
                typeString: "string",
              },
              typeName: {
                id: 28,
                name: "string",
                nodeType: "ElementaryTypeName",
                src: "406:6:0",
                typeDescriptions: {
                  typeIdentifier: "t_string_storage_ptr",
                  typeString: "string",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 31,
              mutability: "mutable",
              name: "_name",
              nameLocation: "449:5:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "434:20:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_string_storage",
                typeString: "string",
              },
              typeName: {
                id: 30,
                name: "string",
                nodeType: "ElementaryTypeName",
                src: "434:6:0",
                typeDescriptions: {
                  typeIdentifier: "t_string_storage_ptr",
                  typeString: "string",
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 35,
              mutability: "mutable",
              name: "_balances",
              nameLocation: "497:9:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "461:45:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                typeString: "mapping(address => uint256)",
              },
              typeName: {
                id: 34,
                keyType: {
                  id: 32,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "469:7:0",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                nodeType: "Mapping",
                src: "461:27:0",
                typeDescriptions: {
                  typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                  typeString: "mapping(address => uint256)",
                },
                valueType: {
                  id: 33,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "480:7:0",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
              },
              visibility: "private",
            },
            {
              constant: false,
              id: 41,
              mutability: "mutable",
              name: "_allowances",
              nameLocation: "568:11:0",
              nodeType: "VariableDeclaration",
              scope: 566,
              src: "512:67:0",
              stateVariable: true,
              storageLocation: "default",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                typeString: "mapping(address => mapping(address => uint256))",
              },
              typeName: {
                id: 40,
                keyType: {
                  id: 36,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "520:7:0",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                nodeType: "Mapping",
                src: "512:47:0",
                typeDescriptions: {
                  typeIdentifier:
                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  typeString: "mapping(address => mapping(address => uint256))",
                },
                valueType: {
                  id: 39,
                  keyType: {
                    id: 37,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "539:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  nodeType: "Mapping",
                  src: "531:27:0",
                  typeDescriptions: {
                    typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                    typeString: "mapping(address => uint256)",
                  },
                  valueType: {
                    id: 38,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "550:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                },
              },
              visibility: "private",
            },
            {
              body: {
                id: 85,
                nodeType: "Block",
                src: "738:315:0",
                statements: [
                  {
                    expression: {
                      id: 54,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 52,
                        name: "_name",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 31,
                        src: "748:5:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage",
                          typeString: "string storage ref",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 53,
                        name: "token_name",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 43,
                        src: "756:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                      src: "748:18:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    id: 55,
                    nodeType: "ExpressionStatement",
                    src: "748:18:0",
                  },
                  {
                    expression: {
                      id: 58,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 56,
                        name: "_symbol",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 29,
                        src: "776:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage",
                          typeString: "string storage ref",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 57,
                        name: "short_symbol",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 45,
                        src: "786:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                      src: "776:22:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    id: 59,
                    nodeType: "ExpressionStatement",
                    src: "776:22:0",
                  },
                  {
                    expression: {
                      id: 62,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 60,
                        name: "_decimals",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 27,
                        src: "808:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint8",
                          typeString: "uint8",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 61,
                        name: "token_decimal",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 47,
                        src: "820:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint8",
                          typeString: "uint8",
                        },
                      },
                      src: "808:25:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    id: 63,
                    nodeType: "ExpressionStatement",
                    src: "808:25:0",
                  },
                  {
                    expression: {
                      id: 66,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 64,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "843:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 65,
                        name: "token_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 49,
                        src: "858:17:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "843:32:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 67,
                    nodeType: "ExpressionStatement",
                    src: "843:32:0",
                  },
                  {
                    expression: {
                      id: 73,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 68,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "948:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 71,
                        indexExpression: {
                          expression: {
                            id: 69,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "958:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 70,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "958:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "948:21:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 72,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "972:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "948:36:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 74,
                    nodeType: "ExpressionStatement",
                    src: "948:36:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          arguments: [
                            {
                              hexValue: "30",
                              id: 78,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "1017:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 77,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "1009:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 76,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "1009:7:0",
                              typeDescriptions: {},
                            },
                          },
                          id: 79,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "1009:10:0",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          expression: {
                            id: 80,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "1021:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 81,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "1021:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 82,
                          name: "_totalSupply",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 25,
                          src: "1033:12:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 75,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "1000:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 83,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1000:46:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 84,
                    nodeType: "EmitStatement",
                    src: "995:51:0",
                  },
                ],
              },
              id: 86,
              implemented: true,
              kind: "constructor",
              modifiers: [],
              name: "",
              nameLocation: "-1:-1:-1",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 50,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 43,
                    mutability: "mutable",
                    name: "token_name",
                    nameLocation: "621:10:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "607:24:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 42,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "607:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 45,
                    mutability: "mutable",
                    name: "short_symbol",
                    nameLocation: "655:12:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "641:26:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 44,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "641:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 47,
                    mutability: "mutable",
                    name: "token_decimal",
                    nameLocation: "683:13:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "677:19:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                    typeName: {
                      id: 46,
                      name: "uint8",
                      nodeType: "ElementaryTypeName",
                      src: "677:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 49,
                    mutability: "mutable",
                    name: "token_totalSupply",
                    nameLocation: "714:17:0",
                    nodeType: "VariableDeclaration",
                    scope: 86,
                    src: "706:25:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 48,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "706:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "597:140:0",
              },
              returnParameters: {
                id: 51,
                nodeType: "ParameterList",
                parameters: [],
                src: "738:0:0",
              },
              scope: 566,
              src: "586:467:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 93,
                nodeType: "Block",
                src: "1109:33:0",
                statements: [
                  {
                    expression: {
                      id: 91,
                      name: "_decimals",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 27,
                      src: "1126:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    functionReturnParameters: 90,
                    id: 92,
                    nodeType: "Return",
                    src: "1119:16:0",
                  },
                ],
              },
              functionSelector: "313ce567",
              id: 94,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "decimals",
              nameLocation: "1068:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 87,
                nodeType: "ParameterList",
                parameters: [],
                src: "1076:2:0",
              },
              returnParameters: {
                id: 90,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 89,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 94,
                    src: "1102:5:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                    typeName: {
                      id: 88,
                      name: "uint8",
                      nodeType: "ElementaryTypeName",
                      src: "1102:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1101:7:0",
              },
              scope: 566,
              src: "1059:83:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 101,
                nodeType: "Block",
                src: "1204:31:0",
                statements: [
                  {
                    expression: {
                      id: 99,
                      name: "_symbol",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 29,
                      src: "1221:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    functionReturnParameters: 98,
                    id: 100,
                    nodeType: "Return",
                    src: "1214:14:0",
                  },
                ],
              },
              functionSelector: "95d89b41",
              id: 102,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "symbol",
              nameLocation: "1157:6:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 95,
                nodeType: "ParameterList",
                parameters: [],
                src: "1163:2:0",
              },
              returnParameters: {
                id: 98,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 97,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 102,
                    src: "1189:13:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 96,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "1189:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1188:15:0",
              },
              scope: 566,
              src: "1148:87:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 109,
                nodeType: "Block",
                src: "1295:29:0",
                statements: [
                  {
                    expression: {
                      id: 107,
                      name: "_name",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 31,
                      src: "1312:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    functionReturnParameters: 106,
                    id: 108,
                    nodeType: "Return",
                    src: "1305:12:0",
                  },
                ],
              },
              functionSelector: "06fdde03",
              id: 110,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "name",
              nameLocation: "1250:4:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 103,
                nodeType: "ParameterList",
                parameters: [],
                src: "1254:2:0",
              },
              returnParameters: {
                id: 106,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 105,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 110,
                    src: "1280:13:0",
                    stateVariable: false,
                    storageLocation: "memory",
                    typeDescriptions: {
                      typeIdentifier: "t_string_memory_ptr",
                      typeString: "string",
                    },
                    typeName: {
                      id: 104,
                      name: "string",
                      nodeType: "ElementaryTypeName",
                      src: "1280:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage_ptr",
                        typeString: "string",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1279:15:0",
              },
              scope: 566,
              src: "1241:83:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 117,
                nodeType: "Block",
                src: "1388:36:0",
                statements: [
                  {
                    expression: {
                      id: 115,
                      name: "_totalSupply",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 25,
                      src: "1405:12:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    functionReturnParameters: 114,
                    id: 116,
                    nodeType: "Return",
                    src: "1398:19:0",
                  },
                ],
              },
              functionSelector: "c4e41b22",
              id: 118,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "getTotalSupply",
              nameLocation: "1339:14:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 111,
                nodeType: "ParameterList",
                parameters: [],
                src: "1353:2:0",
              },
              returnParameters: {
                id: 114,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 113,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 118,
                    src: "1379:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 112,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1379:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1378:9:0",
              },
              scope: 566,
              src: "1330:94:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 129,
                nodeType: "Block",
                src: "1498:42:0",
                statements: [
                  {
                    expression: {
                      baseExpression: {
                        id: 125,
                        name: "_balances",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 35,
                        src: "1515:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                          typeString: "mapping(address => uint256)",
                        },
                      },
                      id: 127,
                      indexExpression: {
                        id: 126,
                        name: "account",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 120,
                        src: "1525:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "1515:18:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    functionReturnParameters: 124,
                    id: 128,
                    nodeType: "Return",
                    src: "1508:25:0",
                  },
                ],
              },
              functionSelector: "70a08231",
              id: 130,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "balanceOf",
              nameLocation: "1439:9:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 121,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 120,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "1457:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 130,
                    src: "1449:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 119,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "1449:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1448:17:0",
              },
              returnParameters: {
                id: 124,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 123,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 130,
                    src: "1489:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 122,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1489:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1488:9:0",
              },
              scope: 566,
              src: "1430:110:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 148,
                nodeType: "Block",
                src: "1653:60:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          id: 142,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 132,
                          src: "1669:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 143,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 134,
                          src: "1678:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 141,
                        name: "_mint",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 186,
                        src: "1663:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 144,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1663:22:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 145,
                    nodeType: "ExpressionStatement",
                    src: "1663:22:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 146,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1702:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 140,
                    id: 147,
                    nodeType: "Return",
                    src: "1695:11:0",
                  },
                ],
              },
              functionSelector: "40c10f19",
              id: 149,
              implemented: true,
              kind: "function",
              modifiers: [
                {
                  id: 137,
                  kind: "modifierInvocation",
                  modifierName: {
                    id: 136,
                    name: "onlyOwner",
                    nodeType: "IdentifierPath",
                    referencedDeclaration: 588,
                    src: "1616:9:0",
                  },
                  nodeType: "ModifierInvocation",
                  src: "1616:9:0",
                },
              ],
              name: "mint",
              nameLocation: "1555:4:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 135,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 132,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "1568:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 149,
                    src: "1560:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 131,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "1560:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 134,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "1585:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 149,
                    src: "1577:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 133,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1577:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1559:33:0",
              },
              returnParameters: {
                id: 140,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 139,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 149,
                    src: "1643:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 138,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "1643:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1642:6:0",
              },
              scope: 566,
              src: "1546:167:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 185,
                nodeType: "Block",
                src: "1776:397:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 162,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 157,
                            name: "account",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 151,
                            src: "1807:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 160,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1826:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 159,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "1818:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 158,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "1818:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 161,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "1818:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "1807:21:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2063616e6e6f74206d696e7420746f207a65726f20616464726573732e",
                          id: 163,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1842:40:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d",
                            typeString:
                              'literal_string "DevToken: cannot mint to zero address."',
                          },
                          value: "DevToken: cannot mint to zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_f6cdfe1fb369a1df7460c57be0de97d0fa11a9df57dc61a72042438bd0f75b2d",
                            typeString:
                              'literal_string "DevToken: cannot mint to zero address."',
                          },
                        ],
                        id: 156,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "1786:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 164,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1786:106:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 165,
                    nodeType: "ExpressionStatement",
                    src: "1786:106:0",
                  },
                  {
                    expression: {
                      id: 168,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 166,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "1936:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "+=",
                      rightHandSide: {
                        id: 167,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 153,
                        src: "1952:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "1936:22:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 169,
                    nodeType: "ExpressionStatement",
                    src: "1936:22:0",
                  },
                  {
                    expression: {
                      id: 174,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 170,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "2045:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 172,
                        indexExpression: {
                          id: 171,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 151,
                          src: "2055:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "2045:18:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "+=",
                      rightHandSide: {
                        id: 173,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 153,
                        src: "2067:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2045:28:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 175,
                    nodeType: "ExpressionStatement",
                    src: "2045:28:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          arguments: [
                            {
                              hexValue: "30",
                              id: 179,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2146:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 178,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2138:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 177,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2138:7:0",
                              typeDescriptions: {},
                            },
                          },
                          id: 180,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2138:10:0",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 181,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 151,
                          src: "2150:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 182,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 153,
                          src: "2159:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 176,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "2129:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 183,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2129:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 184,
                    nodeType: "EmitStatement",
                    src: "2124:42:0",
                  },
                ],
              },
              id: 186,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_mint",
              nameLocation: "1728:5:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 154,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 151,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "1742:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 186,
                    src: "1734:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 150,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "1734:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 153,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "1759:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 186,
                    src: "1751:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 152,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "1751:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "1733:33:0",
              },
              returnParameters: {
                id: 155,
                nodeType: "ParameterList",
                parameters: [],
                src: "1776:0:0",
              },
              scope: 566,
              src: "1719:454:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 204,
                nodeType: "Block",
                src: "2286:60:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          id: 198,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 188,
                          src: "2302:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 199,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 190,
                          src: "2311:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 197,
                        name: "_burn",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 255,
                        src: "2296:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 200,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2296:22:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 201,
                    nodeType: "ExpressionStatement",
                    src: "2296:22:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 202,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2335:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 196,
                    id: 203,
                    nodeType: "Return",
                    src: "2328:11:0",
                  },
                ],
              },
              functionSelector: "9dc29fac",
              id: 205,
              implemented: true,
              kind: "function",
              modifiers: [
                {
                  id: 193,
                  kind: "modifierInvocation",
                  modifierName: {
                    id: 192,
                    name: "onlyOwner",
                    nodeType: "IdentifierPath",
                    referencedDeclaration: 588,
                    src: "2249:9:0",
                  },
                  nodeType: "ModifierInvocation",
                  src: "2249:9:0",
                },
              ],
              name: "burn",
              nameLocation: "2188:4:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 191,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 188,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "2201:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 205,
                    src: "2193:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 187,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "2193:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 190,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "2218:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 205,
                    src: "2210:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 189,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "2210:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2192:33:0",
              },
              returnParameters: {
                id: 196,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 195,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 205,
                    src: "2276:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 194,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "2276:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2275:6:0",
              },
              scope: 566,
              src: "2179:167:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 254,
                nodeType: "Block",
                src: "2409:544:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 218,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 213,
                            name: "account",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 207,
                            src: "2440:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 216,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2459:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 215,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "2451:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 214,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "2451:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 217,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "2451:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "2440:21:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2063616e6e6f74206275726e2066726f6d207a65726f20616464726573732e",
                          id: 219,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2475:42:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b",
                            typeString:
                              'literal_string "DevToken: cannot burn from zero address."',
                          },
                          value: "DevToken: cannot burn from zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_d0cffa951619b5ae4977df6a2da4691b419fdb218e4ce578d96d979a7672ca7b",
                            typeString:
                              'literal_string "DevToken: cannot burn from zero address."',
                          },
                        ],
                        id: 212,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "2419:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 220,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2419:108:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 221,
                    nodeType: "ExpressionStatement",
                    src: "2419:108:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 227,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              id: 223,
                              name: "_balances",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "2558:9:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 225,
                            indexExpression: {
                              id: 224,
                              name: "account",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 207,
                              src: "2568:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2558:18:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            id: 226,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 209,
                            src: "2580:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2558:28:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2043616e6e6f74206275726e206d6f7265207468616e20746865206163636f756e74206f776e732e",
                          id: 228,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2600:51:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d",
                            typeString:
                              'literal_string "DevToken: Cannot burn more than the account owns."',
                          },
                          value:
                            "DevToken: Cannot burn more than the account owns.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_990e5104e77b13f0acb19c67e729ae434c811bbf428d3298d7164f2f560a256d",
                            typeString:
                              'literal_string "DevToken: Cannot burn more than the account owns."',
                          },
                        ],
                        id: 222,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "2537:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 229,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2537:124:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 230,
                    nodeType: "ExpressionStatement",
                    src: "2537:124:0",
                  },
                  {
                    expression: {
                      id: 239,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 231,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "2726:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 233,
                        indexExpression: {
                          id: 232,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 207,
                          src: "2736:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "2726:18:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 238,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          baseExpression: {
                            id: 234,
                            name: "_balances",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 35,
                            src: "2747:9:0",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_address_$_t_uint256_$",
                              typeString: "mapping(address => uint256)",
                            },
                          },
                          id: 236,
                          indexExpression: {
                            id: 235,
                            name: "account",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 207,
                            src: "2757:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2747:18:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "-",
                        rightExpression: {
                          id: 237,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 209,
                          src: "2768:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "2747:27:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2726:48:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 240,
                    nodeType: "ExpressionStatement",
                    src: "2726:48:0",
                  },
                  {
                    expression: {
                      id: 243,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        id: 241,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 25,
                        src: "2817:12:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "-=",
                      rightHandSide: {
                        id: 242,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 209,
                        src: "2833:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "2817:22:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 244,
                    nodeType: "ExpressionStatement",
                    src: "2817:22:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          id: 246,
                          name: "account",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 207,
                          src: "2918:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          arguments: [
                            {
                              hexValue: "30",
                              id: 249,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2935:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                            ],
                            id: 248,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2927:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 247,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2927:7:0",
                              typeDescriptions: {},
                            },
                          },
                          id: 250,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2927:10:0",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 251,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 209,
                          src: "2939:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 245,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "2909:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 252,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "2909:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 253,
                    nodeType: "EmitStatement",
                    src: "2904:42:0",
                  },
                ],
              },
              id: 255,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_burn",
              nameLocation: "2361:5:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 210,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 207,
                    mutability: "mutable",
                    name: "account",
                    nameLocation: "2375:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 255,
                    src: "2367:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 206,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "2367:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 209,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "2392:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 255,
                    src: "2384:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 208,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "2384:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2366:33:0",
              },
              returnParameters: {
                id: 211,
                nodeType: "ParameterList",
                parameters: [],
                src: "2409:0:0",
              },
              scope: 566,
              src: "2352:601:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 273,
                nodeType: "Block",
                src: "3056:78:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 265,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "3076:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 266,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "3076:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 267,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 257,
                          src: "3088:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 268,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 259,
                          src: "3099:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 264,
                        name: "_transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 331,
                        src: "3066:9:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 269,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3066:40:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 270,
                    nodeType: "ExpressionStatement",
                    src: "3066:40:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 271,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3123:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 263,
                    id: 272,
                    nodeType: "Return",
                    src: "3116:11:0",
                  },
                ],
              },
              functionSelector: "a9059cbb",
              id: 274,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "transfer",
              nameLocation: "2968:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 260,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 257,
                    mutability: "mutable",
                    name: "recipient",
                    nameLocation: "2985:9:0",
                    nodeType: "VariableDeclaration",
                    scope: 274,
                    src: "2977:17:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 256,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "2977:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 259,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "3004:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 274,
                    src: "2996:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 258,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "2996:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "2976:35:0",
              },
              returnParameters: {
                id: 263,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 262,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 274,
                    src: "3046:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 261,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "3046:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3045:6:0",
              },
              scope: 566,
              src: "2959:175:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 330,
                nodeType: "Block",
                src: "3249:434:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 289,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 284,
                            name: "sender",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 276,
                            src: "3267:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 287,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "3285:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 286,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "3277:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 285,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "3277:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 288,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3277:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "3267:20:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a207472616e736665722066726f6d207a65726f20616464726573732e",
                          id: 290,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3289:39:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af",
                            typeString:
                              'literal_string "DevToken: transfer from zero address."',
                          },
                          value: "DevToken: transfer from zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_bc2ad6591ea8fcb5575e554bed1bab3e8d137e96684efa6569f258b2d86715af",
                            typeString:
                              'literal_string "DevToken: transfer from zero address."',
                          },
                        ],
                        id: 283,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "3259:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 291,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3259:70:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 292,
                    nodeType: "ExpressionStatement",
                    src: "3259:70:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 299,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 294,
                            name: "recipient",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 278,
                            src: "3347:9:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 297,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "3368:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 296,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "3360:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 295,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "3360:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 298,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "3360:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "3347:23:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a207472616e7366657220746f207a65726f20616464726573732e",
                          id: 300,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3372:37:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53",
                            typeString:
                              'literal_string "DevToken: transfer to zero address."',
                          },
                          value: "DevToken: transfer to zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_44929f0b3df0e3fb153d04caf2cab6e447c3d5aa63b43bccdcd8f015bb24ad53",
                            typeString:
                              'literal_string "DevToken: transfer to zero address."',
                          },
                        ],
                        id: 293,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "3339:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 301,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3339:71:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 302,
                    nodeType: "ExpressionStatement",
                    src: "3339:71:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 308,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              id: 304,
                              name: "_balances",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "3441:9:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 306,
                            indexExpression: {
                              id: 305,
                              name: "sender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 276,
                              src: "3451:6:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "3441:17:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            id: 307,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 280,
                            src: "3462:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3441:27:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2063616e74207472616e73666572206d6f7265207468616e20796f7572206163636f756e7420686f6c64732e",
                          id: 309,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "3482:55:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4",
                            typeString:
                              'literal_string "DevToken: cant transfer more than your account holds."',
                          },
                          value:
                            "DevToken: cant transfer more than your account holds.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_eab461b6413b3bbb2d1c2e968cd6813a60533a1f6a7c065eec932f6c12e70be4",
                            typeString:
                              'literal_string "DevToken: cant transfer more than your account holds."',
                          },
                        ],
                        id: 303,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "3420:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 310,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3420:127:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 311,
                    nodeType: "ExpressionStatement",
                    src: "3420:127:0",
                  },
                  {
                    expression: {
                      id: 316,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 312,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "3558:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 314,
                        indexExpression: {
                          id: 313,
                          name: "sender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 276,
                          src: "3568:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "3558:17:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "-=",
                      rightHandSide: {
                        id: 315,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 280,
                        src: "3579:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "3558:27:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 317,
                    nodeType: "ExpressionStatement",
                    src: "3558:27:0",
                  },
                  {
                    expression: {
                      id: 322,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          id: 318,
                          name: "_balances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "3595:9:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 320,
                        indexExpression: {
                          id: 319,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 278,
                          src: "3605:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "3595:20:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "+=",
                      rightHandSide: {
                        id: 321,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 280,
                        src: "3619:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "3595:30:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 323,
                    nodeType: "ExpressionStatement",
                    src: "3595:30:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          id: 325,
                          name: "sender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 276,
                          src: "3650:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 326,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 278,
                          src: "3658:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 327,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 280,
                          src: "3669:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 324,
                        name: "Transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "3641:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 328,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3641:35:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 329,
                    nodeType: "EmitStatement",
                    src: "3636:40:0",
                  },
                ],
              },
              id: 331,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_transfer",
              nameLocation: "3149:9:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 281,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 276,
                    mutability: "mutable",
                    name: "sender",
                    nameLocation: "3176:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 331,
                    src: "3168:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 275,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3168:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 278,
                    mutability: "mutable",
                    name: "recipient",
                    nameLocation: "3200:9:0",
                    nodeType: "VariableDeclaration",
                    scope: 331,
                    src: "3192:17:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 277,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3192:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 280,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "3227:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 331,
                    src: "3219:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 279,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "3219:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3158:81:0",
              },
              returnParameters: {
                id: 282,
                nodeType: "ParameterList",
                parameters: [],
                src: "3249:0:0",
              },
              scope: 566,
              src: "3140:543:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 339,
                nodeType: "Block",
                src: "3741:31:0",
                statements: [
                  {
                    expression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        id: 336,
                        name: "owner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 613,
                        src: "3758:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$__$returns$_t_address_$",
                          typeString: "function () view returns (address)",
                        },
                      },
                      id: 337,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3758:7:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    functionReturnParameters: 335,
                    id: 338,
                    nodeType: "Return",
                    src: "3751:14:0",
                  },
                ],
              },
              functionSelector: "893d20e8",
              id: 340,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "getOwner",
              nameLocation: "3698:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 332,
                nodeType: "ParameterList",
                parameters: [],
                src: "3706:2:0",
              },
              returnParameters: {
                id: 335,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 334,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 340,
                    src: "3732:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 333,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3732:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3731:9:0",
              },
              scope: 566,
              src: "3689:83:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 355,
                nodeType: "Block",
                src: "3889:51:0",
                statements: [
                  {
                    expression: {
                      baseExpression: {
                        baseExpression: {
                          id: 349,
                          name: "_allowances",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 41,
                          src: "3906:11:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            typeString:
                              "mapping(address => mapping(address => uint256))",
                          },
                        },
                        id: 351,
                        indexExpression: {
                          id: 350,
                          name: "owner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 342,
                          src: "3918:5:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3906:18:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_uint256_$",
                          typeString: "mapping(address => uint256)",
                        },
                      },
                      id: 353,
                      indexExpression: {
                        id: 352,
                        name: "spender",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 344,
                        src: "3925:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "3906:27:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    functionReturnParameters: 348,
                    id: 354,
                    nodeType: "Return",
                    src: "3899:34:0",
                  },
                ],
              },
              functionSelector: "dd62ed3e",
              id: 356,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "allowance",
              nameLocation: "3787:9:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 345,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 342,
                    mutability: "mutable",
                    name: "owner",
                    nameLocation: "3805:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 356,
                    src: "3797:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 341,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3797:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 344,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "3820:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 356,
                    src: "3812:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 343,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3812:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3796:32:0",
              },
              returnParameters: {
                id: 348,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 347,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 356,
                    src: "3876:7:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 346,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "3876:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3875:9:0",
              },
              scope: 566,
              src: "3778:162:0",
              stateMutability: "view",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 374,
                nodeType: "Block",
                src: "4020:75:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 366,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "4039:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 367,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "4039:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 368,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 358,
                          src: "4051:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 369,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 360,
                          src: "4060:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 365,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "4030:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 370,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4030:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 371,
                    nodeType: "ExpressionStatement",
                    src: "4030:37:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 372,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4084:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 364,
                    id: 373,
                    nodeType: "Return",
                    src: "4077:11:0",
                  },
                ],
              },
              functionSelector: "095ea7b3",
              id: 375,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "approve",
              nameLocation: "3955:7:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 361,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 358,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "3971:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 375,
                    src: "3963:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 357,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "3963:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 360,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "3988:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 375,
                    src: "3980:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 359,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "3980:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "3962:33:0",
              },
              returnParameters: {
                id: 364,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 363,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 375,
                    src: "4014:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 362,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "4014:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4013:6:0",
              },
              scope: 566,
              src: "3946:149:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 418,
                nodeType: "Block",
                src: "4206:452:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 390,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 385,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 377,
                            src: "4237:5:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 388,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "4254:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 387,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4246:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 386,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "4246:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 389,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4246:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "4237:19:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a20617070726f76652063616e6e6f7420626520646f6e652066726f6d207a65726f20616464726573732e",
                          id: 391,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4270:53:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1",
                            typeString:
                              'literal_string "DevToken: approve cannot be done from zero address."',
                          },
                          value:
                            "DevToken: approve cannot be done from zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_89e1b04544b62b9ffa9a703a75bd43d50780e09feb8eaf90dd10587be9be3cc1",
                            typeString:
                              'literal_string "DevToken: approve cannot be done from zero address."',
                          },
                        ],
                        id: 384,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "4216:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 392,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4216:117:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 393,
                    nodeType: "ExpressionStatement",
                    src: "4216:117:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 400,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 395,
                            name: "spender",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 379,
                            src: "4364:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 398,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "4383:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 397,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "4375:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 396,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "4375:7:0",
                                typeDescriptions: {},
                              },
                            },
                            id: 399,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4375:10:0",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "4364:21:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a20617070726f76652063616e6e6f7420626520746f207a65726f20616464726573732e",
                          id: 401,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4399:46:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595",
                            typeString:
                              'literal_string "DevToken: approve cannot be to zero address."',
                          },
                          value: "DevToken: approve cannot be to zero address.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_24940538bfe4318337e856a40f43797f91acb7c7c5aafc6193ce4fa98e9ed595",
                            typeString:
                              'literal_string "DevToken: approve cannot be to zero address."',
                          },
                        ],
                        id: 394,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "4343:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 402,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4343:112:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 403,
                    nodeType: "ExpressionStatement",
                    src: "4343:112:0",
                  },
                  {
                    expression: {
                      id: 410,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftHandSide: {
                        baseExpression: {
                          baseExpression: {
                            id: 404,
                            name: "_allowances",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 41,
                            src: "4567:11:0",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              typeString:
                                "mapping(address => mapping(address => uint256))",
                            },
                          },
                          id: 407,
                          indexExpression: {
                            id: 405,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 377,
                            src: "4579:5:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4567:18:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_address_$_t_uint256_$",
                            typeString: "mapping(address => uint256)",
                          },
                        },
                        id: 408,
                        indexExpression: {
                          id: 406,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 379,
                          src: "4586:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: true,
                        nodeType: "IndexAccess",
                        src: "4567:27:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "Assignment",
                      operator: "=",
                      rightHandSide: {
                        id: 409,
                        name: "amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 381,
                        src: "4597:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "4567:36:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 411,
                    nodeType: "ExpressionStatement",
                    src: "4567:36:0",
                  },
                  {
                    eventCall: {
                      arguments: [
                        {
                          id: 413,
                          name: "owner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 377,
                          src: "4628:5:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 414,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 379,
                          src: "4635:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 415,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 381,
                          src: "4644:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 412,
                        name: "Approval",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 23,
                        src: "4619:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 416,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4619:32:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 417,
                    nodeType: "EmitStatement",
                    src: "4614:37:0",
                  },
                ],
              },
              id: 419,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "_approve",
              nameLocation: "4110:8:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 382,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 377,
                    mutability: "mutable",
                    name: "owner",
                    nameLocation: "4136:5:0",
                    nodeType: "VariableDeclaration",
                    scope: 419,
                    src: "4128:13:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 376,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4128:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 379,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "4159:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 419,
                    src: "4151:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 378,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4151:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 381,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "4184:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 419,
                    src: "4176:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 380,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "4176:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4118:78:0",
              },
              returnParameters: {
                id: 383,
                nodeType: "ParameterList",
                parameters: [],
                src: "4206:0:0",
              },
              scope: 566,
              src: "4101:557:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "internal",
            },
            {
              body: {
                id: 464,
                nodeType: "Block",
                src: "4792:444:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 438,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 431,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "4823:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 433,
                              indexExpression: {
                                id: 432,
                                name: "spender",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 421,
                                src: "4835:7:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "4823:20:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 436,
                            indexExpression: {
                              expression: {
                                id: 434,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "4844:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 435,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "4844:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "4823:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            id: 437,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 425,
                            src: "4859:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4823:42:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a20596f752063616e6e6f74207370656e642074686174206d756368206f6e2074686973206163636f756e742e",
                          id: 439,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4879:55:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f",
                            typeString:
                              'literal_string "DevToken: You cannot spend that much on this account."',
                          },
                          value:
                            "DevToken: You cannot spend that much on this account.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_3f62df12c6ab603a2d7bf645e34a317fdeb1c03a4f853e27271d460c13920a9f",
                            typeString:
                              'literal_string "DevToken: You cannot spend that much on this account."',
                          },
                        ],
                        id: 430,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "4802:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 440,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4802:142:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 441,
                    nodeType: "ExpressionStatement",
                    src: "4802:142:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          id: 443,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 421,
                          src: "4991:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 444,
                          name: "recipient",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 423,
                          src: "5000:9:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 445,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 425,
                          src: "5011:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 442,
                        name: "_transfer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 331,
                        src: "4981:9:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 446,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4981:37:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 447,
                    nodeType: "ExpressionStatement",
                    src: "4981:37:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          id: 449,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 421,
                          src: "5112:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          expression: {
                            id: 450,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "5133:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 451,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "5133:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 459,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 452,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "5157:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 454,
                              indexExpression: {
                                id: 453,
                                name: "spender",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 421,
                                src: "5169:7:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5157:20:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 457,
                            indexExpression: {
                              expression: {
                                id: 455,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "5178:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 456,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "5178:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5157:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            id: 458,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 425,
                            src: "5192:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5157:41:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 448,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "5090:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 460,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5090:118:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 461,
                    nodeType: "ExpressionStatement",
                    src: "5090:118:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 462,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5225:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 429,
                    id: 463,
                    nodeType: "Return",
                    src: "5218:11:0",
                  },
                ],
              },
              functionSelector: "23b872dd",
              id: 465,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "transferFrom",
              nameLocation: "4673:12:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 426,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 421,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "4703:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4695:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 420,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4695:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 423,
                    mutability: "mutable",
                    name: "recipient",
                    nameLocation: "4728:9:0",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4720:17:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 422,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "4720:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 425,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "4755:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4747:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 424,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "4747:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4685:82:0",
              },
              returnParameters: {
                id: 429,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 428,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 465,
                    src: "4786:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 427,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "4786:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "4785:6:0",
              },
              scope: 566,
              src: "4664:572:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "external",
            },
            {
              body: {
                id: 490,
                nodeType: "Block",
                src: "5344:156:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 475,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "5376:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 476,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "5376:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 477,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 467,
                          src: "5400:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 485,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 478,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "5421:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 481,
                              indexExpression: {
                                expression: {
                                  id: 479,
                                  name: "msg",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967281,
                                  src: "5433:3:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_message",
                                    typeString: "msg",
                                  },
                                },
                                id: 480,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "sender",
                                nodeType: "MemberAccess",
                                src: "5433:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5421:23:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 483,
                            indexExpression: {
                              id: 482,
                              name: "spender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 467,
                              src: "5445:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5421:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "+",
                          rightExpression: {
                            id: 484,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 469,
                            src: "5456:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5421:41:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 474,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "5354:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 486,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5354:118:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 487,
                    nodeType: "ExpressionStatement",
                    src: "5354:118:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 488,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5489:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 473,
                    id: 489,
                    nodeType: "Return",
                    src: "5482:11:0",
                  },
                ],
              },
              functionSelector: "39509351",
              id: 491,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "increaseAllowance",
              nameLocation: "5251:17:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 470,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 467,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "5277:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 491,
                    src: "5269:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 466,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "5269:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 469,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "5294:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 491,
                    src: "5286:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 468,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "5286:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5268:33:0",
              },
              returnParameters: {
                id: 473,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 472,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 491,
                    src: "5334:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 471,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "5334:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5333:6:0",
              },
              scope: 566,
              src: "5242:258:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 516,
                nodeType: "Block",
                src: "5608:156:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 501,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "5640:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 502,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "5640:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 503,
                          name: "spender",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 493,
                          src: "5664:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 511,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            baseExpression: {
                              baseExpression: {
                                id: 504,
                                name: "_allowances",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "5685:11:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  typeString:
                                    "mapping(address => mapping(address => uint256))",
                                },
                              },
                              id: 507,
                              indexExpression: {
                                expression: {
                                  id: 505,
                                  name: "msg",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967281,
                                  src: "5697:3:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_message",
                                    typeString: "msg",
                                  },
                                },
                                id: 506,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "sender",
                                nodeType: "MemberAccess",
                                src: "5697:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5685:23:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 509,
                            indexExpression: {
                              id: 508,
                              name: "spender",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 493,
                              src: "5709:7:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5685:32:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            id: 510,
                            name: "amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 495,
                            src: "5720:6:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5685:41:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 500,
                        name: "_approve",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 419,
                        src: "5618:8:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,address,uint256)",
                        },
                      },
                      id: 512,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5618:118:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 513,
                    nodeType: "ExpressionStatement",
                    src: "5618:118:0",
                  },
                  {
                    expression: {
                      hexValue: "74727565",
                      id: 514,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5753:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    functionReturnParameters: 499,
                    id: 515,
                    nodeType: "Return",
                    src: "5746:11:0",
                  },
                ],
              },
              functionSelector: "a457c2d7",
              id: 517,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "decreaseAllowance",
              nameLocation: "5515:17:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 496,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 493,
                    mutability: "mutable",
                    name: "spender",
                    nameLocation: "5541:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 517,
                    src: "5533:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    typeName: {
                      id: 492,
                      name: "address",
                      nodeType: "ElementaryTypeName",
                      src: "5533:7:0",
                      stateMutability: "nonpayable",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 495,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "5558:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 517,
                    src: "5550:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 494,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "5550:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5532:33:0",
              },
              returnParameters: {
                id: 499,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 498,
                    mutability: "mutable",
                    name: "",
                    nameLocation: "-1:-1:-1",
                    nodeType: "VariableDeclaration",
                    scope: 517,
                    src: "5598:4:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    typeName: {
                      id: 497,
                      name: "bool",
                      nodeType: "ElementaryTypeName",
                      src: "5598:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5597:6:0",
              },
              scope: 566,
              src: "5506:258:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 542,
                nodeType: "Block",
                src: "5809:331:0",
                statements: [
                  {
                    expression: {
                      arguments: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 528,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 523,
                            name: "_amount",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 519,
                            src: "5920:7:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "<=",
                          rightExpression: {
                            baseExpression: {
                              id: 524,
                              name: "_balances",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "5931:9:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_address_$_t_uint256_$",
                                typeString: "mapping(address => uint256)",
                              },
                            },
                            id: 527,
                            indexExpression: {
                              expression: {
                                id: 525,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "5941:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 526,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "5941:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "5931:21:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "5920:32:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          hexValue:
                            "446576546f6b656e3a2043616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e2e",
                          id: 529,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "string",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "5966:43:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50",
                            typeString:
                              'literal_string "DevToken: Cannot stake more than you own."',
                          },
                          value: "DevToken: Cannot stake more than you own.",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier:
                              "t_stringliteral_9f9e09f28211f7dec3afc730e2f249b966a4e57c7aebc29d3f5402d53b776d50",
                            typeString:
                              'literal_string "DevToken: Cannot stake more than you own."',
                          },
                        ],
                        id: 522,
                        name: "require",
                        nodeType: "Identifier",
                        overloadedDeclarations: [4294967278, 4294967278],
                        referencedDeclaration: 4294967278,
                        src: "5899:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          typeString: "function (bool,string memory) pure",
                        },
                      },
                      id: 530,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5899:120:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 531,
                    nodeType: "ExpressionStatement",
                    src: "5899:120:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          id: 533,
                          name: "_amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 519,
                          src: "6037:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 532,
                        name: "_stake",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 829,
                        src: "6030:6:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          typeString: "function (uint256)",
                        },
                      },
                      id: 534,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6030:15:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 535,
                    nodeType: "ExpressionStatement",
                    src: "6030:15:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 537,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "6113:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 538,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "6113:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 539,
                          name: "_amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 519,
                          src: "6125:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 536,
                        name: "_burn",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 255,
                        src: "6107:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 540,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6107:26:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 541,
                    nodeType: "ExpressionStatement",
                    src: "6107:26:0",
                  },
                ],
              },
              functionSelector: "a694fc3a",
              id: 543,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "stake",
              nameLocation: "5779:5:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 520,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 519,
                    mutability: "mutable",
                    name: "_amount",
                    nameLocation: "5793:7:0",
                    nodeType: "VariableDeclaration",
                    scope: 543,
                    src: "5785:15:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 518,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "5785:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "5784:17:0",
              },
              returnParameters: {
                id: 521,
                nodeType: "ParameterList",
                parameters: [],
                src: "5809:0:0",
              },
              scope: 566,
              src: "5770:370:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
            {
              body: {
                id: 564,
                nodeType: "Block",
                src: "6309:162:0",
                statements: [
                  {
                    assignments: [552],
                    declarations: [
                      {
                        constant: false,
                        id: 552,
                        mutability: "mutable",
                        name: "amount_to_mint",
                        nameLocation: "6327:14:0",
                        nodeType: "VariableDeclaration",
                        scope: 564,
                        src: "6319:22:0",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 551,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6319:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 557,
                    initialValue: {
                      arguments: [
                        {
                          id: 554,
                          name: "amount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 546,
                          src: "6359:6:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 555,
                          name: "stake_index",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 548,
                          src: "6367:11:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 553,
                        name: "_withdrawStake",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 921,
                        src: "6344:14:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          typeString:
                            "function (uint256,uint256) returns (uint256)",
                        },
                      },
                      id: 556,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6344:35:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6319:60:0",
                  },
                  {
                    expression: {
                      arguments: [
                        {
                          expression: {
                            id: 559,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "6437:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 560,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "6437:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 561,
                          name: "amount_to_mint",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 552,
                          src: "6449:14:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        ],
                        id: 558,
                        name: "_mint",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 186,
                        src: "6431:5:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          typeString: "function (address,uint256)",
                        },
                      },
                      id: 562,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "6431:33:0",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_tuple$__$",
                        typeString: "tuple()",
                      },
                    },
                    id: 563,
                    nodeType: "ExpressionStatement",
                    src: "6431:33:0",
                  },
                ],
              },
              documentation: {
                id: 544,
                nodeType: "StructuredDocumentation",
                src: "6146:91:0",
                text: " @notice withdrawStake is used to withdraw stakes from the account holder",
              },
              functionSelector: "f1fdf469",
              id: 565,
              implemented: true,
              kind: "function",
              modifiers: [],
              name: "withdrawStake",
              nameLocation: "6251:13:0",
              nodeType: "FunctionDefinition",
              parameters: {
                id: 549,
                nodeType: "ParameterList",
                parameters: [
                  {
                    constant: false,
                    id: 546,
                    mutability: "mutable",
                    name: "amount",
                    nameLocation: "6273:6:0",
                    nodeType: "VariableDeclaration",
                    scope: 565,
                    src: "6265:14:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 545,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "6265:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                  {
                    constant: false,
                    id: 548,
                    mutability: "mutable",
                    name: "stake_index",
                    nameLocation: "6289:11:0",
                    nodeType: "VariableDeclaration",
                    scope: 565,
                    src: "6281:19:0",
                    stateVariable: false,
                    storageLocation: "default",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    typeName: {
                      id: 547,
                      name: "uint256",
                      nodeType: "ElementaryTypeName",
                      src: "6281:7:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    visibility: "internal",
                  },
                ],
                src: "6264:37:0",
              },
              returnParameters: {
                id: 550,
                nodeType: "ParameterList",
                parameters: [],
                src: "6309:0:0",
              },
              scope: 566,
              src: "6242:229:0",
              stateMutability: "nonpayable",
              virtual: false,
              visibility: "public",
            },
          ],
          scope: 567,
          src: "107:6366:0",
          usedErrors: [],
        },
      ],
      src: "32:6442:0",
    },
    compiler: {
      name: "solc",
      version: "0.8.4+commit.c7e474f2.Emscripten.clang",
    },
    networks: {
      5777: {
        events: {
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":
            {
              anonymous: false,
              inputs: [
                {
                  indexed: true,
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  indexed: true,
                  internalType: "address",
                  name: "spender",
                  type: "address",
                },
                {
                  indexed: false,
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
              ],
              name: "Approval",
              type: "event",
            },
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":
            {
              anonymous: false,
              inputs: [
                {
                  indexed: true,
                  internalType: "address",
                  name: "previousOwner",
                  type: "address",
                },
                {
                  indexed: true,
                  internalType: "address",
                  name: "newOwner",
                  type: "address",
                },
              ],
              name: "OwnershipTransferred",
              type: "event",
            },
          "0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed":
            {
              anonymous: false,
              inputs: [
                {
                  indexed: true,
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  indexed: false,
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  indexed: false,
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  indexed: false,
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              name: "Staked",
              type: "event",
            },
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":
            {
              anonymous: false,
              inputs: [
                {
                  indexed: true,
                  internalType: "address",
                  name: "from",
                  type: "address",
                },
                {
                  indexed: true,
                  internalType: "address",
                  name: "to",
                  type: "address",
                },
                {
                  indexed: false,
                  internalType: "uint256",
                  name: "value",
                  type: "uint256",
                },
              ],
              name: "Transfer",
              type: "event",
            },
        },
        links: {},
        address: "0x7e073356194E5fB8A5a7936d7C8fcA3dF5E6F394",
        transactionHash:
          "0xc466d4ce02050a1fdb252835133eefa875a7c95d7787cc828cd6d319909c1410",
      },
    },
    schemaVersion: "3.4.4",
    updatedAt: "2022-03-07T22:41:48.949Z",
    networkType: "ethereum",
    devdoc: {
      kind: "dev",
      methods: {},
      version: 1,
    },
    userdoc: {
      events: {
        "Staked(address,uint256,uint256,uint256)": {
          notice:
            "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable",
        },
      },
      kind: "user",
      methods: {
        "hasStake(address)": {
          notice:
            "hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes",
        },
        "withdrawStake(uint256,uint256)": {
          notice:
            "withdrawStake is used to withdraw stakes from the account holder",
        },
      },
      version: 1,
    },
  },
];
